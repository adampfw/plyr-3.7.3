{"version":3,"sources":["demo.js","demo/src/js/tab-focus.js","demo/node_modules/custom-event-polyfill/polyfill.js","demo/node_modules/url-polyfill/url-polyfill.js","demo/node_modules/tslib/tslib.es6.js","demo/node_modules/@sentry/types/esm/severity.js","demo/node_modules/@sentry/types/esm/status.js","demo/node_modules/@sentry/utils/esm/polyfill.js","demo/node_modules/@sentry/utils/esm/error.js","demo/node_modules/@sentry/utils/esm/is.js","demo/node_modules/@sentry/utils/esm/string.js","demo/node_modules/@sentry/utils/esm/misc.js","demo/node_modules/@sentry/utils/esm/logger.js","demo/node_modules/@sentry/utils/esm/syncpromise.js","demo/node_modules/@sentry/utils/esm/memo.js","demo/node_modules/@sentry/utils/esm/object.js","demo/node_modules/@sentry/utils/esm/promisebuffer.js","demo/node_modules/@sentry/utils/esm/supports.js","demo/node_modules/@sentry/utils/esm/instrument.js","demo/node_modules/@sentry/utils/esm/dsn.js","demo/node_modules/@sentry/hub/esm/scope.js","demo/node_modules/@sentry/hub/esm/hub.js","demo/node_modules/@sentry/minimal/esm/index.js","demo/node_modules/@sentry/core/esm/api.js","demo/node_modules/@sentry/core/esm/integration.js","demo/node_modules/@sentry/core/esm/baseclient.js","demo/node_modules/@sentry/core/esm/integrations/functiontostring.js","demo/node_modules/@sentry/core/esm/transports/noop.js","demo/node_modules/@sentry/core/esm/basebackend.js","demo/node_modules/@sentry/core/esm/request.js","demo/node_modules/@sentry/core/esm/integrations/inboundfilters.js","demo/node_modules/@sentry/browser/esm/tracekit.js","demo/node_modules/@sentry/browser/esm/parsers.js","demo/node_modules/@sentry/browser/esm/eventbuilder.js","demo/node_modules/@sentry/browser/esm/transports/base.js","demo/node_modules/@sentry/browser/esm/transports/fetch.js","demo/node_modules/@sentry/browser/esm/transports/xhr.js","demo/node_modules/@sentry/browser/esm/backend.js","demo/node_modules/@sentry/browser/esm/helpers.js","demo/node_modules/@sentry/browser/esm/integrations/globalhandlers.js","demo/node_modules/@sentry/browser/esm/integrations/trycatch.js","demo/node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","demo/node_modules/@sentry/browser/esm/integrations/linkederrors.js","demo/node_modules/@sentry/browser/esm/integrations/useragent.js","demo/node_modules/@sentry/browser/esm/version.js","demo/node_modules/@sentry/browser/esm/client.js","demo/node_modules/@sentry/browser/esm/sdk.js","demo/node_modules/@sentry/core/esm/sdk.js","demo/node_modules/shr-buttons/dist/shr.mjs","node_modules/rangetouch/dist/rangetouch.mjs","src/js/utils/is.js","src/js/utils/animation.js","src/js/utils/browser.js","src/js/utils/objects.js","src/js/utils/elements.js","src/js/support.js","src/js/utils/events.js","src/js/utils/promise.js","src/js/utils/arrays.js","src/js/utils/style.js","src/js/html5.js","src/js/utils/strings.js","src/js/utils/i18n.js","src/js/storage.js","src/js/utils/fetch.js","src/js/utils/load-sprite.js","src/js/utils/time.js","src/js/controls.js","src/js/utils/urls.js","src/js/captions.js","src/js/config/defaults.js","src/js/config/states.js","src/js/config/types.js","src/js/console.js","src/js/fullscreen.js","src/js/utils/load-image.js","src/js/ui.js","src/js/listeners.js","node_modules/loadjs/dist/loadjs.umd.js","src/js/utils/load-script.js","src/js/plugins/vimeo.js","src/js/plugins/youtube.js","src/js/media.js","src/js/plugins/ads.js","src/js/utils/numbers.js","src/js/plugins/preview-thumbnails.js","src/js/source.js","src/js/plyr.js","demo/src/js/sources.js","demo/src/js/toggle-class.js","demo/src/js/demo.js"],"names":["navigator","container","document","getElementById","tabClassName","addEventListener","event","target","classList","contains","remove","key","setTimeout","focused","activeElement","add","window","ce","CustomEvent","cancelable","preventDefault","defaultPrevented","Error","e","params","evt","origPrevent","bubbles","createEvent","initCustomEvent","detail","call","this","Object","defineProperty","get","prototype","Event","commonjsGlobal","globalThis","global","self","iteratorSupported","Symbol","iterator","error","checkIfIteratorIsSupported","createIterator","items","next","value","shift","done","serializeParam","encodeURIComponent","replace","deserializeParam","decodeURIComponent","String","URLSearchParams","toString","set","entries","checkIfURLSearchParamsSupported","searchString","writable","typeofSearchString","_fromString","_this","forEach","name","append","TypeError","i","length","entry","hasOwnProperty","proto","_entries","push","delete","getAll","slice","has","callback","thisArg","keys","values","searchArray","join","polyfillURLSearchParams","sort","a","b","enumerable","configurable","attribute","attributes","split","u","URL","pathname","href","searchParams","checkIfURLIsSupported","_URL","url","base","baseElement","doc","location","implementation","createHTMLDocument","createElement","head","appendChild","indexOf","err","anchorElement","body","inputElement","type","protocol","test","checkValidity","search","enableSearchUpdate","enableSearchParamsUpdate","methodName","method","apply","arguments","attributeName","_anchorElement","linkURLWithAnchorAttribute","_updateSearchParams","defineProperties","origin","expectedPort","addPortToOrigin","port","hostname","password","username","createObjectURL","blob","revokeObjectURL","polyfillURL","getOrigin","setInterval","extendStatics","d","setPrototypeOf","__proto__","Array","p","__extends","__","constructor","create","Severity","Status","__assign","assign","t","s","n","__read","o","m","r","ar","__spread","concat","level","Debug","Info","Warning","Fatal","Critical","Log","code","Success","RateLimit","Invalid","Failed","Unknown","obj","prop","SentryError","_super","message","_newTarget","isError","wat","isInstanceOf","isErrorEvent","isDOMError","isString","isPrimitive","isPlainObject","isEvent","isElement","Element","isThenable","Boolean","then","_e","truncate","str","max","substr","safeJoin","input","delimiter","isArray","output","isMatchingPattern","pattern","isNodeEnv","process","fallbackGlobalObject","getGlobalObject","uuid4","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","c","Math","random","parseUrl","match","query","fragment","host","path","relative","getEventDescription","exception","event_id","consoleSandbox","originalConsole","console","wrappedLevels","__sentry_original__","result","addExceptionTypeValue","addExceptionMechanism","mechanism","_oO","htmlTreeAsString","elem","currentElem","out","height","len","sepLength","nextStr","_htmlElementAsString","parentNode","reverse","el","className","classes","attr","tagName","toLowerCase","id","allowedAttrs","getAttribute","INITIAL_TIME","Date","now","prevNow","performanceFallback","timeOrigin","crossPlatformPerformance","mod","module","request","require","performance","_","undefined","timing","navigationStart","timestampWithMs","parseRetryAfterHeader","header","headerDelay","parseInt","isNaN","headerDate","parse","defaultFunctionName","getFunctionName","fn","PREFIX","Logger","_enabled","args","_i","log","warn","__SENTRY__","States","logger","Memo","_hasWeakSet","WeakSet","_inner","memoize","unmemoize","splice","fill","source","replacement","original","wrapped","_Oo","getWalkSource","stack","event_1","currentTarget","jsonSize","encodeURI","utf8Length","JSON","stringify","normalizeToSize","object","depth","maxSize","serialized","normalize","normalizeValue","_events","walk","memo","Infinity","normalized","serializeValue","toJSON","acc","innerKey","extractExceptionKeysForMessage","maxLength","includedKeys","SyncPromise","executor","_state","PENDING","_handlers","_resolve","_setResult","RESOLVED","_reject","reason","REJECTED","state","_value","_executeHandlers","_attachHandler","handler","cachedHandlers","onfulfilled","onrejected","resolve","reject","all","collection","counter","resolvedCollection","item","index","catch","val","finally","onfinally","isRejected","PromiseBuffer","_limit","_buffer","task","isReady","drain","timeout","capturedSetTimeout","clearTimeout","supportsFetch","Headers","Request","Response","isNativeFetch","func","supportsReferrerPolicy","referrerPolicy","lastHref","handlers","instrumented","instrument","originalConsoleLevel","triggerHandlers","Function","instrumentConsole","domEventHandler","bind","keypressEventHandler","eventName","options","handleEvent","innerOriginal","__sentry_wrapped__","instrumentDOM","xhrproto","XMLHttpRequest","originalOpen","xhr","__sentry_xhr__","toUpperCase","__sentry_own_request__","onreadystatechangeHandler","readyState","status_code","status","endTimestamp","startTimestamp","onreadystatechange","readyStateArgs","originalSend","instrumentXHR","fetch","sandbox","hidden","contentWindow","removeChild","supportsNativeFetch","originalFetch","commonHandlerData","fetchData","getFetchMethod","getFetchUrl","response","instrumentFetch","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","history","pushState","replaceState","supportsHistory","oldOnPopState","onpopstate","historyReplacementFunction","originalHistoryFunction","from","to","instrumentHistory","_oldOnErrorHandler","onerror","msg","line","column","_oldOnUnhandledRejectionHandler","onunhandledrejection","addInstrumentationHandler","data","e_1","_a","_b","__values","_c","e_1_1","return","fetchArgs","keypressTimeout","lastCapturedEvent","debounceTimer","debounce","isContentEditable","DSN_REGEX","ERROR_MESSAGE","Dsn","_fromComponents","_validate","withPassword","pass","projectId","user","exec","pop","projectMatch","components","component","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_contexts","clone","scope","newScope","_level","_span","_transactionName","_fingerprint","addScopeListener","addEventProcessor","setUser","_notifyScopeListeners","setTags","tags","setExtras","extras","extra","setFingerprint","fingerprint","setLevel","setTransactionName","setTransaction","context","setSpan","span","getSpan","spanRecorder","spans","update","captureContext","updatedScope","contexts","breadcrumb","maxBreadcrumbs","mergedBreadcrumb","timestamp","hint","transaction","trace","getTraceContext","_applyFingerprint","breadcrumbs","_notifyEventProcessors","getGlobalEventProcessors","processors","processor","final","globalEventProcessors","addGlobalEventProcessor","Hub","client","_version","_stack","bindClient","isOlderThan","version","getStackTop","setupIntegrations","getStack","parentScope","getClient","withScope","pushScope","popScope","eventId","_lastEventId","finalHint","syntheticException","originalException","_invokeClient","top","getOptions","beforeBreadcrumb","finalBreadcrumb","addBreadcrumb","min","setTag","setExtra","setContext","configureScope","run","oldHub","makeMain","getIntegration","integration","startSpan","_callExtensionMethod","startTransaction","carrier","getMainCarrier","sentry","extensions","hub","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","hasHubOnCarrier","property","activeDomain","active","registryHubTopStack","getHubFromActiveDomain","callOnHub","captureException","API","dsn","_dsnObject","_getIngestEndpoint","getStoreEndpoint","_encodedAuth","_getEnvelopeEndpoint","clientName","clientVersion","getReportDialogEndpoint","dialogOptions","endpoint","getBaseApiEndpoint","encodedOptions","email","auth","sentry_key","sentry_version","map","installedIntegrations","integrations","defaultIntegrations","userIntegrations","userIntegrationsNames_1","pickedIntegrationsNames_1","defaultIntegration","userIntegration","integrationsNames","alwaysLastToRun","getIntegrationsToSetup","setupOnce","setupIntegration","originalFunctionToString","BaseClient","backendClass","_integrations","_processing","_backend","_options","_dsn","_getBackend","eventFromException","captureEvent","captureMessage","eventFromMessage","_processEvent","finalEvent","flush","_isClientProcessing","clearInterval","interval","getTransport","close","transportFlushed","ready","enabled","_isEnabled","ticked","normalizeDepth","prepared","_applyClientOptions","_applyIntegrationsMetadata","finalScope","applyToEvent","_normalizeEvent","environment","release","dist","maxValueLength","sdkInfo","sdk","integrationsArray","_sendEvent","sendEvent","beforeSend","sampleRate","isTransaction","_prepareEvent","__sentry__","beforeSendResult","_handleAsyncBeforeSend","processedEvent","NoopTransport","Skipped","BaseBackend","_transport","_setupTransport","_exception","_hint","_message","eventToSentryRequest","api","useEnvelope","req","getEnvelopeEndpointWithUrlEncodedAuth","getStoreEndpointWithUrlEncodedAuth","envelope","sent_at","toISOString","FunctionToString","DEFAULT_IGNORE_ERRORS","InboundFilters","clientOptions","_mergeOptions","_shouldDropEvent","_isSentryError","_isIgnoredError","_isDeniedUrl","_getEventFilterUrl","_isAllowedUrl","ignoreInternal","ignoreErrors","_getPossibleEventMessages","some","denyUrls","allowUrls","whitelistUrls","blacklistUrls","oO","stacktrace","frames_1","frames","filename","frames_2","UNKNOWN_FUNCTION","gecko","winjs","geckoEval","chromeEval","reactMinifiedRegexp","computeStackTrace","ex","popSize","framesToPop","parts","opera10Regex","opera11Regex","lines","element","extractMessage","computeStackTraceFromStacktraceProp","popFrames","submatch","isNative","columnNumber","computeStackTraceFromStackProp","failed","exceptionFromStacktrace","prepareFramesForEvent","eventFromStacktrace","localStack","firstFrameFunction","lastFrameFunction","frame","colno","function","in_app","lineno","eventFromUnknownInput","domException","name_1","eventFromString","rejection","__serialized__","eventFromPlainObject","synthetic","attachStacktrace","BaseTransport","_api","FetchTransport","_disabledUntil","Promise","sentryReq","fetchParameters","headers","fromHttpCode","retryAfterHeader","XHRTransport","getResponseHeader","open","setRequestHeader","send","BrowserBackend","handled","transportOptions","transport","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","before","sentryWrapped","wrappedArguments","arg","getOwnPropertyDescriptor","injectReportDialog","script","async","src","onLoad","onload","GlobalHandlers","_onErrorHandlerInstalled","_onUnhandledRejectionHandlerInstalled","stackTraceLimit","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","currentHub","hasIntegration","isFailedOwnDelivery","_eventFromIncompleteOnError","_enhanceEventWithInitialFrame","_eventFromIncompleteRejection","groups","getLocationHref","DEFAULT_EVENT_TARGET","TryCatch","eventTarget","requestAnimationFrame","_wrapTimeFunction","_wrapRAF","_wrapXHR","_wrapEventTarget","originalCallback","xmlHttpRequestProps","wrapOptions","Breadcrumbs","dom","addSentryBreadcrumb","category","_consoleBreadcrumb","_domBreadcrumb","_xhrBreadcrumb","_fetchBreadcrumb","_historyBreadcrumb","handlerData","fromString","parsedLoc","parsedFrom","parsedTo","LinkedErrors","_key","limit","_handler","linkedErrors","_walkErrorTree","UserAgent","userAgent","SDK_VERSION","BrowserClient","showReportDialog","getDsn","platform","packages","CoreIntegrations","init","window_1","SENTRY_RELEASE","clientClass","debug","enable","initAndBind","_classCallCheck","_defineProperties","_createClass","_defineProperty","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","getConstructor","instanceOf","isNullOrUndefined","isObject","isNodeList","NodeList","is","Number","constants","facebook","domain","shareCount","og_object","engagement","count","popup","width","twitter","pinterest","github","stargazers_count","youtube","statistics","subscriberCount","defaults","wrapper","displayZero","format","position","increment","tokens","storage","ttl","getJSONP","round","setAttribute","noop","Console","matches","querySelectorAll","includes","cloneNode","nextSibling","insertBefore","filter","setAttributes","innerText","formatNumber","toLocaleString","RegExp","extend","Storage","supported","localStorage","getItem","setItem","removeItem","Shr","elements","trigger","querySelector","shr","config","networks","getCount","updateDisplay","listeners","share","openPopup","network","networkConfig","closed","focus","screenLeft","screen","left","screenTop","apiUrl","textContent","class","insertAdjacentElement","find","getDomain","substring","watch","MutationObserver","addedNodes","observe","childList","subtree","_defineProperty$1","ownKeys","getOwnPropertySymbols","_objectSpread2","getOwnPropertyDescriptors","addCSS","thumbWidth","getDecimalPlaces","parseFloat","toFixed","RangeTouch","rangeTouch","style","userSelect","webKitUserSelect","touchAction","changedTouches","getBoundingClientRect","clientX","disabled","dispatchEvent","documentElement","isFunction","isEmpty","nodeType","ownerDocument","KeyboardEvent","TextTrack","kind","string","startsWith","transitionEndEvent","events","WebkitTransition","MozTransition","OTransition","transition","repaint","delay","offsetHeight","browser","isIE","documentMode","isEdge","isWebkit","isIPhone","maxTouchPoints","isIos","getDeep","reduce","sources","targets","child","parent","sibling","text","insertElement","removeElement","emptyElement","childNodes","lastChild","replaceElement","newChild","oldChild","replaceChild","getAttributesFromSelector","sel","existingAttributes","existing","selector","trim","charAt","toggleHidden","hide","toggleClass","force","hasClass","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","getElements","getElement","setFocus","tabFocus","preventScroll","classNames","defaultCodecs","support","audio","video","check","provider","playsinline","canPlayInline","ui","rangeInput","pip","webkitSetPresentationMode","pictureInPictureEnabled","disablePictureInPicture","airplay","WebKitPlaybackTargetAvailabilityEvent","mime","mediaType","isHTML5","media","canPlayType","textTracks","range","touch","transitions","reducedMotion","matchMedia","supportsPassiveListeners","removeEventListener","toggleListener","toggle","passive","capture","eventListeners","on","off","once","onceCallback","triggerEvent","plyr","unbindListeners","silencePromise","dedupe","array","closest","prev","curr","abs","supportsCSS","declaration","CSS","supports","standardRatios","x","y","validateAspectRatio","every","reduceAspectRatio","ratio","getDivider","w","h","divider","getAspectRatio","embed","videoWidth","videoHeight","setAspectRatio","isVideo","padding","aspectRatio","paddingBottom","isVimeo","vimeo","premium","offsetWidth","getComputedStyle","offset","fullscreen","transform","videoFixedRatio","roundAspectRatio","tolerance","closestRatio","html5","getSources","getQualityOptions","quality","forced","setup","player","speed","onChange","currentTime","paused","preload","playbackRate","play","load","cancelRequests","blankVideo","replaceAll","toTitleCase","toCamelCase","toPascalCase","getHTML","innerHTML","resources","i18n","seekTime","title","k","store","json","responseType","responseText","loadSprite","hasId","isCached","exists","useStorage","cached","content","getHours","trunc","formatTime","time","displayHours","inverted","hours","mins","secs","getSeconds","controls","getIconUrl","iconUrl","cors","svg4everybody","findElements","selectors","buttons","pause","restart","rewind","fastForward","mute","settings","captions","progress","inputs","seek","volume","display","buffer","duration","seekTooltip","tooltip","toggleNativeControls","createIcon","namespace","iconPath","iconPrefix","icon","createElementNS","focusable","use","setAttributeNS","createLabel","createBadge","badge","menu","createButton","buttonType","props","label","labelPressed","iconPressed","control","button","createRange","step","autocomplete","role","updateRangeFill","createProgress","suffixKey","played","suffix","createTime","attrs","bindMenuItemShortcuts","menuItem","stopPropagation","isRadioButton","showMenuPanel","nextElementSibling","firstElementChild","previousElementSibling","lastElementChild","focusFirstMenuItem","createMenuItem","list","checked","flex","children","node","currentTrack","updateTimeDisplay","updateVolume","setRange","muted","pressed","updateProgress","setProgress","getElementsByTagName","nodeValue","current","buffered","percent","setProperty","updateSeekTooltip","_this$config$markers","_this$config$markers$","tooltips","tipElement","visible","show","clientRect","pageX","point","markers","points","insertAdjacentHTML","timeUpdate","invert","invertTime","seeking","durationUpdate","hasDuration","displayDuration","setMarkers","toggleMenuButton","setting","updateSetting","pane","panels","default","getLabel","setQualityMenu","checkMenu","getBadge","sorting","setCaptionsMenu","tracks","getTracks","track","toggled","language","unshift","setSpeedMenu","minimumSpeed","maximumSpeed","firstItem","toggleMenu","composedPath","isMenuItem","getMenuSize","tab","opacity","removeAttribute","scrollWidth","scrollHeight","size","restore","propertyName","setDownloadUrl","download","defaultAttributes","progressContainer","inner","home","backButton","urls","isEmbed","inject","floor","seektime","addProperty","controlPressed","labels","setMediaMetadata","mediaSession","metadata","MediaMetadata","mediaMetadata","artist","album","artwork","_this$config$markers2","_this$config$markers3","containerFragment","createDocumentFragment","pointsFragment","tipVisible","toggleTip","markerElement","marker","tip","safe","parser","buildUrlParams","isYouTube","languages","userLanguage","trackEvents","meta","currentTrackNode","languageExists","mode","updateCues","setLanguage","activeClass","findTrack","enableTextTrack","sortIsDefault","sorted","getCurrentTrack","cues","activeCues","cue","getCueAsHTML","cueText","caption","autoplay","autopause","toggleInvert","clickToPlay","hideControls","resetOnEnd","disableContextMenu","loop","selected","keyboard","fallback","iosNative","seekLabel","unmute","enableCaptions","disableCaptions","enterFullscreen","exitFullscreen","frameTitle","menuBack","normal","start","end","reset","advertisement","qualityBadge","iframe","googleIMA","editable","embedContainer","poster","posterEnabled","ads","playing","stopped","loading","hover","isTouch","uiSupported","noTransition","previewThumbnails","thumbContainer","thumbContainerShown","imageContainer","timeContainer","scrubbingContainer","scrubbingContainerShown","hash","publisherId","tagUrl","byline","portrait","transparent","customControls","rel","showinfo","iv_load_policy","modestbranding","noCookie","providers","types","Fullscreen","scrollPosition","scrollX","scrollY","scrollTo","overflow","viewport","hasProperty","cleanupViewport","part","first","last","shiftKey","forceFallback","native","requestFullscreen","webkitEnterFullscreen","toggleFallback","prefix","navigationUI","webkitExitFullscreen","action","cancelFullScreen","exit","enter","parentElement","proxy","trapFocus","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","usingNative","pre","getRootNode","fullscreenElement","shadowRoot","loadImage","minWidth","image","Image","naturalWidth","addStyleHook","build","checkPlaying","setTitle","setPoster","togglePoster","dataset","posterLazyload","bg","backgroundSize","backgroundImage","toggleControls","checkLoading","timers","controlsElement","recentTouchSeek","lastSeekTime","migrateStyles","getPropertyValue","removeProperty","Listeners","timeStamp","focusTimer","lastKeyDown","wasKeyDown","removeCurrent","handleKey","firstTouch","setTabFocus","setGutter","useNativeAspectRatio","maxWidth","margin","viewportWidth","viewportHeight","clientWidth","innerWidth","clientHeight","innerHeight","resized","isAudio","ended","togglePlay","proxyEvents","defaultHandler","customHandlerKey","customHandler","returned","hasCustomHandler","inputEvent","forward","toggleCaptions","rect","hasAttribute","seekTo","loaded","startMove","endMove","startScrubbing","endScrubbing","webkitDirectionInvertedFromDevice","deltaX","deltaY","direction","sign","increaseVolume","lastKey","altKey","ctrlKey","metaKey","repeat","decreaseVolume","loadjs_umd","exports","createCommonjsModule","devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","subscribe","bundleIds","callbackFn","bundleId","depsNotFound","numWaiting","pathsNotFound","publish","q","executeCallbacks","success","loadFile","numTries","isLegacyIECss","maxTries","numRetries","beforeCallbackFn","pathStripped","relList","as","onbeforeload","ev","sheet","cssText","loadFiles","paths","loadjs","arg1","arg2","loadFn","returnPromise","deps","isDefined","factory","loadScript","assurePlaybackState","hasPlayed","Vimeo","frameParams","found","parseHash","hashParam","sidedock","gesture","$2","thumbnail_url","Player","disableTextTrack","stop","restorePause","setVolume","setCurrentTime","setPlaybackRate","currentSrc","setLoop","getVideoUrl","getVideoWidth","getVideoHeight","dimensions","setAutopause","getVideoTitle","getCurrentTime","getDuration","getTextTracks","strippedCues","firstChild","stripHTML","getPaused","seconds","getHost","YT","onYouTubeIframeAPIReady","getTitle","videoId","currentId","posterSrc","playerVars","hl","disablekb","cc_load_policy","cc_lang_pref","widget_referrer","onError","onPlaybackRateChange","instance","getPlaybackRate","onReady","playVideo","pauseVideo","stopVideo","speeds","getAvailablePlaybackRates","buffering","getVideoLoadedFraction","lastBuffered","onStateChange","unMute","Ads","google","ima","manager","destroy","displayContainer","startSafetyTimer","managerPromise","clearSafetyTimer","setupIMA","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","setLocale","setDisableCustomPlaybackForIOS10Plus","AdDisplayContainer","loader","AdsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","requestAds","AdsRequest","adTagUrl","linearAdSlotWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","forceNonLinearFullSlot","setAdWillPlayMuted","countdownTimer","getRemainingTime","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","enablePreloading","getAdsManager","cuePoints","getCuePoints","AdEvent","onAdEvent","cuePoint","seekElement","cuePercentage","ad","getAd","adData","getAdData","LOADED","pollCountdown","isLinear","STARTED","ALL_ADS_COMPLETED","loadAds","contentComplete","CONTENT_PAUSE_REQUESTED","pauseContent","CONTENT_RESUME_REQUESTED","resumeContent","LOG","adError","getMessage","cancel","addCuePoints","seekedTime","discardAdBreak","resize","ViewMode","NORMAL","initialize","initialized","zIndex","safetyTimer","AV_PUBLISHERID","AV_CHANNELID","AV_URL","cb","AV_WIDTH","AV_HEIGHT","AV_CDIM2","clamp","parseVtt","vttDataString","processedList","startTime","lineSplit","matchTimes","endTime","fitRatio","outer","PreviewThumbnails","getThumbnails","render","determineContainerAutoSizing","sortAndResolve","thumbnails","promises","getThumbnail","thumbnail","urlPrefix","lastIndexOf","tempImage","naturalHeight","_this$player$config$m","_this$player$config$m2","percentage","mousePosX","thumb","showImageAtCurrentTime","toggleThumbContainer","mouseDown","toggleScrubbingContainer","ceil","lastTime","scrubbing","setScrubbingContainerSize","setThumbContainerSizeAndPos","thumbNum","findIndex","hasThumb","qualityIndex","loadedImages","showingThumb","thumbFilename","thumbUrl","currentImageElement","showImage","removeOldImages","loadingImage","usingSprites","previewImage","showingThumbFilename","newImage","setImageSizeAndOffset","currentImageContainer","preloadNearby","getHigherQuality","currentImage","removeDelay","deleting","oldThumbFilename","thumbnailsClone","foundOne","newThumbFilename","thumbURL","currentQualityIndex","previewImageHeight","thumbContainerHeight","clearShowing","sizeSpecifiedInCSS","thumbAspectRatio","thumbHeight","setThumbContainerPos","scrubberRect","containerRect","right","clamped","multiplier","lastMouseMoveTime","currentScrubbingImageElement","currentThumbnailImageElement","insertElements","change","crossorigin","Plyr","webkitShowPlaybackTargetPicker","isHidden","hiding","soft","unload","jQuery","WeakMap","getProviderByUrl","truthy","tabindex","inputIsValid","fauxDuration","realDuration","hasAudio","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","updateStorage","requestPictureInPicture","exitPictureInPicture","webkitPresentationMode","pictureInPictureElement","setPreviewThumbnails","thumbnailSource","static","inline","srclang","production","Sentry","historySupport","currentType","hasInitialType","cite","setSource"],"mappings":"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","file":"demo.min.js","sourcesContent":["typeof navigator === \"object\" && (function () {\n  'use strict';\n\n  // Setup tab focus\n  const container = document.getElementById('container');\n  const tabClassName = 'tab-focus';\n\n  // Remove class on blur\n  document.addEventListener('focusout', event => {\n    if (!event.target.classList || container.contains(event.target)) {\n      return;\n    }\n    event.target.classList.remove(tabClassName);\n  });\n\n  // Add classname to tabbed elements\n  document.addEventListener('keydown', event => {\n    if (event.key !== 'Tab') {\n      return;\n    }\n\n    // Delay the adding of classname until the focus has changed\n    // This event fires before the focusin event\n    setTimeout(() => {\n      const focused = document.activeElement;\n      if (!focused || !focused.classList || container.contains(focused)) {\n        return;\n      }\n      focused.classList.add(tabClassName);\n    }, 10);\n  });\n\n  // Polyfill for creating CustomEvents on IE9/10/11\n\n  // code pulled from:\n  // https://github.com/d4tocchini/customevent-polyfill\n  // https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\n  (function () {\n    if (typeof window === 'undefined') {\n      return;\n    }\n    try {\n      var ce = new window.CustomEvent('test', {\n        cancelable: true\n      });\n      ce.preventDefault();\n      if (ce.defaultPrevented !== true) {\n        // IE has problems with .preventDefault() on custom events\n        // http://stackoverflow.com/questions/23349191\n        throw new Error('Could not prevent default');\n      }\n    } catch (e) {\n      var CustomEvent = function (event, params) {\n        var evt, origPrevent;\n        params = params || {};\n        params.bubbles = !!params.bubbles;\n        params.cancelable = !!params.cancelable;\n        evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        origPrevent = evt.preventDefault;\n        evt.preventDefault = function () {\n          origPrevent.call(this);\n          try {\n            Object.defineProperty(this, 'defaultPrevented', {\n              get: function () {\n                return true;\n              }\n            });\n          } catch (e) {\n            this.defaultPrevented = true;\n          }\n        };\n        return evt;\n      };\n      CustomEvent.prototype = window.Event.prototype;\n      window.CustomEvent = CustomEvent; // expose definition to window\n    }\n  })();\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  (function (global) {\n    /**\r\n     * Polyfill URLSearchParams\r\n     *\r\n     * Inspired from : https://github.com/WebReflection/url-search-params/blob/master/src/url-search-params.js\r\n     */\n\n    var checkIfIteratorIsSupported = function () {\n      try {\n        return !!Symbol.iterator;\n      } catch (error) {\n        return false;\n      }\n    };\n    var iteratorSupported = checkIfIteratorIsSupported();\n    var createIterator = function (items) {\n      var iterator = {\n        next: function () {\n          var value = items.shift();\n          return {\n            done: value === void 0,\n            value: value\n          };\n        }\n      };\n      if (iteratorSupported) {\n        iterator[Symbol.iterator] = function () {\n          return iterator;\n        };\n      }\n      return iterator;\n    };\n\n    /**\r\n     * Search param name and values should be encoded according to https://url.spec.whatwg.org/#urlencoded-serializing\r\n     * encodeURIComponent() produces the same result except encoding spaces as `%20` instead of `+`.\r\n     */\n    var serializeParam = function (value) {\n      return encodeURIComponent(value).replace(/%20/g, '+');\n    };\n    var deserializeParam = function (value) {\n      return decodeURIComponent(String(value).replace(/\\+/g, ' '));\n    };\n    var polyfillURLSearchParams = function () {\n      var URLSearchParams = function (searchString) {\n        Object.defineProperty(this, '_entries', {\n          writable: true,\n          value: {}\n        });\n        var typeofSearchString = typeof searchString;\n        if (typeofSearchString === 'undefined') ; else if (typeofSearchString === 'string') {\n          if (searchString !== '') {\n            this._fromString(searchString);\n          }\n        } else if (searchString instanceof URLSearchParams) {\n          var _this = this;\n          searchString.forEach(function (value, name) {\n            _this.append(name, value);\n          });\n        } else if (searchString !== null && typeofSearchString === 'object') {\n          if (Object.prototype.toString.call(searchString) === '[object Array]') {\n            for (var i = 0; i < searchString.length; i++) {\n              var entry = searchString[i];\n              if (Object.prototype.toString.call(entry) === '[object Array]' || entry.length !== 2) {\n                this.append(entry[0], entry[1]);\n              } else {\n                throw new TypeError('Expected [string, any] as entry at index ' + i + ' of URLSearchParams\\'s input');\n              }\n            }\n          } else {\n            for (var key in searchString) {\n              if (searchString.hasOwnProperty(key)) {\n                this.append(key, searchString[key]);\n              }\n            }\n          }\n        } else {\n          throw new TypeError('Unsupported input\\'s type for URLSearchParams');\n        }\n      };\n      var proto = URLSearchParams.prototype;\n      proto.append = function (name, value) {\n        if (name in this._entries) {\n          this._entries[name].push(String(value));\n        } else {\n          this._entries[name] = [String(value)];\n        }\n      };\n      proto.delete = function (name) {\n        delete this._entries[name];\n      };\n      proto.get = function (name) {\n        return name in this._entries ? this._entries[name][0] : null;\n      };\n      proto.getAll = function (name) {\n        return name in this._entries ? this._entries[name].slice(0) : [];\n      };\n      proto.has = function (name) {\n        return name in this._entries;\n      };\n      proto.set = function (name, value) {\n        this._entries[name] = [String(value)];\n      };\n      proto.forEach = function (callback, thisArg) {\n        var entries;\n        for (var name in this._entries) {\n          if (this._entries.hasOwnProperty(name)) {\n            entries = this._entries[name];\n            for (var i = 0; i < entries.length; i++) {\n              callback.call(thisArg, entries[i], name, this);\n            }\n          }\n        }\n      };\n      proto.keys = function () {\n        var items = [];\n        this.forEach(function (value, name) {\n          items.push(name);\n        });\n        return createIterator(items);\n      };\n      proto.values = function () {\n        var items = [];\n        this.forEach(function (value) {\n          items.push(value);\n        });\n        return createIterator(items);\n      };\n      proto.entries = function () {\n        var items = [];\n        this.forEach(function (value, name) {\n          items.push([name, value]);\n        });\n        return createIterator(items);\n      };\n      if (iteratorSupported) {\n        proto[Symbol.iterator] = proto.entries;\n      }\n      proto.toString = function () {\n        var searchArray = [];\n        this.forEach(function (value, name) {\n          searchArray.push(serializeParam(name) + '=' + serializeParam(value));\n        });\n        return searchArray.join('&');\n      };\n      global.URLSearchParams = URLSearchParams;\n    };\n    var checkIfURLSearchParamsSupported = function () {\n      try {\n        var URLSearchParams = global.URLSearchParams;\n        return new URLSearchParams('?a=1').toString() === 'a=1' && typeof URLSearchParams.prototype.set === 'function' && typeof URLSearchParams.prototype.entries === 'function';\n      } catch (e) {\n        return false;\n      }\n    };\n    if (!checkIfURLSearchParamsSupported()) {\n      polyfillURLSearchParams();\n    }\n    var proto = global.URLSearchParams.prototype;\n    if (typeof proto.sort !== 'function') {\n      proto.sort = function () {\n        var _this = this;\n        var items = [];\n        this.forEach(function (value, name) {\n          items.push([name, value]);\n          if (!_this._entries) {\n            _this.delete(name);\n          }\n        });\n        items.sort(function (a, b) {\n          if (a[0] < b[0]) {\n            return -1;\n          } else if (a[0] > b[0]) {\n            return +1;\n          } else {\n            return 0;\n          }\n        });\n        if (_this._entries) {\n          // force reset because IE keeps keys index\n          _this._entries = {};\n        }\n        for (var i = 0; i < items.length; i++) {\n          this.append(items[i][0], items[i][1]);\n        }\n      };\n    }\n    if (typeof proto._fromString !== 'function') {\n      Object.defineProperty(proto, '_fromString', {\n        enumerable: false,\n        configurable: false,\n        writable: false,\n        value: function (searchString) {\n          if (this._entries) {\n            this._entries = {};\n          } else {\n            var keys = [];\n            this.forEach(function (value, name) {\n              keys.push(name);\n            });\n            for (var i = 0; i < keys.length; i++) {\n              this.delete(keys[i]);\n            }\n          }\n          searchString = searchString.replace(/^\\?/, '');\n          var attributes = searchString.split('&');\n          var attribute;\n          for (var i = 0; i < attributes.length; i++) {\n            attribute = attributes[i].split('=');\n            this.append(deserializeParam(attribute[0]), attribute.length > 1 ? deserializeParam(attribute[1]) : '');\n          }\n        }\n      });\n    }\n\n    // HTMLAnchorElement\n  })(typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : commonjsGlobal);\n  (function (global) {\n    /**\r\n     * Polyfill URL\r\n     *\r\n     * Inspired from : https://github.com/arv/DOM-URL-Polyfill/blob/master/src/url.js\r\n     */\n\n    var checkIfURLIsSupported = function () {\n      try {\n        var u = new global.URL('b', 'http://a');\n        u.pathname = 'c d';\n        return u.href === 'http://a/c%20d' && u.searchParams;\n      } catch (e) {\n        return false;\n      }\n    };\n    var polyfillURL = function () {\n      var _URL = global.URL;\n      var URL = function (url, base) {\n        if (typeof url !== 'string') url = String(url);\n\n        // Only create another document if the base is different from current location.\n        var doc = document,\n          baseElement;\n        if (base && (global.location === void 0 || base !== global.location.href)) {\n          doc = document.implementation.createHTMLDocument('');\n          baseElement = doc.createElement('base');\n          baseElement.href = base;\n          doc.head.appendChild(baseElement);\n          try {\n            if (baseElement.href.indexOf(base) !== 0) throw new Error(baseElement.href);\n          } catch (err) {\n            throw new Error('URL unable to set base ' + base + ' due to ' + err);\n          }\n        }\n        var anchorElement = doc.createElement('a');\n        anchorElement.href = url;\n        if (baseElement) {\n          doc.body.appendChild(anchorElement);\n          anchorElement.href = anchorElement.href; // force href to refresh\n        }\n\n        var inputElement = doc.createElement('input');\n        inputElement.type = 'url';\n        inputElement.value = url;\n        if (anchorElement.protocol === ':' || !/:/.test(anchorElement.href) || !inputElement.checkValidity() && !base) {\n          throw new TypeError('Invalid URL');\n        }\n        Object.defineProperty(this, '_anchorElement', {\n          value: anchorElement\n        });\n\n        // create a linked searchParams which reflect its changes on URL\n        var searchParams = new global.URLSearchParams(this.search);\n        var enableSearchUpdate = true;\n        var enableSearchParamsUpdate = true;\n        var _this = this;\n        ['append', 'delete', 'set'].forEach(function (methodName) {\n          var method = searchParams[methodName];\n          searchParams[methodName] = function () {\n            method.apply(searchParams, arguments);\n            if (enableSearchUpdate) {\n              enableSearchParamsUpdate = false;\n              _this.search = searchParams.toString();\n              enableSearchParamsUpdate = true;\n            }\n          };\n        });\n        Object.defineProperty(this, 'searchParams', {\n          value: searchParams,\n          enumerable: true\n        });\n        var search = void 0;\n        Object.defineProperty(this, '_updateSearchParams', {\n          enumerable: false,\n          configurable: false,\n          writable: false,\n          value: function () {\n            if (this.search !== search) {\n              search = this.search;\n              if (enableSearchParamsUpdate) {\n                enableSearchUpdate = false;\n                this.searchParams._fromString(this.search);\n                enableSearchUpdate = true;\n              }\n            }\n          }\n        });\n      };\n      var proto = URL.prototype;\n      var linkURLWithAnchorAttribute = function (attributeName) {\n        Object.defineProperty(proto, attributeName, {\n          get: function () {\n            return this._anchorElement[attributeName];\n          },\n          set: function (value) {\n            this._anchorElement[attributeName] = value;\n          },\n          enumerable: true\n        });\n      };\n      ['hash', 'host', 'hostname', 'port', 'protocol'].forEach(function (attributeName) {\n        linkURLWithAnchorAttribute(attributeName);\n      });\n      Object.defineProperty(proto, 'search', {\n        get: function () {\n          return this._anchorElement['search'];\n        },\n        set: function (value) {\n          this._anchorElement['search'] = value;\n          this._updateSearchParams();\n        },\n        enumerable: true\n      });\n      Object.defineProperties(proto, {\n        'toString': {\n          get: function () {\n            var _this = this;\n            return function () {\n              return _this.href;\n            };\n          }\n        },\n        'href': {\n          get: function () {\n            return this._anchorElement.href.replace(/\\?$/, '');\n          },\n          set: function (value) {\n            this._anchorElement.href = value;\n            this._updateSearchParams();\n          },\n          enumerable: true\n        },\n        'pathname': {\n          get: function () {\n            return this._anchorElement.pathname.replace(/(^\\/?)/, '/');\n          },\n          set: function (value) {\n            this._anchorElement.pathname = value;\n          },\n          enumerable: true\n        },\n        'origin': {\n          get: function () {\n            // get expected port from protocol\n            var expectedPort = {\n              'http:': 80,\n              'https:': 443,\n              'ftp:': 21\n            }[this._anchorElement.protocol];\n            // add port to origin if, expected port is different than actual port\n            // and it is not empty f.e http://foo:8080\n            // 8080 != 80 && 8080 != ''\n            var addPortToOrigin = this._anchorElement.port != expectedPort && this._anchorElement.port !== '';\n            return this._anchorElement.protocol + '//' + this._anchorElement.hostname + (addPortToOrigin ? ':' + this._anchorElement.port : '');\n          },\n          enumerable: true\n        },\n        'password': {\n          // TODO\n          get: function () {\n            return '';\n          },\n          set: function (value) {},\n          enumerable: true\n        },\n        'username': {\n          // TODO\n          get: function () {\n            return '';\n          },\n          set: function (value) {},\n          enumerable: true\n        }\n      });\n      URL.createObjectURL = function (blob) {\n        return _URL.createObjectURL.apply(_URL, arguments);\n      };\n      URL.revokeObjectURL = function (url) {\n        return _URL.revokeObjectURL.apply(_URL, arguments);\n      };\n      global.URL = URL;\n    };\n    if (!checkIfURLIsSupported()) {\n      polyfillURL();\n    }\n    if (global.location !== void 0 && !('origin' in global.location)) {\n      var getOrigin = function () {\n        return global.location.protocol + '//' + global.location.hostname + (global.location.port ? ':' + global.location.port : '');\n      };\n      try {\n        Object.defineProperty(global.location, 'origin', {\n          get: getOrigin,\n          enumerable: true\n        });\n      } catch (e) {\n        setInterval(function () {\n          global.location.origin = getOrigin();\n        }, 100);\n      }\n    }\n  })(typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : commonjsGlobal);\n\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n  THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n  See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\n  /* global Reflect, Promise */\n\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  function __extends(d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  }\n  var __assign = function () {\n    __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n    };\n    return __assign.apply(this, arguments);\n  };\n  function __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n      next: function () {\n        if (o && i >= o.length) o = void 0;\n        return {\n          value: o && o[i++],\n          done: !o\n        };\n      }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n  }\n  function __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o),\n      r,\n      ar = [],\n      e;\n    try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    } catch (error) {\n      e = {\n        error: error\n      };\n    } finally {\n      try {\n        if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      } finally {\n        if (e) throw e.error;\n      }\n    }\n    return ar;\n  }\n  function __spread() {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n  }\n\n  /** JSDoc */\n  // eslint-disable-next-line import/export\n  var Severity;\n  (function (Severity) {\n    /** JSDoc */\n    Severity[\"Fatal\"] = \"fatal\";\n    /** JSDoc */\n    Severity[\"Error\"] = \"error\";\n    /** JSDoc */\n    Severity[\"Warning\"] = \"warning\";\n    /** JSDoc */\n    Severity[\"Log\"] = \"log\";\n    /** JSDoc */\n    Severity[\"Info\"] = \"info\";\n    /** JSDoc */\n    Severity[\"Debug\"] = \"debug\";\n    /** JSDoc */\n    Severity[\"Critical\"] = \"critical\";\n  })(Severity || (Severity = {}));\n  // eslint-disable-next-line @typescript-eslint/no-namespace, import/export\n  (function (Severity) {\n    /**\n     * Converts a string-based level into a {@link Severity}.\n     *\n     * @param level string representation of Severity\n     * @returns Severity\n     */\n    function fromString(level) {\n      switch (level) {\n        case 'debug':\n          return Severity.Debug;\n        case 'info':\n          return Severity.Info;\n        case 'warn':\n        case 'warning':\n          return Severity.Warning;\n        case 'error':\n          return Severity.Error;\n        case 'fatal':\n          return Severity.Fatal;\n        case 'critical':\n          return Severity.Critical;\n        case 'log':\n        default:\n          return Severity.Log;\n      }\n    }\n    Severity.fromString = fromString;\n  })(Severity || (Severity = {}));\n\n  /** The status of an event. */\n  // eslint-disable-next-line import/export\n  var Status;\n  (function (Status) {\n    /** The status could not be determined. */\n    Status[\"Unknown\"] = \"unknown\";\n    /** The event was skipped due to configuration or callbacks. */\n    Status[\"Skipped\"] = \"skipped\";\n    /** The event was sent to Sentry successfully. */\n    Status[\"Success\"] = \"success\";\n    /** The client is currently rate limited and will try again later. */\n    Status[\"RateLimit\"] = \"rate_limit\";\n    /** The event could not be processed. */\n    Status[\"Invalid\"] = \"invalid\";\n    /** A server-side error ocurred during submission. */\n    Status[\"Failed\"] = \"failed\";\n  })(Status || (Status = {}));\n  // eslint-disable-next-line @typescript-eslint/no-namespace, import/export\n  (function (Status) {\n    /**\n     * Converts a HTTP status code into a {@link Status}.\n     *\n     * @param code The HTTP response status code.\n     * @returns The send status or {@link Status.Unknown}.\n     */\n    function fromHttpCode(code) {\n      if (code >= 200 && code < 300) {\n        return Status.Success;\n      }\n      if (code === 429) {\n        return Status.RateLimit;\n      }\n      if (code >= 400 && code < 500) {\n        return Status.Invalid;\n      }\n      if (code >= 500) {\n        return Status.Failed;\n      }\n      return Status.Unknown;\n    }\n    Status.fromHttpCode = fromHttpCode;\n  })(Status || (Status = {}));\n\n  var setPrototypeOf = Object.setPrototypeOf || ({\n    __proto__: []\n  } instanceof Array ? setProtoOf : mixinProperties);\n  /**\n   * setPrototypeOf polyfill using __proto__\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  function setProtoOf(obj, proto) {\n    // @ts-ignore __proto__ does not exist on obj\n    obj.__proto__ = proto;\n    return obj;\n  }\n  /**\n   * setPrototypeOf polyfill using mixin\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  function mixinProperties(obj, proto) {\n    for (var prop in proto) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (!obj.hasOwnProperty(prop)) {\n        // @ts-ignore typescript complains about indexing so we remove\n        obj[prop] = proto[prop];\n      }\n    }\n    return obj;\n  }\n\n  /** An error emitted by Sentry SDKs and related utilities. */\n  var SentryError = /** @class */function (_super) {\n    __extends(SentryError, _super);\n    function SentryError(message) {\n      var _newTarget = this.constructor;\n      var _this = _super.call(this, message) || this;\n      _this.message = message;\n      _this.name = _newTarget.prototype.constructor.name;\n      setPrototypeOf(_this, _newTarget.prototype);\n      return _this;\n    }\n    return SentryError;\n  }(Error);\n\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  /* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n  /**\n   * Checks whether given value's type is one of a few Error or Error-like\n   * {@link isError}.\n   *\n   * @param wat A value to be checked.\n   * @returns A boolean representing the result.\n   */\n  function isError(wat) {\n    switch (Object.prototype.toString.call(wat)) {\n      case '[object Error]':\n        return true;\n      case '[object Exception]':\n        return true;\n      case '[object DOMException]':\n        return true;\n      default:\n        return isInstanceOf(wat, Error);\n    }\n  }\n  /**\n   * Checks whether given value's type is ErrorEvent\n   * {@link isErrorEvent}.\n   *\n   * @param wat A value to be checked.\n   * @returns A boolean representing the result.\n   */\n  function isErrorEvent(wat) {\n    return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n  }\n  /**\n   * Checks whether given value's type is DOMError\n   * {@link isDOMError}.\n   *\n   * @param wat A value to be checked.\n   * @returns A boolean representing the result.\n   */\n  function isDOMError(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMError]';\n  }\n  /**\n   * Checks whether given value's type is DOMException\n   * {@link isDOMException}.\n   *\n   * @param wat A value to be checked.\n   * @returns A boolean representing the result.\n   */\n  function isDOMException(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMException]';\n  }\n  /**\n   * Checks whether given value's type is a string\n   * {@link isString}.\n   *\n   * @param wat A value to be checked.\n   * @returns A boolean representing the result.\n   */\n  function isString$3(wat) {\n    return Object.prototype.toString.call(wat) === '[object String]';\n  }\n  /**\n   * Checks whether given value's is a primitive (undefined, null, number, boolean, string)\n   * {@link isPrimitive}.\n   *\n   * @param wat A value to be checked.\n   * @returns A boolean representing the result.\n   */\n  function isPrimitive(wat) {\n    return wat === null || typeof wat !== 'object' && typeof wat !== 'function';\n  }\n  /**\n   * Checks whether given value's type is an object literal\n   * {@link isPlainObject}.\n   *\n   * @param wat A value to be checked.\n   * @returns A boolean representing the result.\n   */\n  function isPlainObject(wat) {\n    return Object.prototype.toString.call(wat) === '[object Object]';\n  }\n  /**\n   * Checks whether given value's type is an Event instance\n   * {@link isEvent}.\n   *\n   * @param wat A value to be checked.\n   * @returns A boolean representing the result.\n   */\n  function isEvent$3(wat) {\n    return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n  }\n  /**\n   * Checks whether given value's type is an Element instance\n   * {@link isElement}.\n   *\n   * @param wat A value to be checked.\n   * @returns A boolean representing the result.\n   */\n  function isElement$3(wat) {\n    return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n  }\n  /**\n   * Checks whether given value's type is an regexp\n   * {@link isRegExp}.\n   *\n   * @param wat A value to be checked.\n   * @returns A boolean representing the result.\n   */\n  function isRegExp(wat) {\n    return Object.prototype.toString.call(wat) === '[object RegExp]';\n  }\n  /**\n   * Checks whether given value has a then function.\n   * @param wat A value to be checked.\n   */\n  function isThenable(wat) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return Boolean(wat && wat.then && typeof wat.then === 'function');\n  }\n  /**\n   * Checks whether given value's type is a SyntheticEvent\n   * {@link isSyntheticEvent}.\n   *\n   * @param wat A value to be checked.\n   * @returns A boolean representing the result.\n   */\n  function isSyntheticEvent(wat) {\n    return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n  }\n  /**\n   * Checks whether given value's type is an instance of provided constructor.\n   * {@link isInstanceOf}.\n   *\n   * @param wat A value to be checked.\n   * @param base A constructor to be used in a check.\n   * @returns A boolean representing the result.\n   */\n  function isInstanceOf(wat, base) {\n    try {\n      return wat instanceof base;\n    } catch (_e) {\n      return false;\n    }\n  }\n\n  /**\n   * Truncates given string to the maximum characters count\n   *\n   * @param str An object that contains serializable values\n   * @param max Maximum number of characters in truncated string\n   * @returns string Encoded\n   */\n  function truncate(str, max) {\n    if (max === void 0) {\n      max = 0;\n    }\n    if (typeof str !== 'string' || max === 0) {\n      return str;\n    }\n    return str.length <= max ? str : str.substr(0, max) + \"...\";\n  }\n  /**\n   * Join values in array\n   * @param input array of values to be joined together\n   * @param delimiter string to be placed in-between values\n   * @returns Joined values\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function safeJoin(input, delimiter) {\n    if (!Array.isArray(input)) {\n      return '';\n    }\n    var output = [];\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (var i = 0; i < input.length; i++) {\n      var value = input[i];\n      try {\n        output.push(String(value));\n      } catch (e) {\n        output.push('[value cannot be serialized]');\n      }\n    }\n    return output.join(delimiter);\n  }\n  /**\n   * Checks if the value matches a regex or includes the string\n   * @param value The string value to be checked against\n   * @param pattern Either a regex or a string that must be contained in value\n   */\n  function isMatchingPattern(value, pattern) {\n    if (!isString$3(value)) {\n      return false;\n    }\n    if (isRegExp(pattern)) {\n      return pattern.test(value);\n    }\n    if (typeof pattern === 'string') {\n      return value.indexOf(pattern) !== -1;\n    }\n    return false;\n  }\n\n  /**\n   * Requires a module which is protected against bundler minification.\n   *\n   * @param request The module path to resolve\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  function dynamicRequire(mod, request) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return mod.require(request);\n  }\n  /**\n   * Checks whether we're in the Node.js or Browser environment\n   *\n   * @returns Answer to given question\n   */\n  function isNodeEnv() {\n    return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n  }\n  var fallbackGlobalObject = {};\n  /**\n   * Safely get global scope object\n   *\n   * @returns Global scope object\n   */\n  function getGlobalObject() {\n    return isNodeEnv() ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : fallbackGlobalObject;\n  }\n  /**\n   * UUID4 generator\n   *\n   * @returns string Generated UUID4.\n   */\n  function uuid4() {\n    var global = getGlobalObject();\n    var crypto = global.crypto || global.msCrypto;\n    if (!(crypto === void 0) && crypto.getRandomValues) {\n      // Use window.crypto API if available\n      var arr = new Uint16Array(8);\n      crypto.getRandomValues(arr);\n      // set 4 in byte 7\n      // eslint-disable-next-line no-bitwise\n      arr[3] = arr[3] & 0xfff | 0x4000;\n      // set 2 most significant bits of byte 9 to '10'\n      // eslint-disable-next-line no-bitwise\n      arr[4] = arr[4] & 0x3fff | 0x8000;\n      var pad = function (num) {\n        var v = num.toString(16);\n        while (v.length < 4) {\n          v = \"0\" + v;\n        }\n        return v;\n      };\n      return pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]);\n    }\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      // eslint-disable-next-line no-bitwise\n      var r = Math.random() * 16 | 0;\n      // eslint-disable-next-line no-bitwise\n      var v = c === 'x' ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  }\n  /**\n   * Parses string form of URL into an object\n   * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n   * // intentionally using regex and not <a/> href parsing trick because React Native and other\n   * // environments where DOM might not be available\n   * @returns parsed URL object\n   */\n  function parseUrl$1(url) {\n    if (!url) {\n      return {};\n    }\n    var match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n    if (!match) {\n      return {};\n    }\n    // coerce to undefined values to empty string so we don't get 'undefined'\n    var query = match[6] || '';\n    var fragment = match[8] || '';\n    return {\n      host: match[4],\n      path: match[5],\n      protocol: match[2],\n      relative: match[5] + query + fragment\n    };\n  }\n  /**\n   * Extracts either message or type+value from an event that can be used for user-facing logs\n   * @returns event's description\n   */\n  function getEventDescription(event) {\n    if (event.message) {\n      return event.message;\n    }\n    if (event.exception && event.exception.values && event.exception.values[0]) {\n      var exception = event.exception.values[0];\n      if (exception.type && exception.value) {\n        return exception.type + \": \" + exception.value;\n      }\n      return exception.type || exception.value || event.event_id || '<unknown>';\n    }\n    return event.event_id || '<unknown>';\n  }\n  /** JSDoc */\n  function consoleSandbox(callback) {\n    var global = getGlobalObject();\n    var levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n    if (!('console' in global)) {\n      return callback();\n    }\n    var originalConsole = global.console;\n    var wrappedLevels = {};\n    // Restore all wrapped console methods\n    levels.forEach(function (level) {\n      if (level in global.console && originalConsole[level].__sentry_original__) {\n        wrappedLevels[level] = originalConsole[level];\n        originalConsole[level] = originalConsole[level].__sentry_original__;\n      }\n    });\n    // Perform callback manipulations\n    var result = callback();\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(function (level) {\n      originalConsole[level] = wrappedLevels[level];\n    });\n    return result;\n  }\n  /**\n   * Adds exception values, type and value to an synthetic Exception.\n   * @param event The event to modify.\n   * @param value Value of the exception.\n   * @param type Type of the exception.\n   * @hidden\n   */\n  function addExceptionTypeValue(event, value, type) {\n    event.exception = event.exception || {};\n    event.exception.values = event.exception.values || [];\n    event.exception.values[0] = event.exception.values[0] || {};\n    event.exception.values[0].value = event.exception.values[0].value || value || '';\n    event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n  }\n  /**\n   * Adds exception mechanism to a given event.\n   * @param event The event to modify.\n   * @param mechanism Mechanism of the mechanism.\n   * @hidden\n   */\n  function addExceptionMechanism(event, mechanism) {\n    if (mechanism === void 0) {\n      mechanism = {};\n    }\n    // TODO: Use real type with `keyof Mechanism` thingy and maybe make it better?\n    try {\n      // @ts-ignore Type 'Mechanism | {}' is not assignable to type 'Mechanism | undefined'\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception.values[0].mechanism = event.exception.values[0].mechanism || {};\n      Object.keys(mechanism).forEach(function (key) {\n        // @ts-ignore Mechanism has no index signature\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        event.exception.values[0].mechanism[key] = mechanism[key];\n      });\n    } catch (_oO) {\n      // no-empty\n    }\n  }\n  /**\n   * A safe form of location.href\n   */\n  function getLocationHref() {\n    try {\n      return document.location.href;\n    } catch (oO) {\n      return '';\n    }\n  }\n  /**\n   * Given a child DOM element, returns a query-selector statement describing that\n   * and its ancestors\n   * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n   * @returns generated DOM path\n   */\n  function htmlTreeAsString(elem) {\n    // try/catch both:\n    // - accessing event.target (see getsentry/raven-js#838, #768)\n    // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n    // - can throw an exception in some circumstances.\n    try {\n      var currentElem = elem;\n      var MAX_TRAVERSE_HEIGHT = 5;\n      var MAX_OUTPUT_LEN = 80;\n      var out = [];\n      var height = 0;\n      var len = 0;\n      var separator = ' > ';\n      var sepLength = separator.length;\n      var nextStr = void 0;\n      // eslint-disable-next-line no-plusplus\n      while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n        nextStr = _htmlElementAsString(currentElem);\n        // bail out if\n        // - nextStr is the 'html' element\n        // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n        //   (ignore this limit if we are on the first iteration)\n        if (nextStr === 'html' || height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN) {\n          break;\n        }\n        out.push(nextStr);\n        len += nextStr.length;\n        currentElem = currentElem.parentNode;\n      }\n      return out.reverse().join(separator);\n    } catch (_oO) {\n      return '<unknown>';\n    }\n  }\n  /**\n   * Returns a simple, query-selector representation of a DOM element\n   * e.g. [HTMLElement] => input#foo.btn[name=baz]\n   * @returns generated DOM path\n   */\n  function _htmlElementAsString(el) {\n    var elem = el;\n    var out = [];\n    var className;\n    var classes;\n    var key;\n    var attr;\n    var i;\n    if (!elem || !elem.tagName) {\n      return '';\n    }\n    out.push(elem.tagName.toLowerCase());\n    if (elem.id) {\n      out.push(\"#\" + elem.id);\n    }\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString$3(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(\".\" + classes[i]);\n      }\n    }\n    var allowedAttrs = ['type', 'name', 'title', 'alt'];\n    for (i = 0; i < allowedAttrs.length; i++) {\n      key = allowedAttrs[i];\n      attr = elem.getAttribute(key);\n      if (attr) {\n        out.push(\"[\" + key + \"=\\\"\" + attr + \"\\\"]\");\n      }\n    }\n    return out.join('');\n  }\n  var INITIAL_TIME = Date.now();\n  var prevNow = 0;\n  var performanceFallback = {\n    now: function () {\n      var now = Date.now() - INITIAL_TIME;\n      if (now < prevNow) {\n        now = prevNow;\n      }\n      prevNow = now;\n      return now;\n    },\n    timeOrigin: INITIAL_TIME\n  };\n  var crossPlatformPerformance = function () {\n    if (isNodeEnv()) {\n      try {\n        var perfHooks = dynamicRequire(module, 'perf_hooks');\n        return perfHooks.performance;\n      } catch (_) {\n        return performanceFallback;\n      }\n    }\n    var performance = getGlobalObject().performance;\n    if (!performance || !performance.now) {\n      return performanceFallback;\n    }\n    // Polyfill for performance.timeOrigin.\n    //\n    // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n    // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n    if (performance.timeOrigin === undefined) {\n      // As of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always a\n      // valid fallback. In the absence of a initial time provided by the browser, fallback to INITIAL_TIME.\n      // @ts-ignore ignored because timeOrigin is a readonly property but we want to override\n      // eslint-disable-next-line deprecation/deprecation\n      performance.timeOrigin = performance.timing && performance.timing.navigationStart || INITIAL_TIME;\n    }\n    return performance;\n  }();\n  /**\n   * Returns a timestamp in seconds with milliseconds precision since the UNIX epoch calculated with the monotonic clock.\n   */\n  function timestampWithMs() {\n    return (crossPlatformPerformance.timeOrigin + crossPlatformPerformance.now()) / 1000;\n  }\n  var defaultRetryAfter = 60 * 1000; // 60 seconds\n  /**\n   * Extracts Retry-After value from the request header or returns default value\n   * @param now current unix timestamp\n   * @param header string representation of 'Retry-After' header\n   */\n  function parseRetryAfterHeader(now, header) {\n    if (!header) {\n      return defaultRetryAfter;\n    }\n    var headerDelay = parseInt(\"\" + header, 10);\n    if (!isNaN(headerDelay)) {\n      return headerDelay * 1000;\n    }\n    var headerDate = Date.parse(\"\" + header);\n    if (!isNaN(headerDate)) {\n      return headerDate - now;\n    }\n    return defaultRetryAfter;\n  }\n  var defaultFunctionName = '<anonymous>';\n  /**\n   * Safely extract function name from itself\n   */\n  function getFunctionName(fn) {\n    try {\n      if (!fn || typeof fn !== 'function') {\n        return defaultFunctionName;\n      }\n      return fn.name || defaultFunctionName;\n    } catch (e) {\n      // Just accessing custom props in some Selenium environments\n      // can cause a \"Permission denied\" exception (see raven-js#495).\n      return defaultFunctionName;\n    }\n  }\n\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  // TODO: Implement different loggers for different environments\n  var global$4 = getGlobalObject();\n  /** Prefix for logging strings */\n  var PREFIX = 'Sentry Logger ';\n  /** JSDoc */\n  var Logger = /** @class */function () {\n    /** JSDoc */\n    function Logger() {\n      this._enabled = false;\n    }\n    /** JSDoc */\n    Logger.prototype.disable = function () {\n      this._enabled = false;\n    };\n    /** JSDoc */\n    Logger.prototype.enable = function () {\n      this._enabled = true;\n    };\n    /** JSDoc */\n    Logger.prototype.log = function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      if (!this._enabled) {\n        return;\n      }\n      consoleSandbox(function () {\n        global$4.console.log(PREFIX + \"[Log]: \" + args.join(' '));\n      });\n    };\n    /** JSDoc */\n    Logger.prototype.warn = function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      if (!this._enabled) {\n        return;\n      }\n      consoleSandbox(function () {\n        global$4.console.warn(PREFIX + \"[Warn]: \" + args.join(' '));\n      });\n    };\n    /** JSDoc */\n    Logger.prototype.error = function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      if (!this._enabled) {\n        return;\n      }\n      consoleSandbox(function () {\n        global$4.console.error(PREFIX + \"[Error]: \" + args.join(' '));\n      });\n    };\n    return Logger;\n  }();\n  // Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\n  global$4.__SENTRY__ = global$4.__SENTRY__ || {};\n  var logger = global$4.__SENTRY__.logger || (global$4.__SENTRY__.logger = new Logger());\n\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  /* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n  /**\n   * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n   */\n  var Memo = /** @class */function () {\n    function Memo() {\n      this._hasWeakSet = typeof WeakSet === 'function';\n      this._inner = this._hasWeakSet ? new WeakSet() : [];\n    }\n    /**\n     * Sets obj to remember.\n     * @param obj Object to remember\n     */\n    Memo.prototype.memoize = function (obj) {\n      if (this._hasWeakSet) {\n        if (this._inner.has(obj)) {\n          return true;\n        }\n        this._inner.add(obj);\n        return false;\n      }\n      // eslint-disable-next-line @typescript-eslint/prefer-for-of\n      for (var i = 0; i < this._inner.length; i++) {\n        var value = this._inner[i];\n        if (value === obj) {\n          return true;\n        }\n      }\n      this._inner.push(obj);\n      return false;\n    };\n    /**\n     * Removes object from internal storage.\n     * @param obj Object to forget\n     */\n    Memo.prototype.unmemoize = function (obj) {\n      if (this._hasWeakSet) {\n        this._inner.delete(obj);\n      } else {\n        for (var i = 0; i < this._inner.length; i++) {\n          if (this._inner[i] === obj) {\n            this._inner.splice(i, 1);\n            break;\n          }\n        }\n      }\n    };\n    return Memo;\n  }();\n\n  /**\n   * Wrap a given object method with a higher-order function\n   *\n   * @param source An object that contains a method to be wrapped.\n   * @param name A name of method to be wrapped.\n   * @param replacement A function that should be used to wrap a given method.\n   * @returns void\n   */\n  function fill(source, name, replacement) {\n    if (!(name in source)) {\n      return;\n    }\n    var original = source[name];\n    var wrapped = replacement(original);\n    // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n    // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n    if (typeof wrapped === 'function') {\n      try {\n        wrapped.prototype = wrapped.prototype || {};\n        Object.defineProperties(wrapped, {\n          __sentry_original__: {\n            enumerable: false,\n            value: original\n          }\n        });\n      } catch (_Oo) {\n        // This can throw if multiple fill happens on a global object like XMLHttpRequest\n        // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n      }\n    }\n    source[name] = wrapped;\n  }\n  /**\n   * Encodes given object into url-friendly format\n   *\n   * @param object An object that contains serializable values\n   * @returns string Encoded\n   */\n  function urlEncode(object) {\n    return Object.keys(object).map(function (key) {\n      return encodeURIComponent(key) + \"=\" + encodeURIComponent(object[key]);\n    }).join('&');\n  }\n  /**\n   * Transforms any object into an object literal with all it's attributes\n   * attached to it.\n   *\n   * @param value Initial source that we have to transform in order to be usable by the serializer\n   */\n  function getWalkSource(value) {\n    if (isError(value)) {\n      var error = value;\n      var err = {\n        message: error.message,\n        name: error.name,\n        stack: error.stack\n      };\n      for (var i in error) {\n        if (Object.prototype.hasOwnProperty.call(error, i)) {\n          err[i] = error[i];\n        }\n      }\n      return err;\n    }\n    if (isEvent$3(value)) {\n      var event_1 = value;\n      var source = {};\n      source.type = event_1.type;\n      // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n      try {\n        source.target = isElement$3(event_1.target) ? htmlTreeAsString(event_1.target) : Object.prototype.toString.call(event_1.target);\n      } catch (_oO) {\n        source.target = '<unknown>';\n      }\n      try {\n        source.currentTarget = isElement$3(event_1.currentTarget) ? htmlTreeAsString(event_1.currentTarget) : Object.prototype.toString.call(event_1.currentTarget);\n      } catch (_oO) {\n        source.currentTarget = '<unknown>';\n      }\n      if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n        source.detail = event_1.detail;\n      }\n      for (var i in event_1) {\n        if (Object.prototype.hasOwnProperty.call(event_1, i)) {\n          source[i] = event_1;\n        }\n      }\n      return source;\n    }\n    return value;\n  }\n  /** Calculates bytes size of input string */\n  function utf8Length(value) {\n    // eslint-disable-next-line no-bitwise\n    return ~-encodeURI(value).split(/%..|./).length;\n  }\n  /** Calculates bytes size of input object */\n  function jsonSize(value) {\n    return utf8Length(JSON.stringify(value));\n  }\n  /** JSDoc */\n  function normalizeToSize(object,\n  // Default Node.js REPL depth\n  depth,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize) {\n    if (depth === void 0) {\n      depth = 3;\n    }\n    if (maxSize === void 0) {\n      maxSize = 100 * 1024;\n    }\n    var serialized = normalize(object, depth);\n    if (jsonSize(serialized) > maxSize) {\n      return normalizeToSize(object, depth - 1, maxSize);\n    }\n    return serialized;\n  }\n  /** Transforms any input value into a string form, either primitive value or a type of the input */\n  function serializeValue(value) {\n    var type = Object.prototype.toString.call(value);\n    // Node.js REPL notation\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (type === '[object Object]') {\n      return '[Object]';\n    }\n    if (type === '[object Array]') {\n      return '[Array]';\n    }\n    var normalized = normalizeValue(value);\n    return isPrimitive(normalized) ? normalized : type;\n  }\n  /**\n   * normalizeValue()\n   *\n   * Takes unserializable input and make it serializable friendly\n   *\n   * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n   * - serializes Error objects\n   * - filter global objects\n   */\n  function normalizeValue(value, key) {\n    if (key === 'domain' && value && typeof value === 'object' && value._events) {\n      return '[Domain]';\n    }\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n    if (value === void 0) {\n      return '[undefined]';\n    }\n    if (typeof value === 'function') {\n      return \"[Function: \" + getFunctionName(value) + \"]\";\n    }\n    return value;\n  }\n  /**\n   * Walks an object to perform a normalization on it\n   *\n   * @param key of object that's walked in current iteration\n   * @param value object to be walked\n   * @param depth Optional number indicating how deep should walking be performed\n   * @param memo Optional Memo class handling decycling\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  function walk(key, value, depth, memo) {\n    if (depth === void 0) {\n      depth = +Infinity;\n    }\n    if (memo === void 0) {\n      memo = new Memo();\n    }\n    // If we reach the maximum depth, serialize whatever has left\n    if (depth === 0) {\n      return serializeValue(value);\n    }\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n    // If value implements `toJSON` method, call it and return early\n    if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n      return value.toJSON();\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n    // If normalized value is a primitive, there are no branches left to walk, so we can just bail out, as theres no point in going down that branch any further\n    var normalized = normalizeValue(value, key);\n    if (isPrimitive(normalized)) {\n      return normalized;\n    }\n    // Create source that we will use for next itterations, either objectified error object (Error type with extracted keys:value pairs) or the input itself\n    var source = getWalkSource(value);\n    // Create an accumulator that will act as a parent for all future itterations of that branch\n    var acc = Array.isArray(value) ? [] : {};\n    // If we already walked that branch, bail out, as it's circular reference\n    if (memo.memoize(value)) {\n      return '[Circular ~]';\n    }\n    // Walk all keys of the source\n    for (var innerKey in source) {\n      // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n      if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n        continue;\n      }\n      // Recursively walk through all the child nodes\n      acc[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n    }\n    // Once walked through all the branches, remove the parent from memo storage\n    memo.unmemoize(value);\n    // Return accumulated values\n    return acc;\n  }\n  /**\n   * normalize()\n   *\n   * - Creates a copy to prevent original input mutation\n   * - Skip non-enumerablers\n   * - Calls `toJSON` if implemented\n   * - Removes circular references\n   * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n   * - Translates known global objects/Classes to a string representations\n   * - Takes care of Error objects serialization\n   * - Optionally limit depth of final output\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  function normalize(input, depth) {\n    try {\n      return JSON.parse(JSON.stringify(input, function (key, value) {\n        return walk(key, value, depth);\n      }));\n    } catch (_oO) {\n      return '**non-serializable**';\n    }\n  }\n  /**\n   * Given any captured exception, extract its keys and create a sorted\n   * and truncated list that will be used inside the event message.\n   * eg. `Non-error exception captured with keys: foo, bar, baz`\n   */\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  function extractExceptionKeysForMessage(exception, maxLength) {\n    if (maxLength === void 0) {\n      maxLength = 40;\n    }\n    var keys = Object.keys(getWalkSource(exception));\n    keys.sort();\n    if (!keys.length) {\n      return '[object has no keys]';\n    }\n    if (keys[0].length >= maxLength) {\n      return truncate(keys[0], maxLength);\n    }\n    for (var includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n      var serialized = keys.slice(0, includedKeys).join(', ');\n      if (serialized.length > maxLength) {\n        continue;\n      }\n      if (includedKeys === keys.length) {\n        return serialized;\n      }\n      return truncate(serialized, maxLength);\n    }\n    return '';\n  }\n\n  /* eslint-disable @typescript-eslint/explicit-function-return-type */\n  /** SyncPromise internal states */\n  var States;\n  (function (States) {\n    /** Pending */\n    States[\"PENDING\"] = \"PENDING\";\n    /** Resolved / OK */\n    States[\"RESOLVED\"] = \"RESOLVED\";\n    /** Rejected / Error */\n    States[\"REJECTED\"] = \"REJECTED\";\n  })(States || (States = {}));\n  /**\n   * Thenable class that behaves like a Promise and follows it's interface\n   * but is not async internally\n   */\n  var SyncPromise = /** @class */function () {\n    function SyncPromise(executor) {\n      var _this = this;\n      this._state = States.PENDING;\n      this._handlers = [];\n      /** JSDoc */\n      this._resolve = function (value) {\n        _this._setResult(States.RESOLVED, value);\n      };\n      /** JSDoc */\n      this._reject = function (reason) {\n        _this._setResult(States.REJECTED, reason);\n      };\n      /** JSDoc */\n      this._setResult = function (state, value) {\n        if (_this._state !== States.PENDING) {\n          return;\n        }\n        if (isThenable(value)) {\n          value.then(_this._resolve, _this._reject);\n          return;\n        }\n        _this._state = state;\n        _this._value = value;\n        _this._executeHandlers();\n      };\n      // TODO: FIXME\n      /** JSDoc */\n      this._attachHandler = function (handler) {\n        _this._handlers = _this._handlers.concat(handler);\n        _this._executeHandlers();\n      };\n      /** JSDoc */\n      this._executeHandlers = function () {\n        if (_this._state === States.PENDING) {\n          return;\n        }\n        var cachedHandlers = _this._handlers.slice();\n        _this._handlers = [];\n        cachedHandlers.forEach(function (handler) {\n          if (handler.done) {\n            return;\n          }\n          if (_this._state === States.RESOLVED) {\n            if (handler.onfulfilled) {\n              // eslint-disable-next-line @typescript-eslint/no-floating-promises\n              handler.onfulfilled(_this._value);\n            }\n          }\n          if (_this._state === States.REJECTED) {\n            if (handler.onrejected) {\n              handler.onrejected(_this._value);\n            }\n          }\n          handler.done = true;\n        });\n      };\n      try {\n        executor(this._resolve, this._reject);\n      } catch (e) {\n        this._reject(e);\n      }\n    }\n    /** JSDoc */\n    SyncPromise.resolve = function (value) {\n      return new SyncPromise(function (resolve) {\n        resolve(value);\n      });\n    };\n    /** JSDoc */\n    SyncPromise.reject = function (reason) {\n      return new SyncPromise(function (_, reject) {\n        reject(reason);\n      });\n    };\n    /** JSDoc */\n    SyncPromise.all = function (collection) {\n      return new SyncPromise(function (resolve, reject) {\n        if (!Array.isArray(collection)) {\n          reject(new TypeError(\"Promise.all requires an array as input.\"));\n          return;\n        }\n        if (collection.length === 0) {\n          resolve([]);\n          return;\n        }\n        var counter = collection.length;\n        var resolvedCollection = [];\n        collection.forEach(function (item, index) {\n          SyncPromise.resolve(item).then(function (value) {\n            resolvedCollection[index] = value;\n            counter -= 1;\n            if (counter !== 0) {\n              return;\n            }\n            resolve(resolvedCollection);\n          }).then(null, reject);\n        });\n      });\n    };\n    /** JSDoc */\n    SyncPromise.prototype.then = function (onfulfilled, onrejected) {\n      var _this = this;\n      return new SyncPromise(function (resolve, reject) {\n        _this._attachHandler({\n          done: false,\n          onfulfilled: function (result) {\n            if (!onfulfilled) {\n              // TODO: ¯\\_(ツ)_/¯\n              // TODO: FIXME\n              resolve(result);\n              return;\n            }\n            try {\n              resolve(onfulfilled(result));\n              return;\n            } catch (e) {\n              reject(e);\n              return;\n            }\n          },\n          onrejected: function (reason) {\n            if (!onrejected) {\n              reject(reason);\n              return;\n            }\n            try {\n              resolve(onrejected(reason));\n              return;\n            } catch (e) {\n              reject(e);\n              return;\n            }\n          }\n        });\n      });\n    };\n    /** JSDoc */\n    SyncPromise.prototype.catch = function (onrejected) {\n      return this.then(function (val) {\n        return val;\n      }, onrejected);\n    };\n    /** JSDoc */\n    SyncPromise.prototype.finally = function (onfinally) {\n      var _this = this;\n      return new SyncPromise(function (resolve, reject) {\n        var val;\n        var isRejected;\n        return _this.then(function (value) {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        }, function (reason) {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        }).then(function () {\n          if (isRejected) {\n            reject(val);\n            return;\n          }\n          resolve(val);\n        });\n      });\n    };\n    /** JSDoc */\n    SyncPromise.prototype.toString = function () {\n      return '[object SyncPromise]';\n    };\n    return SyncPromise;\n  }();\n\n  /** A simple queue that holds promises. */\n  var PromiseBuffer = /** @class */function () {\n    function PromiseBuffer(_limit) {\n      this._limit = _limit;\n      /** Internal set of queued Promises */\n      this._buffer = [];\n    }\n    /**\n     * Says if the buffer is ready to take more requests\n     */\n    PromiseBuffer.prototype.isReady = function () {\n      return this._limit === undefined || this.length() < this._limit;\n    };\n    /**\n     * Add a promise to the queue.\n     *\n     * @param task Can be any PromiseLike<T>\n     * @returns The original promise.\n     */\n    PromiseBuffer.prototype.add = function (task) {\n      var _this = this;\n      if (!this.isReady()) {\n        return SyncPromise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n      }\n      if (this._buffer.indexOf(task) === -1) {\n        this._buffer.push(task);\n      }\n      task.then(function () {\n        return _this.remove(task);\n      }).then(null, function () {\n        return _this.remove(task).then(null, function () {\n          // We have to add this catch here otherwise we have an unhandledPromiseRejection\n          // because it's a new Promise chain.\n        });\n      });\n      return task;\n    };\n    /**\n     * Remove a promise to the queue.\n     *\n     * @param task Can be any PromiseLike<T>\n     * @returns Removed promise.\n     */\n    PromiseBuffer.prototype.remove = function (task) {\n      var removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n      return removedTask;\n    };\n    /**\n     * This function returns the number of unresolved promises in the queue.\n     */\n    PromiseBuffer.prototype.length = function () {\n      return this._buffer.length;\n    };\n    /**\n     * This will drain the whole queue, returns true if queue is empty or drained.\n     * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n     *\n     * @param timeout Number in ms to wait until it resolves with false.\n     */\n    PromiseBuffer.prototype.drain = function (timeout) {\n      var _this = this;\n      return new SyncPromise(function (resolve) {\n        var capturedSetTimeout = setTimeout(function () {\n          if (timeout && timeout > 0) {\n            resolve(false);\n          }\n        }, timeout);\n        SyncPromise.all(_this._buffer).then(function () {\n          clearTimeout(capturedSetTimeout);\n          resolve(true);\n        }).then(null, function () {\n          resolve(true);\n        });\n      });\n    };\n    return PromiseBuffer;\n  }();\n\n  /**\n   * Tells whether current environment supports Fetch API\n   * {@link supportsFetch}.\n   *\n   * @returns Answer to the given question.\n   */\n  function supportsFetch() {\n    if (!('fetch' in getGlobalObject())) {\n      return false;\n    }\n    try {\n      new Headers();\n      new Request('');\n      new Response();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  /**\n   * isNativeFetch checks if the given function is a native implementation of fetch()\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  function isNativeFetch(func) {\n    return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n  }\n  /**\n   * Tells whether current environment supports Fetch API natively\n   * {@link supportsNativeFetch}.\n   *\n   * @returns true if `window.fetch` is natively implemented, false otherwise\n   */\n  function supportsNativeFetch() {\n    if (!supportsFetch()) {\n      return false;\n    }\n    var global = getGlobalObject();\n    // Fast path to avoid DOM I/O\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    if (isNativeFetch(global.fetch)) {\n      return true;\n    }\n    // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n    // so create a \"pure\" iframe to see if that has native fetch\n    var result = false;\n    var doc = global.document;\n    // eslint-disable-next-line deprecation/deprecation\n    if (doc && typeof doc.createElement === \"function\") {\n      try {\n        var sandbox = doc.createElement('iframe');\n        sandbox.hidden = true;\n        doc.head.appendChild(sandbox);\n        if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          result = isNativeFetch(sandbox.contentWindow.fetch);\n        }\n        doc.head.removeChild(sandbox);\n      } catch (err) {\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n      }\n    }\n    return result;\n  }\n  /**\n   * Tells whether current environment supports Referrer Policy API\n   * {@link supportsReferrerPolicy}.\n   *\n   * @returns Answer to the given question.\n   */\n  function supportsReferrerPolicy() {\n    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n    // https://caniuse.com/#feat=referrer-policy\n    // It doesn't. And it throw exception instead of ignoring this parameter...\n    // REF: https://github.com/getsentry/raven-js/issues/1233\n    if (!supportsFetch()) {\n      return false;\n    }\n    try {\n      new Request('_', {\n        referrerPolicy: 'origin'\n      });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  /**\n   * Tells whether current environment supports History API\n   * {@link supportsHistory}.\n   *\n   * @returns Answer to the given question.\n   */\n  function supportsHistory() {\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var global = getGlobalObject();\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var chrome = global.chrome;\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n    var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n    return !isChromePackagedApp && hasHistoryApi;\n  }\n\n  var global$3 = getGlobalObject();\n  /**\n   * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n   *  - Console API\n   *  - Fetch API\n   *  - XHR API\n   *  - History API\n   *  - DOM API (click/typing)\n   *  - Error API\n   *  - UnhandledRejection API\n   */\n  var handlers = {};\n  var instrumented = {};\n  /** Instruments given API */\n  function instrument(type) {\n    if (instrumented[type]) {\n      return;\n    }\n    instrumented[type] = true;\n    switch (type) {\n      case 'console':\n        instrumentConsole();\n        break;\n      case 'dom':\n        instrumentDOM();\n        break;\n      case 'xhr':\n        instrumentXHR();\n        break;\n      case 'fetch':\n        instrumentFetch();\n        break;\n      case 'history':\n        instrumentHistory();\n        break;\n      case 'error':\n        instrumentError();\n        break;\n      case 'unhandledrejection':\n        instrumentUnhandledRejection();\n        break;\n      default:\n        logger.warn('unknown instrumentation type:', type);\n    }\n  }\n  /**\n   * Add handler that will be called when given type of instrumentation triggers.\n   * Use at your own risk, this might break without changelog notice, only used internally.\n   * @hidden\n   */\n  function addInstrumentationHandler(handler) {\n    if (!handler || typeof handler.type !== 'string' || typeof handler.callback !== 'function') {\n      return;\n    }\n    handlers[handler.type] = handlers[handler.type] || [];\n    handlers[handler.type].push(handler.callback);\n    instrument(handler.type);\n  }\n  /** JSDoc */\n  function triggerHandlers(type, data) {\n    var e_1, _a;\n    if (!type || !handlers[type]) {\n      return;\n    }\n    try {\n      for (var _b = __values(handlers[type] || []), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var handler = _c.value;\n        try {\n          handler(data);\n        } catch (e) {\n          logger.error(\"Error while triggering instrumentation handler.\\nType: \" + type + \"\\nName: \" + getFunctionName(handler) + \"\\nError: \" + e);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  }\n  /** JSDoc */\n  function instrumentConsole() {\n    if (!('console' in global$3)) {\n      return;\n    }\n    ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function (level) {\n      if (!(level in global$3.console)) {\n        return;\n      }\n      fill(global$3.console, level, function (originalConsoleLevel) {\n        return function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          triggerHandlers('console', {\n            args: args,\n            level: level\n          });\n          // this fails for some browsers. :(\n          if (originalConsoleLevel) {\n            Function.prototype.apply.call(originalConsoleLevel, global$3.console, args);\n          }\n        };\n      });\n    });\n  }\n  /** JSDoc */\n  function instrumentFetch() {\n    if (!supportsNativeFetch()) {\n      return;\n    }\n    fill(global$3, 'fetch', function (originalFetch) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var commonHandlerData = {\n          args: args,\n          fetchData: {\n            method: getFetchMethod(args),\n            url: getFetchUrl(args)\n          },\n          startTimestamp: Date.now()\n        };\n        triggerHandlers('fetch', __assign({}, commonHandlerData));\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        return originalFetch.apply(global$3, args).then(function (response) {\n          triggerHandlers('fetch', __assign(__assign({}, commonHandlerData), {\n            endTimestamp: Date.now(),\n            response: response\n          }));\n          return response;\n        }, function (error) {\n          triggerHandlers('fetch', __assign(__assign({}, commonHandlerData), {\n            endTimestamp: Date.now(),\n            error: error\n          }));\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        });\n      };\n    });\n  }\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  /** Extract `method` from fetch call arguments */\n  function getFetchMethod(fetchArgs) {\n    if (fetchArgs === void 0) {\n      fetchArgs = [];\n    }\n    if ('Request' in global$3 && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n      return String(fetchArgs[0].method).toUpperCase();\n    }\n    if (fetchArgs[1] && fetchArgs[1].method) {\n      return String(fetchArgs[1].method).toUpperCase();\n    }\n    return 'GET';\n  }\n  /** Extract `url` from fetch call arguments */\n  function getFetchUrl(fetchArgs) {\n    if (fetchArgs === void 0) {\n      fetchArgs = [];\n    }\n    if (typeof fetchArgs[0] === 'string') {\n      return fetchArgs[0];\n    }\n    if ('Request' in global$3 && isInstanceOf(fetchArgs[0], Request)) {\n      return fetchArgs[0].url;\n    }\n    return String(fetchArgs[0]);\n  }\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  /** JSDoc */\n  function instrumentXHR() {\n    if (!('XMLHttpRequest' in global$3)) {\n      return;\n    }\n    var xhrproto = XMLHttpRequest.prototype;\n    fill(xhrproto, 'open', function (originalOpen) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var xhr = this;\n        var url = args[1];\n        xhr.__sentry_xhr__ = {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          method: isString$3(args[0]) ? args[0].toUpperCase() : args[0],\n          url: args[1]\n        };\n        // if Sentry key appears in URL, don't capture it as a request\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (isString$3(url) && xhr.__sentry_xhr__.method === 'POST' && url.match(/sentry_key/)) {\n          xhr.__sentry_own_request__ = true;\n        }\n        var onreadystatechangeHandler = function () {\n          if (xhr.readyState === 4) {\n            try {\n              // touching statusCode in some platforms throws\n              // an exception\n              if (xhr.__sentry_xhr__) {\n                xhr.__sentry_xhr__.status_code = xhr.status;\n              }\n            } catch (e) {\n              /* do nothing */\n            }\n            triggerHandlers('xhr', {\n              args: args,\n              endTimestamp: Date.now(),\n              startTimestamp: Date.now(),\n              xhr: xhr\n            });\n          }\n        };\n        if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n          fill(xhr, 'onreadystatechange', function (original) {\n            return function () {\n              var readyStateArgs = [];\n              for (var _i = 0; _i < arguments.length; _i++) {\n                readyStateArgs[_i] = arguments[_i];\n              }\n              onreadystatechangeHandler();\n              return original.apply(xhr, readyStateArgs);\n            };\n          });\n        } else {\n          xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n        }\n        return originalOpen.apply(xhr, args);\n      };\n    });\n    fill(xhrproto, 'send', function (originalSend) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        triggerHandlers('xhr', {\n          args: args,\n          startTimestamp: Date.now(),\n          xhr: this\n        });\n        return originalSend.apply(this, args);\n      };\n    });\n  }\n  var lastHref;\n  /** JSDoc */\n  function instrumentHistory() {\n    if (!supportsHistory()) {\n      return;\n    }\n    var oldOnPopState = global$3.onpopstate;\n    global$3.onpopstate = function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      var to = global$3.location.href;\n      // keep track of the current URL state, as we always receive only the updated state\n      var from = lastHref;\n      lastHref = to;\n      triggerHandlers('history', {\n        from: from,\n        to: to\n      });\n      if (oldOnPopState) {\n        return oldOnPopState.apply(this, args);\n      }\n    };\n    /** @hidden */\n    function historyReplacementFunction(originalHistoryFunction) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var url = args.length > 2 ? args[2] : undefined;\n        if (url) {\n          // coerce to string (this is what pushState does)\n          var from = lastHref;\n          var to = String(url);\n          // keep track of the current URL state, as we always receive only the updated state\n          lastHref = to;\n          triggerHandlers('history', {\n            from: from,\n            to: to\n          });\n        }\n        return originalHistoryFunction.apply(this, args);\n      };\n    }\n    fill(global$3.history, 'pushState', historyReplacementFunction);\n    fill(global$3.history, 'replaceState', historyReplacementFunction);\n  }\n  /** JSDoc */\n  function instrumentDOM() {\n    if (!('document' in global$3)) {\n      return;\n    }\n    // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n    global$3.document.addEventListener('click', domEventHandler('click', triggerHandlers.bind(null, 'dom')), false);\n    global$3.document.addEventListener('keypress', keypressEventHandler(triggerHandlers.bind(null, 'dom')), false);\n    // After hooking into document bubbled up click and keypresses events, we also hook into user handled click & keypresses.\n    ['EventTarget', 'Node'].forEach(function (target) {\n      /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n      var proto = global$3[target] && global$3[target].prototype;\n      // eslint-disable-next-line no-prototype-builtins\n      if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n        return;\n      }\n      /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n      fill(proto, 'addEventListener', function (original) {\n        return function (eventName, fn, options) {\n          if (fn && fn.handleEvent) {\n            if (eventName === 'click') {\n              fill(fn, 'handleEvent', function (innerOriginal) {\n                return function (event) {\n                  domEventHandler('click', triggerHandlers.bind(null, 'dom'))(event);\n                  return innerOriginal.call(this, event);\n                };\n              });\n            }\n            if (eventName === 'keypress') {\n              fill(fn, 'handleEvent', function (innerOriginal) {\n                return function (event) {\n                  keypressEventHandler(triggerHandlers.bind(null, 'dom'))(event);\n                  return innerOriginal.call(this, event);\n                };\n              });\n            }\n          } else {\n            if (eventName === 'click') {\n              domEventHandler('click', triggerHandlers.bind(null, 'dom'), true)(this);\n            }\n            if (eventName === 'keypress') {\n              keypressEventHandler(triggerHandlers.bind(null, 'dom'))(this);\n            }\n          }\n          return original.call(this, eventName, fn, options);\n        };\n      });\n      fill(proto, 'removeEventListener', function (original) {\n        return function (eventName, fn, options) {\n          try {\n            original.call(this, eventName, fn.__sentry_wrapped__, options);\n          } catch (e) {\n            // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n          }\n          return original.call(this, eventName, fn, options);\n        };\n      });\n    });\n  }\n  var debounceDuration = 1000;\n  var debounceTimer = 0;\n  var keypressTimeout;\n  var lastCapturedEvent;\n  /**\n   * Wraps addEventListener to capture UI breadcrumbs\n   * @param name the event name (e.g. \"click\")\n   * @param handler function that will be triggered\n   * @param debounce decides whether it should wait till another event loop\n   * @returns wrapped breadcrumb events handler\n   * @hidden\n   */\n  function domEventHandler(name, handler, debounce) {\n    if (debounce === void 0) {\n      debounce = false;\n    }\n    return function (event) {\n      // reset keypress timeout; e.g. triggering a 'click' after\n      // a 'keypress' will reset the keypress debounce so that a new\n      // set of keypresses can be recorded\n      keypressTimeout = undefined;\n      // It's possible this handler might trigger multiple times for the same\n      // event (e.g. event propagation through node ancestors). Ignore if we've\n      // already captured the event.\n      if (!event || lastCapturedEvent === event) {\n        return;\n      }\n      lastCapturedEvent = event;\n      if (debounceTimer) {\n        clearTimeout(debounceTimer);\n      }\n      if (debounce) {\n        debounceTimer = setTimeout(function () {\n          handler({\n            event: event,\n            name: name\n          });\n        });\n      } else {\n        handler({\n          event: event,\n          name: name\n        });\n      }\n    };\n  }\n  /**\n   * Wraps addEventListener to capture keypress UI events\n   * @param handler function that will be triggered\n   * @returns wrapped keypress events handler\n   * @hidden\n   */\n  function keypressEventHandler(handler) {\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n    return function (event) {\n      var target;\n      try {\n        target = event.target;\n      } catch (e) {\n        // just accessing event properties can throw an exception in some rare circumstances\n        // see: https://github.com/getsentry/raven-js/issues/838\n        return;\n      }\n      var tagName = target && target.tagName;\n      // only consider keypress events on actual input elements\n      // this will disregard keypresses targeting body (e.g. tabbing\n      // through elements, hotkeys, etc)\n      if (!tagName || tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable) {\n        return;\n      }\n      // record first keypress in a series, but ignore subsequent\n      // keypresses until debounce clears\n      if (!keypressTimeout) {\n        domEventHandler('input', handler)(event);\n      }\n      clearTimeout(keypressTimeout);\n      keypressTimeout = setTimeout(function () {\n        keypressTimeout = undefined;\n      }, debounceDuration);\n    };\n  }\n  var _oldOnErrorHandler = null;\n  /** JSDoc */\n  function instrumentError() {\n    _oldOnErrorHandler = global$3.onerror;\n    global$3.onerror = function (msg, url, line, column, error) {\n      triggerHandlers('error', {\n        column: column,\n        error: error,\n        line: line,\n        msg: msg,\n        url: url\n      });\n      if (_oldOnErrorHandler) {\n        // eslint-disable-next-line prefer-rest-params\n        return _oldOnErrorHandler.apply(this, arguments);\n      }\n      return false;\n    };\n  }\n  var _oldOnUnhandledRejectionHandler = null;\n  /** JSDoc */\n  function instrumentUnhandledRejection() {\n    _oldOnUnhandledRejectionHandler = global$3.onunhandledrejection;\n    global$3.onunhandledrejection = function (e) {\n      triggerHandlers('unhandledrejection', e);\n      if (_oldOnUnhandledRejectionHandler) {\n        // eslint-disable-next-line prefer-rest-params\n        return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n      }\n      return true;\n    };\n  }\n\n  /** Regular expression used to parse a Dsn. */\n  var DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n  /** Error message */\n  var ERROR_MESSAGE = 'Invalid Dsn';\n  /** The Sentry Dsn, identifying a Sentry instance and project. */\n  var Dsn = /** @class */function () {\n    /** Creates a new Dsn component */\n    function Dsn(from) {\n      if (typeof from === 'string') {\n        this._fromString(from);\n      } else {\n        this._fromComponents(from);\n      }\n      this._validate();\n    }\n    /**\n     * Renders the string representation of this Dsn.\n     *\n     * By default, this will render the public representation without the password\n     * component. To get the deprecated private representation, set `withPassword`\n     * to true.\n     *\n     * @param withPassword When set to true, the password will be included.\n     */\n    Dsn.prototype.toString = function (withPassword) {\n      if (withPassword === void 0) {\n        withPassword = false;\n      }\n      var _a = this,\n        host = _a.host,\n        path = _a.path,\n        pass = _a.pass,\n        port = _a.port,\n        projectId = _a.projectId,\n        protocol = _a.protocol,\n        user = _a.user;\n      return protocol + \"://\" + user + (withPassword && pass ? \":\" + pass : '') + (\"@\" + host + (port ? \":\" + port : '') + \"/\" + (path ? path + \"/\" : path) + projectId);\n    };\n    /** Parses a string into this Dsn. */\n    Dsn.prototype._fromString = function (str) {\n      var match = DSN_REGEX.exec(str);\n      if (!match) {\n        throw new SentryError(ERROR_MESSAGE);\n      }\n      var _a = __read(match.slice(1), 6),\n        protocol = _a[0],\n        user = _a[1],\n        _b = _a[2],\n        pass = _b === void 0 ? '' : _b,\n        host = _a[3],\n        _c = _a[4],\n        port = _c === void 0 ? '' : _c,\n        lastPath = _a[5];\n      var path = '';\n      var projectId = lastPath;\n      var split = projectId.split('/');\n      if (split.length > 1) {\n        path = split.slice(0, -1).join('/');\n        projectId = split.pop();\n      }\n      if (projectId) {\n        var projectMatch = projectId.match(/^\\d+/);\n        if (projectMatch) {\n          projectId = projectMatch[0];\n        }\n      }\n      this._fromComponents({\n        host: host,\n        pass: pass,\n        path: path,\n        projectId: projectId,\n        port: port,\n        protocol: protocol,\n        user: user\n      });\n    };\n    /** Maps Dsn components into this instance. */\n    Dsn.prototype._fromComponents = function (components) {\n      this.protocol = components.protocol;\n      this.user = components.user;\n      this.pass = components.pass || '';\n      this.host = components.host;\n      this.port = components.port || '';\n      this.path = components.path || '';\n      this.projectId = components.projectId;\n    };\n    /** Validates this Dsn and throws on error. */\n    Dsn.prototype._validate = function () {\n      var _this = this;\n      ['protocol', 'user', 'host', 'projectId'].forEach(function (component) {\n        if (!_this[component]) {\n          throw new SentryError(ERROR_MESSAGE + \": \" + component + \" missing\");\n        }\n      });\n      if (!this.projectId.match(/^\\d+$/)) {\n        throw new SentryError(ERROR_MESSAGE + \": Invalid projectId \" + this.projectId);\n      }\n      if (this.protocol !== 'http' && this.protocol !== 'https') {\n        throw new SentryError(ERROR_MESSAGE + \": Invalid protocol \" + this.protocol);\n      }\n      if (this.port && isNaN(parseInt(this.port, 10))) {\n        throw new SentryError(ERROR_MESSAGE + \": Invalid port \" + this.port);\n      }\n    };\n    return Dsn;\n  }();\n\n  /**\n   * Holds additional event information. {@link Scope.applyToEvent} will be\n   * called by the client before an event will be sent.\n   */\n  var Scope = /** @class */function () {\n    function Scope() {\n      /** Flag if notifiying is happening. */\n      this._notifyingListeners = false;\n      /** Callback for client to receive scope changes. */\n      this._scopeListeners = [];\n      /** Callback list that will be called after {@link applyToEvent}. */\n      this._eventProcessors = [];\n      /** Array of breadcrumbs. */\n      this._breadcrumbs = [];\n      /** User */\n      this._user = {};\n      /** Tags */\n      this._tags = {};\n      /** Extra */\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this._extra = {};\n      /** Contexts */\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this._contexts = {};\n    }\n    /**\n     * Inherit values from the parent scope.\n     * @param scope to clone.\n     */\n    Scope.clone = function (scope) {\n      var newScope = new Scope();\n      if (scope) {\n        newScope._breadcrumbs = __spread(scope._breadcrumbs);\n        newScope._tags = __assign({}, scope._tags);\n        newScope._extra = __assign({}, scope._extra);\n        newScope._contexts = __assign({}, scope._contexts);\n        newScope._user = scope._user;\n        newScope._level = scope._level;\n        newScope._span = scope._span;\n        newScope._transactionName = scope._transactionName;\n        newScope._fingerprint = scope._fingerprint;\n        newScope._eventProcessors = __spread(scope._eventProcessors);\n      }\n      return newScope;\n    };\n    /**\n     * Add internal on change listener. Used for sub SDKs that need to store the scope.\n     * @hidden\n     */\n    Scope.prototype.addScopeListener = function (callback) {\n      this._scopeListeners.push(callback);\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addEventProcessor = function (callback) {\n      this._eventProcessors.push(callback);\n      return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setUser = function (user) {\n      this._user = user || {};\n      this._notifyScopeListeners();\n      return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTags = function (tags) {\n      this._tags = __assign(__assign({}, this._tags), tags);\n      this._notifyScopeListeners();\n      return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTag = function (key, value) {\n      var _a;\n      this._tags = __assign(__assign({}, this._tags), (_a = {}, _a[key] = value, _a));\n      this._notifyScopeListeners();\n      return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtras = function (extras) {\n      this._extra = __assign(__assign({}, this._extra), extras);\n      this._notifyScopeListeners();\n      return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtra = function (key, extra) {\n      var _a;\n      this._extra = __assign(__assign({}, this._extra), (_a = {}, _a[key] = extra, _a));\n      this._notifyScopeListeners();\n      return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setFingerprint = function (fingerprint) {\n      this._fingerprint = fingerprint;\n      this._notifyScopeListeners();\n      return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setLevel = function (level) {\n      this._level = level;\n      this._notifyScopeListeners();\n      return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTransactionName = function (name) {\n      this._transactionName = name;\n      this._notifyScopeListeners();\n      return this;\n    };\n    /**\n     * Can be removed in major version.\n     * @deprecated in favor of {@link this.setTransactionName}\n     */\n    Scope.prototype.setTransaction = function (name) {\n      return this.setTransactionName(name);\n    };\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Scope.prototype.setContext = function (key, context) {\n      var _a;\n      this._contexts = __assign(__assign({}, this._contexts), (_a = {}, _a[key] = context, _a));\n      this._notifyScopeListeners();\n      return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setSpan = function (span) {\n      this._span = span;\n      this._notifyScopeListeners();\n      return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getSpan = function () {\n      return this._span;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getTransaction = function () {\n      var span = this.getSpan();\n      if (span && span.spanRecorder && span.spanRecorder.spans[0]) {\n        return span.spanRecorder.spans[0];\n      }\n      return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.update = function (captureContext) {\n      if (!captureContext) {\n        return this;\n      }\n      if (typeof captureContext === 'function') {\n        var updatedScope = captureContext(this);\n        return updatedScope instanceof Scope ? updatedScope : this;\n      }\n      if (captureContext instanceof Scope) {\n        this._tags = __assign(__assign({}, this._tags), captureContext._tags);\n        this._extra = __assign(__assign({}, this._extra), captureContext._extra);\n        this._contexts = __assign(__assign({}, this._contexts), captureContext._contexts);\n        if (captureContext._user) {\n          this._user = captureContext._user;\n        }\n        if (captureContext._level) {\n          this._level = captureContext._level;\n        }\n        if (captureContext._fingerprint) {\n          this._fingerprint = captureContext._fingerprint;\n        }\n      } else if (isPlainObject(captureContext)) {\n        // eslint-disable-next-line no-param-reassign\n        captureContext = captureContext;\n        this._tags = __assign(__assign({}, this._tags), captureContext.tags);\n        this._extra = __assign(__assign({}, this._extra), captureContext.extra);\n        this._contexts = __assign(__assign({}, this._contexts), captureContext.contexts);\n        if (captureContext.user) {\n          this._user = captureContext.user;\n        }\n        if (captureContext.level) {\n          this._level = captureContext.level;\n        }\n        if (captureContext.fingerprint) {\n          this._fingerprint = captureContext.fingerprint;\n        }\n      }\n      return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clear = function () {\n      this._breadcrumbs = [];\n      this._tags = {};\n      this._extra = {};\n      this._user = {};\n      this._contexts = {};\n      this._level = undefined;\n      this._transactionName = undefined;\n      this._fingerprint = undefined;\n      this._span = undefined;\n      this._notifyScopeListeners();\n      return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addBreadcrumb = function (breadcrumb, maxBreadcrumbs) {\n      var mergedBreadcrumb = __assign({\n        timestamp: timestampWithMs()\n      }, breadcrumb);\n      this._breadcrumbs = maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0 ? __spread(this._breadcrumbs, [mergedBreadcrumb]).slice(-maxBreadcrumbs) : __spread(this._breadcrumbs, [mergedBreadcrumb]);\n      this._notifyScopeListeners();\n      return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clearBreadcrumbs = function () {\n      this._breadcrumbs = [];\n      this._notifyScopeListeners();\n      return this;\n    };\n    /**\n     * Applies the current context and fingerprint to the event.\n     * Note that breadcrumbs will be added by the client.\n     * Also if the event has already breadcrumbs on it, we do not merge them.\n     * @param event Event\n     * @param hint May contain additional informartion about the original exception.\n     * @hidden\n     */\n    Scope.prototype.applyToEvent = function (event, hint) {\n      if (this._extra && Object.keys(this._extra).length) {\n        event.extra = __assign(__assign({}, this._extra), event.extra);\n      }\n      if (this._tags && Object.keys(this._tags).length) {\n        event.tags = __assign(__assign({}, this._tags), event.tags);\n      }\n      if (this._user && Object.keys(this._user).length) {\n        event.user = __assign(__assign({}, this._user), event.user);\n      }\n      if (this._contexts && Object.keys(this._contexts).length) {\n        event.contexts = __assign(__assign({}, this._contexts), event.contexts);\n      }\n      if (this._level) {\n        event.level = this._level;\n      }\n      if (this._transactionName) {\n        event.transaction = this._transactionName;\n      }\n      // We want to set the trace context for normal events only if there isn't already\n      // a trace context on the event. There is a product feature in place where we link\n      // errors with transaction and it relys on that.\n      if (this._span) {\n        event.contexts = __assign({\n          trace: this._span.getTraceContext()\n        }, event.contexts);\n      }\n      this._applyFingerprint(event);\n      event.breadcrumbs = __spread(event.breadcrumbs || [], this._breadcrumbs);\n      event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n      return this._notifyEventProcessors(__spread(getGlobalEventProcessors(), this._eventProcessors), event, hint);\n    };\n    /**\n     * This will be called after {@link applyToEvent} is finished.\n     */\n    Scope.prototype._notifyEventProcessors = function (processors, event, hint, index) {\n      var _this = this;\n      if (index === void 0) {\n        index = 0;\n      }\n      return new SyncPromise(function (resolve, reject) {\n        var processor = processors[index];\n        if (event === null || typeof processor !== 'function') {\n          resolve(event);\n        } else {\n          var result = processor(__assign({}, event), hint);\n          if (isThenable(result)) {\n            result.then(function (final) {\n              return _this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve);\n            }).then(null, reject);\n          } else {\n            _this._notifyEventProcessors(processors, result, hint, index + 1).then(resolve).then(null, reject);\n          }\n        }\n      });\n    };\n    /**\n     * This will be called on every set call.\n     */\n    Scope.prototype._notifyScopeListeners = function () {\n      var _this = this;\n      if (!this._notifyingListeners) {\n        this._notifyingListeners = true;\n        setTimeout(function () {\n          _this._scopeListeners.forEach(function (callback) {\n            callback(_this);\n          });\n          _this._notifyingListeners = false;\n        });\n      }\n    };\n    /**\n     * Applies fingerprint from the scope to the event if there's one,\n     * uses message if there's one instead or get rid of empty fingerprint\n     */\n    Scope.prototype._applyFingerprint = function (event) {\n      // Make sure it's an array first and we actually have something in place\n      event.fingerprint = event.fingerprint ? Array.isArray(event.fingerprint) ? event.fingerprint : [event.fingerprint] : [];\n      // If we have something on the scope, then merge it with event\n      if (this._fingerprint) {\n        event.fingerprint = event.fingerprint.concat(this._fingerprint);\n      }\n      // If we have no data at all, remove empty array default\n      if (event.fingerprint && !event.fingerprint.length) {\n        delete event.fingerprint;\n      }\n    };\n    return Scope;\n  }();\n  /**\n   * Retruns the global event processors.\n   */\n  function getGlobalEventProcessors() {\n    var global = getGlobalObject();\n    global.__SENTRY__ = global.__SENTRY__ || {};\n    global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n    return global.__SENTRY__.globalEventProcessors;\n  }\n  /**\n   * Add a EventProcessor to be kept globally.\n   * @param callback EventProcessor to add\n   */\n  function addGlobalEventProcessor(callback) {\n    getGlobalEventProcessors().push(callback);\n  }\n\n  /**\n   * API compatibility version of this hub.\n   *\n   * WARNING: This number should only be increased when the global interface\n   * changes and new methods are introduced.\n   *\n   * @hidden\n   */\n  var API_VERSION = 3;\n  /**\n   * Default maximum number of breadcrumbs added to an event. Can be overwritten\n   * with {@link Options.maxBreadcrumbs}.\n   */\n  var DEFAULT_BREADCRUMBS = 100;\n  /**\n   * Absolute maximum number of breadcrumbs added to an event. The\n   * `maxBreadcrumbs` option cannot be higher than this value.\n   */\n  var MAX_BREADCRUMBS = 100;\n  /**\n   * @inheritDoc\n   */\n  var Hub = /** @class */function () {\n    /**\n     * Creates a new instance of the hub, will push one {@link Layer} into the\n     * internal stack on creation.\n     *\n     * @param client bound to the hub.\n     * @param scope bound to the hub.\n     * @param version number, higher number means higher priority.\n     */\n    function Hub(client, scope, _version) {\n      if (scope === void 0) {\n        scope = new Scope();\n      }\n      if (_version === void 0) {\n        _version = API_VERSION;\n      }\n      this._version = _version;\n      /** Is a {@link Layer}[] containing the client and scope */\n      this._stack = [];\n      this._stack.push({\n        client: client,\n        scope: scope\n      });\n      this.bindClient(client);\n    }\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.isOlderThan = function (version) {\n      return this._version < version;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.bindClient = function (client) {\n      var top = this.getStackTop();\n      top.client = client;\n      if (client && client.setupIntegrations) {\n        client.setupIntegrations();\n      }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.pushScope = function () {\n      // We want to clone the content of prev scope\n      var stack = this.getStack();\n      var parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;\n      var scope = Scope.clone(parentScope);\n      this.getStack().push({\n        client: this.getClient(),\n        scope: scope\n      });\n      return scope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.popScope = function () {\n      return this.getStack().pop() !== undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.withScope = function (callback) {\n      var scope = this.pushScope();\n      try {\n        callback(scope);\n      } finally {\n        this.popScope();\n      }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getClient = function () {\n      return this.getStackTop().client;\n    };\n    /** Returns the scope of the top stack. */\n    Hub.prototype.getScope = function () {\n      return this.getStackTop().scope;\n    };\n    /** Returns the scope stack for domains or the process. */\n    Hub.prototype.getStack = function () {\n      return this._stack;\n    };\n    /** Returns the topmost scope layer in the order domain > local > process. */\n    Hub.prototype.getStackTop = function () {\n      return this._stack[this._stack.length - 1];\n    };\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    Hub.prototype.captureException = function (exception, hint) {\n      var eventId = this._lastEventId = uuid4();\n      var finalHint = hint;\n      // If there's no explicit hint provided, mimick the same thing that would happen\n      // in the minimal itself to create a consistent behavior.\n      // We don't do this in the client, as it's the lowest level API, and doing this,\n      // would prevent user from having full control over direct calls.\n      if (!hint) {\n        var syntheticException = void 0;\n        try {\n          throw new Error('Sentry syntheticException');\n        } catch (exception) {\n          syntheticException = exception;\n        }\n        finalHint = {\n          originalException: exception,\n          syntheticException: syntheticException\n        };\n      }\n      this._invokeClient('captureException', exception, __assign(__assign({}, finalHint), {\n        event_id: eventId\n      }));\n      return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureMessage = function (message, level, hint) {\n      var eventId = this._lastEventId = uuid4();\n      var finalHint = hint;\n      // If there's no explicit hint provided, mimick the same thing that would happen\n      // in the minimal itself to create a consistent behavior.\n      // We don't do this in the client, as it's the lowest level API, and doing this,\n      // would prevent user from having full control over direct calls.\n      if (!hint) {\n        var syntheticException = void 0;\n        try {\n          throw new Error(message);\n        } catch (exception) {\n          syntheticException = exception;\n        }\n        finalHint = {\n          originalException: message,\n          syntheticException: syntheticException\n        };\n      }\n      this._invokeClient('captureMessage', message, level, __assign(__assign({}, finalHint), {\n        event_id: eventId\n      }));\n      return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureEvent = function (event, hint) {\n      var eventId = this._lastEventId = uuid4();\n      this._invokeClient('captureEvent', event, __assign(__assign({}, hint), {\n        event_id: eventId\n      }));\n      return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.lastEventId = function () {\n      return this._lastEventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {\n      var top = this.getStackTop();\n      if (!top.scope || !top.client) {\n        return;\n      }\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      var _a = top.client.getOptions && top.client.getOptions() || {},\n        _b = _a.beforeBreadcrumb,\n        beforeBreadcrumb = _b === void 0 ? null : _b,\n        _c = _a.maxBreadcrumbs,\n        maxBreadcrumbs = _c === void 0 ? DEFAULT_BREADCRUMBS : _c;\n      if (maxBreadcrumbs <= 0) {\n        return;\n      }\n      var timestamp = timestampWithMs();\n      var mergedBreadcrumb = __assign({\n        timestamp: timestamp\n      }, breadcrumb);\n      var finalBreadcrumb = beforeBreadcrumb ? consoleSandbox(function () {\n        return beforeBreadcrumb(mergedBreadcrumb, hint);\n      }) : mergedBreadcrumb;\n      if (finalBreadcrumb === null) {\n        return;\n      }\n      top.scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setUser = function (user) {\n      var top = this.getStackTop();\n      if (!top.scope) {\n        return;\n      }\n      top.scope.setUser(user);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setTags = function (tags) {\n      var top = this.getStackTop();\n      if (!top.scope) {\n        return;\n      }\n      top.scope.setTags(tags);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setExtras = function (extras) {\n      var top = this.getStackTop();\n      if (!top.scope) {\n        return;\n      }\n      top.scope.setExtras(extras);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setTag = function (key, value) {\n      var top = this.getStackTop();\n      if (!top.scope) {\n        return;\n      }\n      top.scope.setTag(key, value);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setExtra = function (key, extra) {\n      var top = this.getStackTop();\n      if (!top.scope) {\n        return;\n      }\n      top.scope.setExtra(key, extra);\n    };\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Hub.prototype.setContext = function (name, context) {\n      var top = this.getStackTop();\n      if (!top.scope) {\n        return;\n      }\n      top.scope.setContext(name, context);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.configureScope = function (callback) {\n      var top = this.getStackTop();\n      if (top.scope && top.client) {\n        callback(top.scope);\n      }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.run = function (callback) {\n      var oldHub = makeMain(this);\n      try {\n        callback(this);\n      } finally {\n        makeMain(oldHub);\n      }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getIntegration = function (integration) {\n      var client = this.getClient();\n      if (!client) {\n        return null;\n      }\n      try {\n        return client.getIntegration(integration);\n      } catch (_oO) {\n        logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Hub\");\n        return null;\n      }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.startSpan = function (context) {\n      return this._callExtensionMethod('startSpan', context);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.startTransaction = function (context) {\n      return this._callExtensionMethod('startTransaction', context);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.traceHeaders = function () {\n      return this._callExtensionMethod('traceHeaders');\n    };\n    /**\n     * Internal helper function to call a method on the top client if it exists.\n     *\n     * @param method The method to call on the client.\n     * @param args Arguments to pass to the client function.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Hub.prototype._invokeClient = function (method) {\n      var _a;\n      var args = [];\n      for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n      }\n      var top = this.getStackTop();\n      if (top && top.client && top.client[method]) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n        (_a = top.client)[method].apply(_a, __spread(args, [top.scope]));\n      }\n    };\n    /**\n     * Calls global extension method and binding current instance to the function call\n     */\n    // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Hub.prototype._callExtensionMethod = function (method) {\n      var args = [];\n      for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n      }\n      var carrier = getMainCarrier();\n      var sentry = carrier.__SENTRY__;\n      if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n        return sentry.extensions[method].apply(this, args);\n      }\n      logger.warn(\"Extension method \" + method + \" couldn't be found, doing nothing.\");\n    };\n    return Hub;\n  }();\n  /** Returns the global shim registry. */\n  function getMainCarrier() {\n    var carrier = getGlobalObject();\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {\n      extensions: {},\n      hub: undefined\n    };\n    return carrier;\n  }\n  /**\n   * Replaces the current main hub with the passed one on the global object\n   *\n   * @returns The old replaced hub\n   */\n  function makeMain(hub) {\n    var registry = getMainCarrier();\n    var oldHub = getHubFromCarrier(registry);\n    setHubOnCarrier(registry, hub);\n    return oldHub;\n  }\n  /**\n   * Returns the default hub instance.\n   *\n   * If a hub is already registered in the global carrier but this module\n   * contains a more recent version, it replaces the registered version.\n   * Otherwise, the currently registered hub will be returned.\n   */\n  function getCurrentHub() {\n    // Get main carrier (global for every environment)\n    var registry = getMainCarrier();\n    // If there's no hub, or its an old API, assign a new one\n    if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n      setHubOnCarrier(registry, new Hub());\n    }\n    // Prefer domains over global if they are there (applicable only to Node environment)\n    if (isNodeEnv()) {\n      return getHubFromActiveDomain(registry);\n    }\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n  /**\n   * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n   * @returns discovered hub\n   */\n  function getHubFromActiveDomain(registry) {\n    try {\n      var property = 'domain';\n      var carrier = getMainCarrier();\n      var sentry = carrier.__SENTRY__;\n      if (!sentry || !sentry.extensions || !sentry.extensions[property]) {\n        return getHubFromCarrier(registry);\n      }\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var domain = sentry.extensions[property];\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      var activeDomain = domain.active;\n      // If there's no active domain, just return global hub\n      if (!activeDomain) {\n        return getHubFromCarrier(registry);\n      }\n      // If there's no hub on current domain, or it's an old API, assign a new one\n      if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n        var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n        setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n      }\n      // Return hub that lives on a domain\n      return getHubFromCarrier(activeDomain);\n    } catch (_Oo) {\n      // Return hub that lives on a global object\n      return getHubFromCarrier(registry);\n    }\n  }\n  /**\n   * This will tell whether a carrier has a hub on it or not\n   * @param carrier object\n   */\n  function hasHubOnCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * This will create a new {@link Hub} and add to the passed object on\n   * __SENTRY__.hub.\n   * @param carrier object\n   * @hidden\n   */\n  function getHubFromCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n      return carrier.__SENTRY__.hub;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = new Hub();\n    return carrier.__SENTRY__.hub;\n  }\n  /**\n   * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n   * @param carrier object\n   * @param hub Hub\n   */\n  function setHubOnCarrier(carrier, hub) {\n    if (!carrier) {\n      return false;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = hub;\n    return true;\n  }\n\n  /**\n   * This calls a function on the current hub.\n   * @param method function to call on hub.\n   * @param args to pass to function.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function callOnHub(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    var hub = getCurrentHub();\n    if (hub && hub[method]) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return hub[method].apply(hub, __spread(args));\n    }\n    throw new Error(\"No hub defined or \" + method + \" was not found on the hub, please open a bug report.\");\n  }\n  /**\n   * Captures an exception event and sends it to Sentry.\n   *\n   * @param exception An exception-like object.\n   * @returns The generated eventId.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  function captureException(exception, captureContext) {\n    var syntheticException;\n    try {\n      throw new Error('Sentry syntheticException');\n    } catch (exception) {\n      syntheticException = exception;\n    }\n    return callOnHub('captureException', exception, {\n      captureContext: captureContext,\n      originalException: exception,\n      syntheticException: syntheticException\n    });\n  }\n  /**\n   * Creates a new scope with and executes the given operation within.\n   * The scope is automatically removed once the operation\n   * finishes or throws.\n   *\n   * This is essentially a convenience function for:\n   *\n   *     pushScope();\n   *     callback();\n   *     popScope();\n   *\n   * @param callback that will be enclosed into push/popScope.\n   */\n  function withScope(callback) {\n    callOnHub('withScope', callback);\n  }\n\n  var SENTRY_API_VERSION = '7';\n  /** Helper class to provide urls to different Sentry endpoints. */\n  var API = /** @class */function () {\n    /** Create a new instance of API */\n    function API(dsn) {\n      this.dsn = dsn;\n      this._dsnObject = new Dsn(dsn);\n    }\n    /** Returns the Dsn object. */\n    API.prototype.getDsn = function () {\n      return this._dsnObject;\n    };\n    /** Returns the prefix to construct Sentry ingestion API endpoints. */\n    API.prototype.getBaseApiEndpoint = function () {\n      var dsn = this._dsnObject;\n      var protocol = dsn.protocol ? dsn.protocol + \":\" : '';\n      var port = dsn.port ? \":\" + dsn.port : '';\n      return protocol + \"//\" + dsn.host + port + (dsn.path ? \"/\" + dsn.path : '') + \"/api/\";\n    };\n    /** Returns the store endpoint URL. */\n    API.prototype.getStoreEndpoint = function () {\n      return this._getIngestEndpoint('store');\n    };\n    /**\n     * Returns the store endpoint URL with auth in the query string.\n     *\n     * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n     */\n    API.prototype.getStoreEndpointWithUrlEncodedAuth = function () {\n      return this.getStoreEndpoint() + \"?\" + this._encodedAuth();\n    };\n    /**\n     * Returns the envelope endpoint URL with auth in the query string.\n     *\n     * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n     */\n    API.prototype.getEnvelopeEndpointWithUrlEncodedAuth = function () {\n      return this._getEnvelopeEndpoint() + \"?\" + this._encodedAuth();\n    };\n    /** Returns only the path component for the store endpoint. */\n    API.prototype.getStoreEndpointPath = function () {\n      var dsn = this._dsnObject;\n      return (dsn.path ? \"/\" + dsn.path : '') + \"/api/\" + dsn.projectId + \"/store/\";\n    };\n    /**\n     * Returns an object that can be used in request headers.\n     * This is needed for node and the old /store endpoint in sentry\n     */\n    API.prototype.getRequestHeaders = function (clientName, clientVersion) {\n      var dsn = this._dsnObject;\n      var header = [\"Sentry sentry_version=\" + SENTRY_API_VERSION];\n      header.push(\"sentry_client=\" + clientName + \"/\" + clientVersion);\n      header.push(\"sentry_key=\" + dsn.user);\n      if (dsn.pass) {\n        header.push(\"sentry_secret=\" + dsn.pass);\n      }\n      return {\n        'Content-Type': 'application/json',\n        'X-Sentry-Auth': header.join(', ')\n      };\n    };\n    /** Returns the url to the report dialog endpoint. */\n    API.prototype.getReportDialogEndpoint = function (dialogOptions) {\n      if (dialogOptions === void 0) {\n        dialogOptions = {};\n      }\n      var dsn = this._dsnObject;\n      var endpoint = this.getBaseApiEndpoint() + \"embed/error-page/\";\n      var encodedOptions = [];\n      encodedOptions.push(\"dsn=\" + dsn.toString());\n      for (var key in dialogOptions) {\n        if (key === 'user') {\n          if (!dialogOptions.user) {\n            continue;\n          }\n          if (dialogOptions.user.name) {\n            encodedOptions.push(\"name=\" + encodeURIComponent(dialogOptions.user.name));\n          }\n          if (dialogOptions.user.email) {\n            encodedOptions.push(\"email=\" + encodeURIComponent(dialogOptions.user.email));\n          }\n        } else {\n          encodedOptions.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(dialogOptions[key]));\n        }\n      }\n      if (encodedOptions.length) {\n        return endpoint + \"?\" + encodedOptions.join('&');\n      }\n      return endpoint;\n    };\n    /** Returns the envelope endpoint URL. */\n    API.prototype._getEnvelopeEndpoint = function () {\n      return this._getIngestEndpoint('envelope');\n    };\n    /** Returns the ingest API endpoint for target. */\n    API.prototype._getIngestEndpoint = function (target) {\n      var base = this.getBaseApiEndpoint();\n      var dsn = this._dsnObject;\n      return \"\" + base + dsn.projectId + \"/\" + target + \"/\";\n    };\n    /** Returns a URL-encoded string with auth config suitable for a query string. */\n    API.prototype._encodedAuth = function () {\n      var dsn = this._dsnObject;\n      var auth = {\n        // We send only the minimum set of required information. See\n        // https://github.com/getsentry/sentry-javascript/issues/2572.\n        sentry_key: dsn.user,\n        sentry_version: SENTRY_API_VERSION\n      };\n      return urlEncode(auth);\n    };\n    return API;\n  }();\n\n  var installedIntegrations = [];\n  /** Gets integration to install */\n  function getIntegrationsToSetup(options) {\n    var defaultIntegrations = options.defaultIntegrations && __spread(options.defaultIntegrations) || [];\n    var userIntegrations = options.integrations;\n    var integrations = [];\n    if (Array.isArray(userIntegrations)) {\n      var userIntegrationsNames_1 = userIntegrations.map(function (i) {\n        return i.name;\n      });\n      var pickedIntegrationsNames_1 = [];\n      // Leave only unique default integrations, that were not overridden with provided user integrations\n      defaultIntegrations.forEach(function (defaultIntegration) {\n        if (userIntegrationsNames_1.indexOf(defaultIntegration.name) === -1 && pickedIntegrationsNames_1.indexOf(defaultIntegration.name) === -1) {\n          integrations.push(defaultIntegration);\n          pickedIntegrationsNames_1.push(defaultIntegration.name);\n        }\n      });\n      // Don't add same user integration twice\n      userIntegrations.forEach(function (userIntegration) {\n        if (pickedIntegrationsNames_1.indexOf(userIntegration.name) === -1) {\n          integrations.push(userIntegration);\n          pickedIntegrationsNames_1.push(userIntegration.name);\n        }\n      });\n    } else if (typeof userIntegrations === 'function') {\n      integrations = userIntegrations(defaultIntegrations);\n      integrations = Array.isArray(integrations) ? integrations : [integrations];\n    } else {\n      integrations = __spread(defaultIntegrations);\n    }\n    // Make sure that if present, `Debug` integration will always run last\n    var integrationsNames = integrations.map(function (i) {\n      return i.name;\n    });\n    var alwaysLastToRun = 'Debug';\n    if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n      integrations.push.apply(integrations, __spread(integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1)));\n    }\n    return integrations;\n  }\n  /** Setup given integration */\n  function setupIntegration(integration) {\n    if (installedIntegrations.indexOf(integration.name) !== -1) {\n      return;\n    }\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n    logger.log(\"Integration installed: \" + integration.name);\n  }\n  /**\n   * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n   * integrations are added unless they were already provided before.\n   * @param integrations array of integration instances\n   * @param withDefault should enable default integrations\n   */\n  function setupIntegrations(options) {\n    var integrations = {};\n    getIntegrationsToSetup(options).forEach(function (integration) {\n      integrations[integration.name] = integration;\n      setupIntegration(integration);\n    });\n    return integrations;\n  }\n\n  /**\n   * Base implementation for all JavaScript SDK clients.\n   *\n   * Call the constructor with the corresponding backend constructor and options\n   * specific to the client subclass. To access these options later, use\n   * {@link Client.getOptions}. Also, the Backend instance is available via\n   * {@link Client.getBackend}.\n   *\n   * If a Dsn is specified in the options, it will be parsed and stored. Use\n   * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n   * invalid, the constructor will throw a {@link SentryException}. Note that\n   * without a valid Dsn, the SDK will not send any events to Sentry.\n   *\n   * Before sending an event via the backend, it is passed through\n   * {@link BaseClient.prepareEvent} to add SDK information and scope data\n   * (breadcrumbs and context). To add more custom information, override this\n   * method and extend the resulting prepared event.\n   *\n   * To issue automatically created events (e.g. via instrumentation), use\n   * {@link Client.captureEvent}. It will prepare the event and pass it through\n   * the callback lifecycle. To issue auto-breadcrumbs, use\n   * {@link Client.addBreadcrumb}.\n   *\n   * @example\n   * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n   *   public constructor(options: NodeOptions) {\n   *     super(NodeBackend, options);\n   *   }\n   *\n   *   // ...\n   * }\n   */\n  var BaseClient = /** @class */function () {\n    /**\n     * Initializes this client instance.\n     *\n     * @param backendClass A constructor function to create the backend.\n     * @param options Options for the client.\n     */\n    function BaseClient(backendClass, options) {\n      /** Array of used integrations. */\n      this._integrations = {};\n      /** Is the client still processing a call? */\n      this._processing = false;\n      this._backend = new backendClass(options);\n      this._options = options;\n      if (options.dsn) {\n        this._dsn = new Dsn(options.dsn);\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    BaseClient.prototype.captureException = function (exception, hint, scope) {\n      var _this = this;\n      var eventId = hint && hint.event_id;\n      this._processing = true;\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._getBackend().eventFromException(exception, hint).then(function (event) {\n        eventId = _this.captureEvent(event, hint, scope);\n      });\n      return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureMessage = function (message, level, hint, scope) {\n      var _this = this;\n      var eventId = hint && hint.event_id;\n      this._processing = true;\n      var promisedEvent = isPrimitive(message) ? this._getBackend().eventFromMessage(\"\" + message, level, hint) : this._getBackend().eventFromException(message, hint);\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      promisedEvent.then(function (event) {\n        eventId = _this.captureEvent(event, hint, scope);\n      });\n      return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureEvent = function (event, hint, scope) {\n      var _this = this;\n      var eventId = hint && hint.event_id;\n      this._processing = true;\n      this._processEvent(event, hint, scope).then(function (finalEvent) {\n        // We need to check for finalEvent in case beforeSend returned null\n        eventId = finalEvent && finalEvent.event_id;\n        _this._processing = false;\n      }).then(null, function (reason) {\n        logger.error(reason);\n        _this._processing = false;\n      });\n      return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getDsn = function () {\n      return this._dsn;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getOptions = function () {\n      return this._options;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.flush = function (timeout) {\n      var _this = this;\n      return this._isClientProcessing(timeout).then(function (status) {\n        clearInterval(status.interval);\n        return _this._getBackend().getTransport().close(timeout).then(function (transportFlushed) {\n          return status.ready && transportFlushed;\n        });\n      });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.close = function (timeout) {\n      var _this = this;\n      return this.flush(timeout).then(function (result) {\n        _this.getOptions().enabled = false;\n        return result;\n      });\n    };\n    /**\n     * Sets up the integrations\n     */\n    BaseClient.prototype.setupIntegrations = function () {\n      if (this._isEnabled()) {\n        this._integrations = setupIntegrations(this._options);\n      }\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegration = function (integration) {\n      try {\n        return this._integrations[integration.id] || null;\n      } catch (_oO) {\n        logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Client\");\n        return null;\n      }\n    };\n    /** Waits for the client to be done with processing. */\n    BaseClient.prototype._isClientProcessing = function (timeout) {\n      var _this = this;\n      return new SyncPromise(function (resolve) {\n        var ticked = 0;\n        var tick = 1;\n        var interval = 0;\n        clearInterval(interval);\n        interval = setInterval(function () {\n          if (!_this._processing) {\n            resolve({\n              interval: interval,\n              ready: true\n            });\n          } else {\n            ticked += tick;\n            if (timeout && ticked >= timeout) {\n              resolve({\n                interval: interval,\n                ready: false\n              });\n            }\n          }\n        }, tick);\n      });\n    };\n    /** Returns the current backend. */\n    BaseClient.prototype._getBackend = function () {\n      return this._backend;\n    };\n    /** Determines whether this SDK is enabled and a valid Dsn is present. */\n    BaseClient.prototype._isEnabled = function () {\n      return this.getOptions().enabled !== false && this._dsn !== undefined;\n    };\n    /**\n     * Adds common information to events.\n     *\n     * The information includes release and environment from `options`,\n     * breadcrumbs and context (extra, tags and user) from the scope.\n     *\n     * Information that is already present in the event is never overwritten. For\n     * nested objects, such as the context, keys are merged.\n     *\n     * @param event The original event.\n     * @param hint May contain additional information about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A new event with more information.\n     */\n    BaseClient.prototype._prepareEvent = function (event, scope, hint) {\n      var _this = this;\n      var _a = this.getOptions().normalizeDepth,\n        normalizeDepth = _a === void 0 ? 3 : _a;\n      var prepared = __assign(__assign({}, event), {\n        event_id: event.event_id || (hint && hint.event_id ? hint.event_id : uuid4()),\n        timestamp: event.timestamp || timestampWithMs()\n      });\n      this._applyClientOptions(prepared);\n      this._applyIntegrationsMetadata(prepared);\n      // If we have scope given to us, use it as the base for further modifications.\n      // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n      var finalScope = scope;\n      if (hint && hint.captureContext) {\n        finalScope = Scope.clone(finalScope).update(hint.captureContext);\n      }\n      // We prepare the result here with a resolved Event.\n      var result = SyncPromise.resolve(prepared);\n      // This should be the last thing called, since we want that\n      // {@link Hub.addEventProcessor} gets the finished prepared event.\n      if (finalScope) {\n        // In case we have a hub we reassign it.\n        result = finalScope.applyToEvent(prepared, hint);\n      }\n      return result.then(function (evt) {\n        if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n          return _this._normalizeEvent(evt, normalizeDepth);\n        }\n        return evt;\n      });\n    };\n    /**\n     * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n     * Normalized keys:\n     * - `breadcrumbs.data`\n     * - `user`\n     * - `contexts`\n     * - `extra`\n     * @param event Event\n     * @returns Normalized event\n     */\n    BaseClient.prototype._normalizeEvent = function (event, depth) {\n      if (!event) {\n        return null;\n      }\n      var normalized = __assign(__assign(__assign(__assign(__assign({}, event), event.breadcrumbs && {\n        breadcrumbs: event.breadcrumbs.map(function (b) {\n          return __assign(__assign({}, b), b.data && {\n            data: normalize(b.data, depth)\n          });\n        })\n      }), event.user && {\n        user: normalize(event.user, depth)\n      }), event.contexts && {\n        contexts: normalize(event.contexts, depth)\n      }), event.extra && {\n        extra: normalize(event.extra, depth)\n      });\n      // event.contexts.trace stores information about a Transaction. Similarly,\n      // event.spans[] stores information about child Spans. Given that a\n      // Transaction is conceptually a Span, normalization should apply to both\n      // Transactions and Spans consistently.\n      // For now the decision is to skip normalization of Transactions and Spans,\n      // so this block overwrites the normalized event to add back the original\n      // Transaction information prior to normalization.\n      if (event.contexts && event.contexts.trace) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        normalized.contexts.trace = event.contexts.trace;\n      }\n      return normalized;\n    };\n    /**\n     *  Enhances event using the client configuration.\n     *  It takes care of all \"static\" values like environment, release and `dist`,\n     *  as well as truncating overly long values.\n     * @param event event instance to be enhanced\n     */\n    BaseClient.prototype._applyClientOptions = function (event) {\n      var _a = this.getOptions(),\n        environment = _a.environment,\n        release = _a.release,\n        dist = _a.dist,\n        _b = _a.maxValueLength,\n        maxValueLength = _b === void 0 ? 250 : _b;\n      if (event.environment === undefined && environment !== undefined) {\n        event.environment = environment;\n      }\n      if (event.release === undefined && release !== undefined) {\n        event.release = release;\n      }\n      if (event.dist === undefined && dist !== undefined) {\n        event.dist = dist;\n      }\n      if (event.message) {\n        event.message = truncate(event.message, maxValueLength);\n      }\n      var exception = event.exception && event.exception.values && event.exception.values[0];\n      if (exception && exception.value) {\n        exception.value = truncate(exception.value, maxValueLength);\n      }\n      var request = event.request;\n      if (request && request.url) {\n        request.url = truncate(request.url, maxValueLength);\n      }\n    };\n    /**\n     * This function adds all used integrations to the SDK info in the event.\n     * @param sdkInfo The sdkInfo of the event that will be filled with all integrations.\n     */\n    BaseClient.prototype._applyIntegrationsMetadata = function (event) {\n      var sdkInfo = event.sdk;\n      var integrationsArray = Object.keys(this._integrations);\n      if (sdkInfo && integrationsArray.length > 0) {\n        sdkInfo.integrations = integrationsArray;\n      }\n    };\n    /**\n     * Tells the backend to send this event\n     * @param event The Sentry event to send\n     */\n    BaseClient.prototype._sendEvent = function (event) {\n      this._getBackend().sendEvent(event);\n    };\n    /**\n     * Processes an event (either error or message) and sends it to Sentry.\n     *\n     * This also adds breadcrumbs and context information to the event. However,\n     * platform specific meta data (such as the User's IP address) must be added\n     * by the SDK implementor.\n     *\n     *\n     * @param event The event to send to Sentry.\n     * @param hint May contain additional information about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n     */\n    BaseClient.prototype._processEvent = function (event, hint, scope) {\n      var _this = this;\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      var _a = this.getOptions(),\n        beforeSend = _a.beforeSend,\n        sampleRate = _a.sampleRate;\n      if (!this._isEnabled()) {\n        return SyncPromise.reject('SDK not enabled, will not send event.');\n      }\n      var isTransaction = event.type === 'transaction';\n      // 1.0 === 100% events are sent\n      // 0.0 === 0% events are sent\n      // Sampling for transaction happens somewhere else\n      if (!isTransaction && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n        return SyncPromise.reject('This event has been sampled, will not send event.');\n      }\n      return new SyncPromise(function (resolve, reject) {\n        _this._prepareEvent(event, scope, hint).then(function (prepared) {\n          if (prepared === null) {\n            reject('An event processor returned null, will not send event.');\n            return;\n          }\n          var finalEvent = prepared;\n          var isInternalException = hint && hint.data && hint.data.__sentry__ === true;\n          // We skip beforeSend in case of transactions\n          if (isInternalException || !beforeSend || isTransaction) {\n            _this._sendEvent(finalEvent);\n            resolve(finalEvent);\n            return;\n          }\n          var beforeSendResult = beforeSend(prepared, hint);\n          if (typeof beforeSendResult === 'undefined') {\n            logger.error('`beforeSend` method has to return `null` or a valid event.');\n          } else if (isThenable(beforeSendResult)) {\n            _this._handleAsyncBeforeSend(beforeSendResult, resolve, reject);\n          } else {\n            finalEvent = beforeSendResult;\n            if (finalEvent === null) {\n              logger.log('`beforeSend` returned `null`, will not send event.');\n              resolve(null);\n              return;\n            }\n            // From here on we are really async\n            _this._sendEvent(finalEvent);\n            resolve(finalEvent);\n          }\n        }).then(null, function (reason) {\n          _this.captureException(reason, {\n            data: {\n              __sentry__: true\n            },\n            originalException: reason\n          });\n          reject(\"Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: \" + reason);\n        });\n      });\n    };\n    /**\n     * Resolves before send Promise and calls resolve/reject on parent SyncPromise.\n     */\n    BaseClient.prototype._handleAsyncBeforeSend = function (beforeSend, resolve, reject) {\n      var _this = this;\n      beforeSend.then(function (processedEvent) {\n        if (processedEvent === null) {\n          reject('`beforeSend` returned `null`, will not send event.');\n          return;\n        }\n        // From here on we are really async\n        _this._sendEvent(processedEvent);\n        resolve(processedEvent);\n      }).then(null, function (e) {\n        reject(\"beforeSend rejected with \" + e);\n      });\n    };\n    return BaseClient;\n  }();\n\n  /** Noop transport */\n  var NoopTransport = /** @class */function () {\n    function NoopTransport() {}\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.sendEvent = function (_) {\n      return SyncPromise.resolve({\n        reason: \"NoopTransport: Event has been skipped because no Dsn is configured.\",\n        status: Status.Skipped\n      });\n    };\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.close = function (_) {\n      return SyncPromise.resolve(true);\n    };\n    return NoopTransport;\n  }();\n\n  /**\n   * This is the base implemention of a Backend.\n   * @hidden\n   */\n  var BaseBackend = /** @class */function () {\n    /** Creates a new backend instance. */\n    function BaseBackend(options) {\n      this._options = options;\n      if (!this._options.dsn) {\n        logger.warn('No DSN provided, backend will not do anything.');\n      }\n      this._transport = this._setupTransport();\n    }\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    BaseBackend.prototype.eventFromException = function (_exception, _hint) {\n      throw new SentryError('Backend has to implement `eventFromException` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromMessage = function (_message, _level, _hint) {\n      throw new SentryError('Backend has to implement `eventFromMessage` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.sendEvent = function (event) {\n      this._transport.sendEvent(event).then(null, function (reason) {\n        logger.error(\"Error while sending event: \" + reason);\n      });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.getTransport = function () {\n      return this._transport;\n    };\n    /**\n     * Sets up the transport so it can be used later to send requests.\n     */\n    BaseBackend.prototype._setupTransport = function () {\n      return new NoopTransport();\n    };\n    return BaseBackend;\n  }();\n\n  /** Creates a SentryRequest from an event. */\n  function eventToSentryRequest(event, api) {\n    var useEnvelope = event.type === 'transaction';\n    var req = {\n      body: JSON.stringify(event),\n      url: useEnvelope ? api.getEnvelopeEndpointWithUrlEncodedAuth() : api.getStoreEndpointWithUrlEncodedAuth()\n    };\n    // https://develop.sentry.dev/sdk/envelopes/\n    // Since we don't need to manipulate envelopes nor store them, there is no\n    // exported concept of an Envelope with operations including serialization and\n    // deserialization. Instead, we only implement a minimal subset of the spec to\n    // serialize events inline here.\n    if (useEnvelope) {\n      var envelopeHeaders = JSON.stringify({\n        event_id: event.event_id,\n        // We need to add * 1000 since we divide it by 1000 by default but JS works with ms precision\n        // The reason we use timestampWithMs here is that all clocks across the SDK use the same clock\n        sent_at: new Date(timestampWithMs() * 1000).toISOString()\n      });\n      var itemHeaders = JSON.stringify({\n        type: event.type\n      });\n      // The trailing newline is optional. We intentionally don't send it to avoid\n      // sending unnecessary bytes.\n      //\n      // const envelope = `${envelopeHeaders}\\n${itemHeaders}\\n${req.body}\\n`;\n      var envelope = envelopeHeaders + \"\\n\" + itemHeaders + \"\\n\" + req.body;\n      req.body = envelope;\n    }\n    return req;\n  }\n\n  /**\n   * Internal function to create a new SDK client instance. The client is\n   * installed and then bound to the current scope.\n   *\n   * @param clientClass The client class to instanciate.\n   * @param options Options to pass to the client.\n   */\n  function initAndBind(clientClass, options) {\n    if (options.debug === true) {\n      logger.enable();\n    }\n    var hub = getCurrentHub();\n    var client = new clientClass(options);\n    hub.bindClient(client);\n  }\n\n  var originalFunctionToString;\n  /** Patch toString calls to return proper name for wrapped functions */\n  var FunctionToString = /** @class */function () {\n    function FunctionToString() {\n      /**\n       * @inheritDoc\n       */\n      this.name = FunctionToString.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.prototype.setupOnce = function () {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      Function.prototype.toString = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var context = this.__sentry_original__ || this;\n        return originalFunctionToString.apply(context, args);\n      };\n    };\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.id = 'FunctionToString';\n    return FunctionToString;\n  }();\n\n  // \"Script error.\" is hard coded into browsers for errors that it can't read.\n  // this is the result of a script being pulled in from an external domain and CORS.\n  var DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n  /** Inbound filters configurable by the user */\n  var InboundFilters = /** @class */function () {\n    function InboundFilters(_options) {\n      if (_options === void 0) {\n        _options = {};\n      }\n      this._options = _options;\n      /**\n       * @inheritDoc\n       */\n      this.name = InboundFilters.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.prototype.setupOnce = function () {\n      addGlobalEventProcessor(function (event) {\n        var hub = getCurrentHub();\n        if (!hub) {\n          return event;\n        }\n        var self = hub.getIntegration(InboundFilters);\n        if (self) {\n          var client = hub.getClient();\n          var clientOptions = client ? client.getOptions() : {};\n          var options = self._mergeOptions(clientOptions);\n          if (self._shouldDropEvent(event, options)) {\n            return null;\n          }\n        }\n        return event;\n      });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._shouldDropEvent = function (event, options) {\n      if (this._isSentryError(event, options)) {\n        logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + getEventDescription(event));\n        return true;\n      }\n      if (this._isIgnoredError(event, options)) {\n        logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + getEventDescription(event));\n        return true;\n      }\n      if (this._isDeniedUrl(event, options)) {\n        logger.warn(\"Event dropped due to being matched by `denyUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n        return true;\n      }\n      if (!this._isAllowedUrl(event, options)) {\n        logger.warn(\"Event dropped due to not being matched by `allowUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n        return true;\n      }\n      return false;\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isSentryError = function (event, options) {\n      if (!options.ignoreInternal) {\n        return false;\n      }\n      try {\n        return event && event.exception && event.exception.values && event.exception.values[0] && event.exception.values[0].type === 'SentryError' || false;\n      } catch (_oO) {\n        return false;\n      }\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isIgnoredError = function (event, options) {\n      if (!options.ignoreErrors || !options.ignoreErrors.length) {\n        return false;\n      }\n      return this._getPossibleEventMessages(event).some(function (message) {\n        // Not sure why TypeScript complains here...\n        return options.ignoreErrors.some(function (pattern) {\n          return isMatchingPattern(message, pattern);\n        });\n      });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isDeniedUrl = function (event, options) {\n      // TODO: Use Glob instead?\n      if (!options.denyUrls || !options.denyUrls.length) {\n        return false;\n      }\n      var url = this._getEventFilterUrl(event);\n      return !url ? false : options.denyUrls.some(function (pattern) {\n        return isMatchingPattern(url, pattern);\n      });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isAllowedUrl = function (event, options) {\n      // TODO: Use Glob instead?\n      if (!options.allowUrls || !options.allowUrls.length) {\n        return true;\n      }\n      var url = this._getEventFilterUrl(event);\n      return !url ? true : options.allowUrls.some(function (pattern) {\n        return isMatchingPattern(url, pattern);\n      });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._mergeOptions = function (clientOptions) {\n      if (clientOptions === void 0) {\n        clientOptions = {};\n      }\n      return {\n        allowUrls: __spread(this._options.whitelistUrls || [], this._options.allowUrls || [], clientOptions.whitelistUrls || [], clientOptions.allowUrls || []),\n        denyUrls: __spread(this._options.blacklistUrls || [], this._options.denyUrls || [], clientOptions.blacklistUrls || [], clientOptions.denyUrls || []),\n        ignoreErrors: __spread(this._options.ignoreErrors || [], clientOptions.ignoreErrors || [], DEFAULT_IGNORE_ERRORS),\n        ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true\n      };\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getPossibleEventMessages = function (event) {\n      if (event.message) {\n        return [event.message];\n      }\n      if (event.exception) {\n        try {\n          var _a = event.exception.values && event.exception.values[0] || {},\n            _b = _a.type,\n            type = _b === void 0 ? '' : _b,\n            _c = _a.value,\n            value = _c === void 0 ? '' : _c;\n          return [\"\" + value, type + \": \" + value];\n        } catch (oO) {\n          logger.error(\"Cannot extract message for event \" + getEventDescription(event));\n          return [];\n        }\n      }\n      return [];\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getEventFilterUrl = function (event) {\n      try {\n        if (event.stacktrace) {\n          var frames_1 = event.stacktrace.frames;\n          return frames_1 && frames_1[frames_1.length - 1].filename || null;\n        }\n        if (event.exception) {\n          var frames_2 = event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;\n          return frames_2 && frames_2[frames_2.length - 1].filename || null;\n        }\n        return null;\n      } catch (oO) {\n        logger.error(\"Cannot extract url for event \" + getEventDescription(event));\n        return null;\n      }\n    };\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.id = 'InboundFilters';\n    return InboundFilters;\n  }();\n\n  /**\n   * This was originally forked from https://github.com/occ/TraceKit, but has since been\n   * largely modified and is now maintained as part of Sentry JS SDK.\n   */\n  // global reference to slice\n  var UNKNOWN_FUNCTION = '?';\n  // Chromium based browsers: Chrome, Brave, new Opera, new Edge\n  var chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n  // gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n  // generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n  // We need this specific case for now because we want no other regex to match.\n  var gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|capacitor).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js))(?::(\\d+))?(?::(\\d+))?\\s*$/i;\n  var winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n  var geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n  var chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n  // Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\n  var reactMinifiedRegexp = /Minified React error #\\d+;/i;\n  /** JSDoc */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  function computeStackTrace(ex) {\n    var stack = null;\n    var popSize = 0;\n    if (ex) {\n      if (typeof ex.framesToPop === 'number') {\n        popSize = ex.framesToPop;\n      } else if (reactMinifiedRegexp.test(ex.message)) {\n        popSize = 1;\n      }\n    }\n    try {\n      // This must be tried first because Opera 10 *destroys*\n      // its stacktrace property if you try to access the stack\n      // property first!!\n      stack = computeStackTraceFromStacktraceProp(ex);\n      if (stack) {\n        return popFrames(stack, popSize);\n      }\n    } catch (e) {\n      // no-empty\n    }\n    try {\n      stack = computeStackTraceFromStackProp(ex);\n      if (stack) {\n        return popFrames(stack, popSize);\n      }\n    } catch (e) {\n      // no-empty\n    }\n    return {\n      message: extractMessage(ex),\n      name: ex && ex.name,\n      stack: [],\n      failed: true\n    };\n  }\n  /** JSDoc */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, complexity\n  function computeStackTraceFromStackProp(ex) {\n    if (!ex || !ex.stack) {\n      return null;\n    }\n    var stack = [];\n    var lines = ex.stack.split('\\n');\n    var isEval;\n    var submatch;\n    var parts;\n    var element;\n    for (var i = 0; i < lines.length; ++i) {\n      if (parts = chrome.exec(lines[i])) {\n        var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n        isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n        if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n          // throw out eval line/column and use top-most line/column number\n          parts[2] = submatch[1]; // url\n          parts[3] = submatch[2]; // line\n          parts[4] = submatch[3]; // column\n        }\n\n        element = {\n          // working with the regexp above is super painful. it is quite a hack, but just stripping the `address at `\n          // prefix here seems like the quickest solution for now.\n          url: parts[2] && parts[2].indexOf('address at ') === 0 ? parts[2].substr('address at '.length) : parts[2],\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: isNative ? [parts[2]] : [],\n          line: parts[3] ? +parts[3] : null,\n          column: parts[4] ? +parts[4] : null\n        };\n      } else if (parts = winjs.exec(lines[i])) {\n        element = {\n          url: parts[2],\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: [],\n          line: +parts[3],\n          column: parts[4] ? +parts[4] : null\n        };\n      } else if (parts = gecko.exec(lines[i])) {\n        isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n        if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n          // throw out eval line/column and use top-most line number\n          parts[1] = parts[1] || \"eval\";\n          parts[3] = submatch[1];\n          parts[4] = submatch[2];\n          parts[5] = ''; // no column when eval\n        } else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n          // FireFox uses this awesome columnNumber property for its top frame\n          // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n          // so adding 1\n          // NOTE: this hack doesn't work if top-most frame is eval\n          stack[0].column = ex.columnNumber + 1;\n        }\n        element = {\n          url: parts[3],\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: parts[2] ? parts[2].split(',') : [],\n          line: parts[4] ? +parts[4] : null,\n          column: parts[5] ? +parts[5] : null\n        };\n      } else {\n        continue;\n      }\n      if (!element.func && element.line) {\n        element.func = UNKNOWN_FUNCTION;\n      }\n      stack.push(element);\n    }\n    if (!stack.length) {\n      return null;\n    }\n    return {\n      message: extractMessage(ex),\n      name: ex.name,\n      stack: stack\n    };\n  }\n  /** JSDoc */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function computeStackTraceFromStacktraceProp(ex) {\n    if (!ex || !ex.stacktrace) {\n      return null;\n    }\n    // Access and store the stacktrace property before doing ANYTHING\n    // else to it because Opera is not very good at providing it\n    // reliably in other circumstances.\n    var stacktrace = ex.stacktrace;\n    var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n    var opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\((.*)\\))? in (.*):\\s*$/i;\n    var lines = stacktrace.split('\\n');\n    var stack = [];\n    var parts;\n    for (var line = 0; line < lines.length; line += 2) {\n      var element = null;\n      if (parts = opera10Regex.exec(lines[line])) {\n        element = {\n          url: parts[2],\n          func: parts[3],\n          args: [],\n          line: +parts[1],\n          column: null\n        };\n      } else if (parts = opera11Regex.exec(lines[line])) {\n        element = {\n          url: parts[6],\n          func: parts[3] || parts[4],\n          args: parts[5] ? parts[5].split(',') : [],\n          line: +parts[1],\n          column: +parts[2]\n        };\n      }\n      if (element) {\n        if (!element.func && element.line) {\n          element.func = UNKNOWN_FUNCTION;\n        }\n        stack.push(element);\n      }\n    }\n    if (!stack.length) {\n      return null;\n    }\n    return {\n      message: extractMessage(ex),\n      name: ex.name,\n      stack: stack\n    };\n  }\n  /** Remove N number of frames from the stack */\n  function popFrames(stacktrace, popSize) {\n    try {\n      return __assign(__assign({}, stacktrace), {\n        stack: stacktrace.stack.slice(popSize)\n      });\n    } catch (e) {\n      return stacktrace;\n    }\n  }\n  /**\n   * There are cases where stacktrace.message is an Event object\n   * https://github.com/getsentry/sentry-javascript/issues/1949\n   * In this specific case we try to extract stacktrace.message.error.message\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function extractMessage(ex) {\n    var message = ex && ex.message;\n    if (!message) {\n      return 'No error message';\n    }\n    if (message.error && typeof message.error.message === 'string') {\n      return message.error.message;\n    }\n    return message;\n  }\n\n  var STACKTRACE_LIMIT = 50;\n  /**\n   * This function creates an exception from an TraceKitStackTrace\n   * @param stacktrace TraceKitStackTrace that will be converted to an exception\n   * @hidden\n   */\n  function exceptionFromStacktrace(stacktrace) {\n    var frames = prepareFramesForEvent(stacktrace.stack);\n    var exception = {\n      type: stacktrace.name,\n      value: stacktrace.message\n    };\n    if (frames && frames.length) {\n      exception.stacktrace = {\n        frames: frames\n      };\n    }\n    if (exception.type === undefined && exception.value === '') {\n      exception.value = 'Unrecoverable error caught';\n    }\n    return exception;\n  }\n  /**\n   * @hidden\n   */\n  function eventFromPlainObject(exception, syntheticException, rejection) {\n    var event = {\n      exception: {\n        values: [{\n          type: isEvent$3(exception) ? exception.constructor.name : rejection ? 'UnhandledRejection' : 'Error',\n          value: \"Non-Error \" + (rejection ? 'promise rejection' : 'exception') + \" captured with keys: \" + extractExceptionKeysForMessage(exception)\n        }]\n      },\n      extra: {\n        __serialized__: normalizeToSize(exception)\n      }\n    };\n    if (syntheticException) {\n      var stacktrace = computeStackTrace(syntheticException);\n      var frames_1 = prepareFramesForEvent(stacktrace.stack);\n      event.stacktrace = {\n        frames: frames_1\n      };\n    }\n    return event;\n  }\n  /**\n   * @hidden\n   */\n  function eventFromStacktrace(stacktrace) {\n    var exception = exceptionFromStacktrace(stacktrace);\n    return {\n      exception: {\n        values: [exception]\n      }\n    };\n  }\n  /**\n   * @hidden\n   */\n  function prepareFramesForEvent(stack) {\n    if (!stack || !stack.length) {\n      return [];\n    }\n    var localStack = stack;\n    var firstFrameFunction = localStack[0].func || '';\n    var lastFrameFunction = localStack[localStack.length - 1].func || '';\n    // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n    if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n      localStack = localStack.slice(1);\n    }\n    // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n    if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n      localStack = localStack.slice(0, -1);\n    }\n    // The frame where the crash happened, should be the last entry in the array\n    return localStack.slice(0, STACKTRACE_LIMIT).map(function (frame) {\n      return {\n        colno: frame.column === null ? undefined : frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line === null ? undefined : frame.line\n      };\n    }).reverse();\n  }\n\n  /**\n   * Builds and Event from a Exception\n   * @hidden\n   */\n  function eventFromException(options, exception, hint) {\n    var syntheticException = hint && hint.syntheticException || undefined;\n    var event = eventFromUnknownInput(exception, syntheticException, {\n      attachStacktrace: options.attachStacktrace\n    });\n    addExceptionMechanism(event, {\n      handled: true,\n      type: 'generic'\n    });\n    event.level = Severity.Error;\n    if (hint && hint.event_id) {\n      event.event_id = hint.event_id;\n    }\n    return SyncPromise.resolve(event);\n  }\n  /**\n   * Builds and Event from a Message\n   * @hidden\n   */\n  function eventFromMessage(options, message, level, hint) {\n    if (level === void 0) {\n      level = Severity.Info;\n    }\n    var syntheticException = hint && hint.syntheticException || undefined;\n    var event = eventFromString(message, syntheticException, {\n      attachStacktrace: options.attachStacktrace\n    });\n    event.level = level;\n    if (hint && hint.event_id) {\n      event.event_id = hint.event_id;\n    }\n    return SyncPromise.resolve(event);\n  }\n  /**\n   * @hidden\n   */\n  function eventFromUnknownInput(exception, syntheticException, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var event;\n    if (isErrorEvent(exception) && exception.error) {\n      // If it is an ErrorEvent with `error` property, extract it to get actual Error\n      var errorEvent = exception;\n      // eslint-disable-next-line no-param-reassign\n      exception = errorEvent.error;\n      event = eventFromStacktrace(computeStackTrace(exception));\n      return event;\n    }\n    if (isDOMError(exception) || isDOMException(exception)) {\n      // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n      // then we just extract the name and message, as they don't provide anything else\n      // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n      // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n      var domException = exception;\n      var name_1 = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      var message = domException.message ? name_1 + \": \" + domException.message : name_1;\n      event = eventFromString(message, syntheticException, options);\n      addExceptionTypeValue(event, message);\n      return event;\n    }\n    if (isError(exception)) {\n      // we have a real Error object, do nothing\n      event = eventFromStacktrace(computeStackTrace(exception));\n      return event;\n    }\n    if (isPlainObject(exception) || isEvent$3(exception)) {\n      // If it is plain Object or Event, serialize it manually and extract options\n      // This will allow us to group events based on top-level keys\n      // which is much better than creating new group when any key/value change\n      var objectException = exception;\n      event = eventFromPlainObject(objectException, syntheticException, options.rejection);\n      addExceptionMechanism(event, {\n        synthetic: true\n      });\n      return event;\n    }\n    // If none of previous checks were valid, then it means that it's not:\n    // - an instance of DOMError\n    // - an instance of DOMException\n    // - an instance of Event\n    // - an instance of Error\n    // - a valid ErrorEvent (one with an error property)\n    // - a plain Object\n    //\n    // So bail out and capture it as a simple message:\n    event = eventFromString(exception, syntheticException, options);\n    addExceptionTypeValue(event, \"\" + exception, undefined);\n    addExceptionMechanism(event, {\n      synthetic: true\n    });\n    return event;\n  }\n  /**\n   * @hidden\n   */\n  function eventFromString(input, syntheticException, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var event = {\n      message: input\n    };\n    if (options.attachStacktrace && syntheticException) {\n      var stacktrace = computeStackTrace(syntheticException);\n      var frames_1 = prepareFramesForEvent(stacktrace.stack);\n      event.stacktrace = {\n        frames: frames_1\n      };\n    }\n    return event;\n  }\n\n  /** Base Transport class implementation */\n  var BaseTransport = /** @class */function () {\n    function BaseTransport(options) {\n      this.options = options;\n      /** A simple buffer holding all requests. */\n      this._buffer = new PromiseBuffer(30);\n      this._api = new API(this.options.dsn);\n      // eslint-disable-next-line deprecation/deprecation\n      this.url = this._api.getStoreEndpointWithUrlEncodedAuth();\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.sendEvent = function (_) {\n      throw new SentryError('Transport Class has to implement `sendEvent` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.close = function (timeout) {\n      return this._buffer.drain(timeout);\n    };\n    return BaseTransport;\n  }();\n\n  var global$2 = getGlobalObject();\n  /** `fetch` based transport */\n  var FetchTransport = /** @class */function (_super) {\n    __extends(FetchTransport, _super);\n    function FetchTransport() {\n      var _this = _super !== null && _super.apply(this, arguments) || this;\n      /** Locks transport after receiving 429 response */\n      _this._disabledUntil = new Date(Date.now());\n      return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    FetchTransport.prototype.sendEvent = function (event) {\n      var _this = this;\n      if (new Date(Date.now()) < this._disabledUntil) {\n        return Promise.reject({\n          event: event,\n          reason: \"Transport locked till \" + this._disabledUntil + \" due to too many requests.\",\n          status: 429\n        });\n      }\n      var sentryReq = eventToSentryRequest(event, this._api);\n      var options = {\n        body: sentryReq.body,\n        method: 'POST',\n        // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n        // https://caniuse.com/#feat=referrer-policy\n        // It doesn't. And it throw exception instead of ignoring this parameter...\n        // REF: https://github.com/getsentry/raven-js/issues/1233\n        referrerPolicy: supportsReferrerPolicy() ? 'origin' : ''\n      };\n      if (this.options.fetchParameters !== undefined) {\n        Object.assign(options, this.options.fetchParameters);\n      }\n      if (this.options.headers !== undefined) {\n        options.headers = this.options.headers;\n      }\n      return this._buffer.add(new SyncPromise(function (resolve, reject) {\n        global$2.fetch(sentryReq.url, options).then(function (response) {\n          var status = Status.fromHttpCode(response.status);\n          if (status === Status.Success) {\n            resolve({\n              status: status\n            });\n            return;\n          }\n          if (status === Status.RateLimit) {\n            var now = Date.now();\n            /**\n             * \"The name is case-insensitive.\"\n             * https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n             */\n            var retryAfterHeader = response.headers.get('Retry-After');\n            _this._disabledUntil = new Date(now + parseRetryAfterHeader(now, retryAfterHeader));\n            logger.warn(\"Too many requests, backing off till: \" + _this._disabledUntil);\n          }\n          reject(response);\n        }).catch(reject);\n      }));\n    };\n    return FetchTransport;\n  }(BaseTransport);\n\n  /** `XHR` based transport */\n  var XHRTransport = /** @class */function (_super) {\n    __extends(XHRTransport, _super);\n    function XHRTransport() {\n      var _this = _super !== null && _super.apply(this, arguments) || this;\n      /** Locks transport after receiving 429 response */\n      _this._disabledUntil = new Date(Date.now());\n      return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XHRTransport.prototype.sendEvent = function (event) {\n      var _this = this;\n      if (new Date(Date.now()) < this._disabledUntil) {\n        return Promise.reject({\n          event: event,\n          reason: \"Transport locked till \" + this._disabledUntil + \" due to too many requests.\",\n          status: 429\n        });\n      }\n      var sentryReq = eventToSentryRequest(event, this._api);\n      return this._buffer.add(new SyncPromise(function (resolve, reject) {\n        var request = new XMLHttpRequest();\n        request.onreadystatechange = function () {\n          if (request.readyState !== 4) {\n            return;\n          }\n          var status = Status.fromHttpCode(request.status);\n          if (status === Status.Success) {\n            resolve({\n              status: status\n            });\n            return;\n          }\n          if (status === Status.RateLimit) {\n            var now = Date.now();\n            /**\n             * \"The search for the header name is case-insensitive.\"\n             * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getResponseHeader\n             */\n            var retryAfterHeader = request.getResponseHeader('Retry-After');\n            _this._disabledUntil = new Date(now + parseRetryAfterHeader(now, retryAfterHeader));\n            logger.warn(\"Too many requests, backing off till: \" + _this._disabledUntil);\n          }\n          reject(request);\n        };\n        request.open('POST', sentryReq.url);\n        for (var header in _this.options.headers) {\n          if (_this.options.headers.hasOwnProperty(header)) {\n            request.setRequestHeader(header, _this.options.headers[header]);\n          }\n        }\n        request.send(sentryReq.body);\n      }));\n    };\n    return XHRTransport;\n  }(BaseTransport);\n\n  /**\n   * The Sentry Browser SDK Backend.\n   * @hidden\n   */\n  var BrowserBackend = /** @class */function (_super) {\n    __extends(BrowserBackend, _super);\n    function BrowserBackend() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromException = function (exception, hint) {\n      return eventFromException(this._options, exception, hint);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromMessage = function (message, level, hint) {\n      if (level === void 0) {\n        level = Severity.Info;\n      }\n      return eventFromMessage(this._options, message, level, hint);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype._setupTransport = function () {\n      if (!this._options.dsn) {\n        // We return the noop transport here in case there is no Dsn.\n        return _super.prototype._setupTransport.call(this);\n      }\n      var transportOptions = __assign(__assign({}, this._options.transportOptions), {\n        dsn: this._options.dsn\n      });\n      if (this._options.transport) {\n        return new this._options.transport(transportOptions);\n      }\n      if (supportsFetch()) {\n        return new FetchTransport(transportOptions);\n      }\n      return new XHRTransport(transportOptions);\n    };\n    return BrowserBackend;\n  }(BaseBackend);\n\n  var ignoreOnError = 0;\n  /**\n   * @hidden\n   */\n  function shouldIgnoreOnError() {\n    return ignoreOnError > 0;\n  }\n  /**\n   * @hidden\n   */\n  function ignoreNextOnError() {\n    // onerror should trigger before setTimeout\n    ignoreOnError += 1;\n    setTimeout(function () {\n      ignoreOnError -= 1;\n    });\n  }\n  /**\n   * Instruments the given function and sends an event to Sentry every time the\n   * function throws an exception.\n   *\n   * @param fn A function to wrap.\n   * @returns The wrapped function.\n   * @hidden\n   */\n  function wrap$2(fn, options, before) {\n    if (options === void 0) {\n      options = {};\n    }\n    if (typeof fn !== 'function') {\n      return fn;\n    }\n    try {\n      // We don't wanna wrap it twice\n      if (fn.__sentry__) {\n        return fn;\n      }\n      // If this has already been wrapped in the past, return that wrapped function\n      if (fn.__sentry_wrapped__) {\n        return fn.__sentry_wrapped__;\n      }\n    } catch (e) {\n      // Just accessing custom props in some Selenium environments\n      // can cause a \"Permission denied\" exception (see raven-js#495).\n      // Bail on wrapping and return the function as-is (defers to window.onerror).\n      return fn;\n    }\n    /* eslint-disable prefer-rest-params */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var sentryWrapped = function () {\n      var args = Array.prototype.slice.call(arguments);\n      try {\n        if (before && typeof before === 'function') {\n          before.apply(this, arguments);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n        var wrappedArguments = args.map(function (arg) {\n          return wrap$2(arg, options);\n        });\n        if (fn.handleEvent) {\n          // Attempt to invoke user-land function\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n          //       means the sentry.javascript SDK caught an error invoking your application code. This\n          //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          return fn.handleEvent.apply(this, wrappedArguments);\n        }\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means the sentry.javascript SDK caught an error invoking your application code. This\n        //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n        return fn.apply(this, wrappedArguments);\n      } catch (ex) {\n        ignoreNextOnError();\n        withScope(function (scope) {\n          scope.addEventProcessor(function (event) {\n            var processedEvent = __assign({}, event);\n            if (options.mechanism) {\n              addExceptionTypeValue(processedEvent, undefined, undefined);\n              addExceptionMechanism(processedEvent, options.mechanism);\n            }\n            processedEvent.extra = __assign(__assign({}, processedEvent.extra), {\n              arguments: args\n            });\n            return processedEvent;\n          });\n          captureException(ex);\n        });\n        throw ex;\n      }\n    };\n    /* eslint-enable prefer-rest-params */\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n    try {\n      for (var property in fn) {\n        if (Object.prototype.hasOwnProperty.call(fn, property)) {\n          sentryWrapped[property] = fn[property];\n        }\n      }\n    } catch (_oO) {} // eslint-disable-line no-empty\n    fn.prototype = fn.prototype || {};\n    sentryWrapped.prototype = fn.prototype;\n    Object.defineProperty(fn, '__sentry_wrapped__', {\n      enumerable: false,\n      value: sentryWrapped\n    });\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    Object.defineProperties(sentryWrapped, {\n      __sentry__: {\n        enumerable: false,\n        value: true\n      },\n      __sentry_original__: {\n        enumerable: false,\n        value: fn\n      }\n    });\n    // Restore original function name (not all browsers allow that)\n    try {\n      var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name');\n      if (descriptor.configurable) {\n        Object.defineProperty(sentryWrapped, 'name', {\n          get: function () {\n            return fn.name;\n          }\n        });\n      }\n      // eslint-disable-next-line no-empty\n    } catch (_oO) {}\n    return sentryWrapped;\n  }\n  /**\n   * Injects the Report Dialog script\n   * @hidden\n   */\n  function injectReportDialog(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    if (!options.eventId) {\n      logger.error(\"Missing eventId option in showReportDialog call\");\n      return;\n    }\n    if (!options.dsn) {\n      logger.error(\"Missing dsn option in showReportDialog call\");\n      return;\n    }\n    var script = document.createElement('script');\n    script.async = true;\n    script.src = new API(options.dsn).getReportDialogEndpoint(options);\n    if (options.onLoad) {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      script.onload = options.onLoad;\n    }\n    (document.head || document.body).appendChild(script);\n  }\n\n  /** Global handlers */\n  var GlobalHandlers = /** @class */function () {\n    /** JSDoc */\n    function GlobalHandlers(options) {\n      /**\n       * @inheritDoc\n       */\n      this.name = GlobalHandlers.id;\n      /** JSDoc */\n      this._onErrorHandlerInstalled = false;\n      /** JSDoc */\n      this._onUnhandledRejectionHandlerInstalled = false;\n      this._options = __assign({\n        onerror: true,\n        onunhandledrejection: true\n      }, options);\n    }\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.prototype.setupOnce = function () {\n      Error.stackTraceLimit = 50;\n      if (this._options.onerror) {\n        logger.log('Global Handler attached: onerror');\n        this._installGlobalOnErrorHandler();\n      }\n      if (this._options.onunhandledrejection) {\n        logger.log('Global Handler attached: onunhandledrejection');\n        this._installGlobalOnUnhandledRejectionHandler();\n      }\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._installGlobalOnErrorHandler = function () {\n      var _this = this;\n      if (this._onErrorHandlerInstalled) {\n        return;\n      }\n      addInstrumentationHandler({\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        callback: function (data) {\n          var error = data.error;\n          var currentHub = getCurrentHub();\n          var hasIntegration = currentHub.getIntegration(GlobalHandlers);\n          var isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n          if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n            return;\n          }\n          var client = currentHub.getClient();\n          var event = isPrimitive(error) ? _this._eventFromIncompleteOnError(data.msg, data.url, data.line, data.column) : _this._enhanceEventWithInitialFrame(eventFromUnknownInput(error, undefined, {\n            attachStacktrace: client && client.getOptions().attachStacktrace,\n            rejection: false\n          }), data.url, data.line, data.column);\n          addExceptionMechanism(event, {\n            handled: false,\n            type: 'onerror'\n          });\n          currentHub.captureEvent(event, {\n            originalException: error\n          });\n        },\n        type: 'error'\n      });\n      this._onErrorHandlerInstalled = true;\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._installGlobalOnUnhandledRejectionHandler = function () {\n      var _this = this;\n      if (this._onUnhandledRejectionHandlerInstalled) {\n        return;\n      }\n      addInstrumentationHandler({\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        callback: function (e) {\n          var error = e;\n          // dig the object of the rejection out of known event types\n          try {\n            // PromiseRejectionEvents store the object of the rejection under 'reason'\n            // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n            if ('reason' in e) {\n              error = e.reason;\n            }\n            // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n            // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n            // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n            // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n            // https://github.com/getsentry/sentry-javascript/issues/2380\n            else if ('detail' in e && 'reason' in e.detail) {\n              error = e.detail.reason;\n            }\n          } catch (_oO) {\n            // no-empty\n          }\n          var currentHub = getCurrentHub();\n          var hasIntegration = currentHub.getIntegration(GlobalHandlers);\n          var isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n          if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n            return true;\n          }\n          var client = currentHub.getClient();\n          var event = isPrimitive(error) ? _this._eventFromIncompleteRejection(error) : eventFromUnknownInput(error, undefined, {\n            attachStacktrace: client && client.getOptions().attachStacktrace,\n            rejection: true\n          });\n          event.level = Severity.Error;\n          addExceptionMechanism(event, {\n            handled: false,\n            type: 'onunhandledrejection'\n          });\n          currentHub.captureEvent(event, {\n            originalException: error\n          });\n          return;\n        },\n        type: 'unhandledrejection'\n      });\n      this._onUnhandledRejectionHandlerInstalled = true;\n    };\n    /**\n     * This function creates a stack from an old, error-less onerror handler.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    GlobalHandlers.prototype._eventFromIncompleteOnError = function (msg, url, line, column) {\n      var ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n      // If 'message' is ErrorEvent, get real message from inside\n      var message = isErrorEvent(msg) ? msg.message : msg;\n      var name;\n      if (isString$3(message)) {\n        var groups = message.match(ERROR_TYPES_RE);\n        if (groups) {\n          name = groups[1];\n          message = groups[2];\n        }\n      }\n      var event = {\n        exception: {\n          values: [{\n            type: name || 'Error',\n            value: message\n          }]\n        }\n      };\n      return this._enhanceEventWithInitialFrame(event, url, line, column);\n    };\n    /**\n     * This function creates an Event from an TraceKitStackTrace that has part of it missing.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    GlobalHandlers.prototype._eventFromIncompleteRejection = function (error) {\n      return {\n        exception: {\n          values: [{\n            type: 'UnhandledRejection',\n            value: \"Non-Error promise rejection captured with value: \" + error\n          }]\n        }\n      };\n    };\n    /** JSDoc */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    GlobalHandlers.prototype._enhanceEventWithInitialFrame = function (event, url, line, column) {\n      event.exception = event.exception || {};\n      event.exception.values = event.exception.values || [];\n      event.exception.values[0] = event.exception.values[0] || {};\n      event.exception.values[0].stacktrace = event.exception.values[0].stacktrace || {};\n      event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames || [];\n      var colno = isNaN(parseInt(column, 10)) ? undefined : column;\n      var lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n      var filename = isString$3(url) && url.length > 0 ? url : getLocationHref();\n      if (event.exception.values[0].stacktrace.frames.length === 0) {\n        event.exception.values[0].stacktrace.frames.push({\n          colno: colno,\n          filename: filename,\n          function: '?',\n          in_app: true,\n          lineno: lineno\n        });\n      }\n      return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.id = 'GlobalHandlers';\n    return GlobalHandlers;\n  }();\n\n  var DEFAULT_EVENT_TARGET = ['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'ChannelMergerNode', 'CryptoOperation', 'EventSource', 'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController', 'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'TextTrack', 'TextTrackCue', 'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'XMLHttpRequestUpload'];\n  /** Wrap timer functions and event targets to catch errors and provide better meta data */\n  var TryCatch = /** @class */function () {\n    /**\n     * @inheritDoc\n     */\n    function TryCatch(options) {\n      /**\n       * @inheritDoc\n       */\n      this.name = TryCatch.id;\n      this._options = __assign({\n        XMLHttpRequest: true,\n        eventTarget: true,\n        requestAnimationFrame: true,\n        setInterval: true,\n        setTimeout: true\n      }, options);\n    }\n    /**\n     * Wrap timer functions and event targets to catch errors\n     * and provide better metadata.\n     */\n    TryCatch.prototype.setupOnce = function () {\n      var global = getGlobalObject();\n      if (this._options.setTimeout) {\n        fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n      }\n      if (this._options.setInterval) {\n        fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n      }\n      if (this._options.requestAnimationFrame) {\n        fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n      }\n      if (this._options.XMLHttpRequest && 'XMLHttpRequest' in global) {\n        fill(XMLHttpRequest.prototype, 'send', this._wrapXHR.bind(this));\n      }\n      if (this._options.eventTarget) {\n        var eventTarget = Array.isArray(this._options.eventTarget) ? this._options.eventTarget : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(this._wrapEventTarget.bind(this));\n      }\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapTimeFunction = function (original) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var originalCallback = args[0];\n        args[0] = wrap$2(originalCallback, {\n          mechanism: {\n            data: {\n              function: getFunctionName(original)\n            },\n            handled: true,\n            type: 'instrument'\n          }\n        });\n        return original.apply(this, args);\n      };\n    };\n    /** JSDoc */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TryCatch.prototype._wrapRAF = function (original) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return function (callback) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        return original.call(this, wrap$2(callback, {\n          mechanism: {\n            data: {\n              function: 'requestAnimationFrame',\n              handler: getFunctionName(original)\n            },\n            handled: true,\n            type: 'instrument'\n          }\n        }));\n      };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapEventTarget = function (target) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var global = getGlobalObject();\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      var proto = global[target] && global[target].prototype;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n        return;\n      }\n      fill(proto, 'addEventListener', function (original) {\n        return function (eventName, fn, options) {\n          try {\n            if (typeof fn.handleEvent === 'function') {\n              fn.handleEvent = wrap$2(fn.handleEvent.bind(fn), {\n                mechanism: {\n                  data: {\n                    function: 'handleEvent',\n                    handler: getFunctionName(fn),\n                    target: target\n                  },\n                  handled: true,\n                  type: 'instrument'\n                }\n              });\n            }\n          } catch (err) {\n            // can sometimes get 'Permission denied to access property \"handle Event'\n          }\n          return original.call(this, eventName,\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          wrap$2(fn, {\n            mechanism: {\n              data: {\n                function: 'addEventListener',\n                handler: getFunctionName(fn),\n                target: target\n              },\n              handled: true,\n              type: 'instrument'\n            }\n          }), options);\n        };\n      });\n      fill(proto, 'removeEventListener', function (original) {\n        return function (eventName, fn, options) {\n          /**\n           * There are 2 possible scenarios here:\n           *\n           * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n           * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n           * as a pass-through, and call original `removeEventListener` with it.\n           *\n           * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n           * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n           * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n           * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n           * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n           *\n           * When someone adds a handler prior to initialization, and then do it again, but after,\n           * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n           * to get rid of the initial handler and it'd stick there forever.\n           */\n          try {\n            original.call(this, eventName, fn.__sentry_wrapped__, options);\n          } catch (e) {\n            // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n          }\n          return original.call(this, eventName, fn, options);\n        };\n      });\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapXHR = function (originalSend) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var xhr = this;\n        var xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n        xmlHttpRequestProps.forEach(function (prop) {\n          if (prop in xhr && typeof xhr[prop] === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            fill(xhr, prop, function (original) {\n              var wrapOptions = {\n                mechanism: {\n                  data: {\n                    function: prop,\n                    handler: getFunctionName(original)\n                  },\n                  handled: true,\n                  type: 'instrument'\n                }\n              };\n              // If Instrument integration has been called before TryCatch, get the name of original function\n              if (original.__sentry_original__) {\n                wrapOptions.mechanism.data.handler = getFunctionName(original.__sentry_original__);\n              }\n              // Otherwise wrap directly\n              return wrap$2(original, wrapOptions);\n            });\n          }\n        });\n        return originalSend.apply(this, args);\n      };\n    };\n    /**\n     * @inheritDoc\n     */\n    TryCatch.id = 'TryCatch';\n    return TryCatch;\n  }();\n\n  /**\n   * Default Breadcrumbs instrumentations\n   * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n   */\n  var Breadcrumbs = /** @class */function () {\n    /**\n     * @inheritDoc\n     */\n    function Breadcrumbs(options) {\n      /**\n       * @inheritDoc\n       */\n      this.name = Breadcrumbs.id;\n      this._options = __assign({\n        console: true,\n        dom: true,\n        fetch: true,\n        history: true,\n        sentry: true,\n        xhr: true\n      }, options);\n    }\n    /**\n     * Create a breadcrumb of `sentry` from the events themselves\n     */\n    Breadcrumbs.prototype.addSentryBreadcrumb = function (event) {\n      if (!this._options.sentry) {\n        return;\n      }\n      getCurrentHub().addBreadcrumb({\n        category: \"sentry.\" + (event.type === 'transaction' ? 'transaction' : 'event'),\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event)\n      }, {\n        event: event\n      });\n    };\n    /**\n     * Instrument browser built-ins w/ breadcrumb capturing\n     *  - Console API\n     *  - DOM API (click/typing)\n     *  - XMLHttpRequest API\n     *  - Fetch API\n     *  - History API\n     */\n    Breadcrumbs.prototype.setupOnce = function () {\n      var _this = this;\n      if (this._options.console) {\n        addInstrumentationHandler({\n          callback: function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n            _this._consoleBreadcrumb.apply(_this, __spread(args));\n          },\n          type: 'console'\n        });\n      }\n      if (this._options.dom) {\n        addInstrumentationHandler({\n          callback: function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n            _this._domBreadcrumb.apply(_this, __spread(args));\n          },\n          type: 'dom'\n        });\n      }\n      if (this._options.xhr) {\n        addInstrumentationHandler({\n          callback: function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n            _this._xhrBreadcrumb.apply(_this, __spread(args));\n          },\n          type: 'xhr'\n        });\n      }\n      if (this._options.fetch) {\n        addInstrumentationHandler({\n          callback: function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n            _this._fetchBreadcrumb.apply(_this, __spread(args));\n          },\n          type: 'fetch'\n        });\n      }\n      if (this._options.history) {\n        addInstrumentationHandler({\n          callback: function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n              args[_i] = arguments[_i];\n            }\n            _this._historyBreadcrumb.apply(_this, __spread(args));\n          },\n          type: 'history'\n        });\n      }\n    };\n    /**\n     * Creates breadcrumbs from console API calls\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Breadcrumbs.prototype._consoleBreadcrumb = function (handlerData) {\n      var breadcrumb = {\n        category: 'console',\n        data: {\n          arguments: handlerData.args,\n          logger: 'console'\n        },\n        level: Severity.fromString(handlerData.level),\n        message: safeJoin(handlerData.args, ' ')\n      };\n      if (handlerData.level === 'assert') {\n        if (handlerData.args[0] === false) {\n          breadcrumb.message = \"Assertion failed: \" + (safeJoin(handlerData.args.slice(1), ' ') || 'console.assert');\n          breadcrumb.data.arguments = handlerData.args.slice(1);\n        } else {\n          // Don't capture a breadcrumb for passed assertions\n          return;\n        }\n      }\n      getCurrentHub().addBreadcrumb(breadcrumb, {\n        input: handlerData.args,\n        level: handlerData.level\n      });\n    };\n    /**\n     * Creates breadcrumbs from DOM API calls\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Breadcrumbs.prototype._domBreadcrumb = function (handlerData) {\n      var target;\n      // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n      try {\n        target = handlerData.event.target ? htmlTreeAsString(handlerData.event.target) : htmlTreeAsString(handlerData.event);\n      } catch (e) {\n        target = '<unknown>';\n      }\n      if (target.length === 0) {\n        return;\n      }\n      getCurrentHub().addBreadcrumb({\n        category: \"ui.\" + handlerData.name,\n        message: target\n      }, {\n        event: handlerData.event,\n        name: handlerData.name\n      });\n    };\n    /**\n     * Creates breadcrumbs from XHR API calls\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Breadcrumbs.prototype._xhrBreadcrumb = function (handlerData) {\n      if (handlerData.endTimestamp) {\n        // We only capture complete, non-sentry requests\n        if (handlerData.xhr.__sentry_own_request__) {\n          return;\n        }\n        getCurrentHub().addBreadcrumb({\n          category: 'xhr',\n          data: handlerData.xhr.__sentry_xhr__,\n          type: 'http'\n        }, {\n          xhr: handlerData.xhr\n        });\n        return;\n      }\n    };\n    /**\n     * Creates breadcrumbs from fetch API calls\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Breadcrumbs.prototype._fetchBreadcrumb = function (handlerData) {\n      // We only capture complete fetch requests\n      if (!handlerData.endTimestamp) {\n        return;\n      }\n      if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n        // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n        return;\n      }\n      if (handlerData.error) {\n        getCurrentHub().addBreadcrumb({\n          category: 'fetch',\n          data: handlerData.fetchData,\n          level: Severity.Error,\n          type: 'http'\n        }, {\n          data: handlerData.error,\n          input: handlerData.args\n        });\n      } else {\n        getCurrentHub().addBreadcrumb({\n          category: 'fetch',\n          data: __assign(__assign({}, handlerData.fetchData), {\n            status_code: handlerData.response.status\n          }),\n          type: 'http'\n        }, {\n          input: handlerData.args,\n          response: handlerData.response\n        });\n      }\n    };\n    /**\n     * Creates breadcrumbs from history API calls\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Breadcrumbs.prototype._historyBreadcrumb = function (handlerData) {\n      var global = getGlobalObject();\n      var from = handlerData.from;\n      var to = handlerData.to;\n      var parsedLoc = parseUrl$1(global.location.href);\n      var parsedFrom = parseUrl$1(from);\n      var parsedTo = parseUrl$1(to);\n      // Initial pushState doesn't provide `from` information\n      if (!parsedFrom.path) {\n        parsedFrom = parsedLoc;\n      }\n      // Use only the path component of the URL if the URL matches the current\n      // document (almost all the time when using pushState)\n      if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n        to = parsedTo.relative;\n      }\n      if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n        from = parsedFrom.relative;\n      }\n      getCurrentHub().addBreadcrumb({\n        category: 'navigation',\n        data: {\n          from: from,\n          to: to\n        }\n      });\n    };\n    /**\n     * @inheritDoc\n     */\n    Breadcrumbs.id = 'Breadcrumbs';\n    return Breadcrumbs;\n  }();\n\n  var DEFAULT_KEY = 'cause';\n  var DEFAULT_LIMIT = 5;\n  /** Adds SDK info to an event. */\n  var LinkedErrors = /** @class */function () {\n    /**\n     * @inheritDoc\n     */\n    function LinkedErrors(options) {\n      if (options === void 0) {\n        options = {};\n      }\n      /**\n       * @inheritDoc\n       */\n      this.name = LinkedErrors.id;\n      this._key = options.key || DEFAULT_KEY;\n      this._limit = options.limit || DEFAULT_LIMIT;\n    }\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype.setupOnce = function () {\n      addGlobalEventProcessor(function (event, hint) {\n        var self = getCurrentHub().getIntegration(LinkedErrors);\n        if (self) {\n          return self._handler(event, hint);\n        }\n        return event;\n      });\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._handler = function (event, hint) {\n      if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n        return event;\n      }\n      var linkedErrors = this._walkErrorTree(hint.originalException, this._key);\n      event.exception.values = __spread(linkedErrors, event.exception.values);\n      return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._walkErrorTree = function (error, key, stack) {\n      if (stack === void 0) {\n        stack = [];\n      }\n      if (!isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit) {\n        return stack;\n      }\n      var stacktrace = computeStackTrace(error[key]);\n      var exception = exceptionFromStacktrace(stacktrace);\n      return this._walkErrorTree(error[key], key, __spread([exception], stack));\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.id = 'LinkedErrors';\n    return LinkedErrors;\n  }();\n\n  var global$1 = getGlobalObject();\n  /** UserAgent */\n  var UserAgent = /** @class */function () {\n    function UserAgent() {\n      /**\n       * @inheritDoc\n       */\n      this.name = UserAgent.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    UserAgent.prototype.setupOnce = function () {\n      addGlobalEventProcessor(function (event) {\n        if (getCurrentHub().getIntegration(UserAgent)) {\n          if (!global$1.navigator || !global$1.location) {\n            return event;\n          }\n          var request = event.request || {};\n          request.url = request.url || global$1.location.href;\n          request.headers = request.headers || {};\n          request.headers['User-Agent'] = global$1.navigator.userAgent;\n          return __assign(__assign({}, event), {\n            request: request\n          });\n        }\n        return event;\n      });\n    };\n    /**\n     * @inheritDoc\n     */\n    UserAgent.id = 'UserAgent';\n    return UserAgent;\n  }();\n\n  var SDK_NAME = 'sentry.javascript.browser';\n  var SDK_VERSION = '5.22.3';\n\n  /**\n   * The Sentry Browser SDK Client.\n   *\n   * @see BrowserOptions for documentation on configuration options.\n   * @see SentryClient for usage documentation.\n   */\n  var BrowserClient = /** @class */function (_super) {\n    __extends(BrowserClient, _super);\n    /**\n     * Creates a new Browser SDK instance.\n     *\n     * @param options Configuration options for this SDK.\n     */\n    function BrowserClient(options) {\n      if (options === void 0) {\n        options = {};\n      }\n      return _super.call(this, BrowserBackend, options) || this;\n    }\n    /**\n     * Show a report dialog to the user to send feedback to a specific event.\n     *\n     * @param options Set individual options for the dialog\n     */\n    BrowserClient.prototype.showReportDialog = function (options) {\n      if (options === void 0) {\n        options = {};\n      }\n      // doesn't work without a document (React Native)\n      var document = getGlobalObject().document;\n      if (!document) {\n        return;\n      }\n      if (!this._isEnabled()) {\n        logger.error('Trying to call showReportDialog with Sentry Client disabled');\n        return;\n      }\n      injectReportDialog(__assign(__assign({}, options), {\n        dsn: options.dsn || this.getDsn()\n      }));\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserClient.prototype._prepareEvent = function (event, scope, hint) {\n      event.platform = event.platform || 'javascript';\n      event.sdk = __assign(__assign({}, event.sdk), {\n        name: SDK_NAME,\n        packages: __spread(event.sdk && event.sdk.packages || [], [{\n          name: 'npm:@sentry/browser',\n          version: SDK_VERSION\n        }]),\n        version: SDK_VERSION\n      });\n      return _super.prototype._prepareEvent.call(this, event, scope, hint);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserClient.prototype._sendEvent = function (event) {\n      var integration = this.getIntegration(Breadcrumbs);\n      if (integration) {\n        integration.addSentryBreadcrumb(event);\n      }\n      _super.prototype._sendEvent.call(this, event);\n    };\n    return BrowserClient;\n  }(BaseClient);\n\n  var defaultIntegrations = [new InboundFilters(), new FunctionToString(), new TryCatch(), new Breadcrumbs(), new GlobalHandlers(), new LinkedErrors(), new UserAgent()];\n  /**\n   * The Sentry Browser SDK Client.\n   *\n   * To use this SDK, call the {@link init} function as early as possible when\n   * loading the web page. To set context information or send manual events, use\n   * the provided methods.\n   *\n   * @example\n   *\n   * ```\n   *\n   * import { init } from '@sentry/browser';\n   *\n   * init({\n   *   dsn: '__DSN__',\n   *   // ...\n   * });\n   * ```\n   *\n   * @example\n   * ```\n   *\n   * import { configureScope } from '@sentry/browser';\n   * configureScope((scope: Scope) => {\n   *   scope.setExtra({ battery: 0.7 });\n   *   scope.setTag({ user_mode: 'admin' });\n   *   scope.setUser({ id: '4711' });\n   * });\n   * ```\n   *\n   * @example\n   * ```\n   *\n   * import { addBreadcrumb } from '@sentry/browser';\n   * addBreadcrumb({\n   *   message: 'My Breadcrumb',\n   *   // ...\n   * });\n   * ```\n   *\n   * @example\n   *\n   * ```\n   *\n   * import * as Sentry from '@sentry/browser';\n   * Sentry.captureMessage('Hello, world!');\n   * Sentry.captureException(new Error('Good bye'));\n   * Sentry.captureEvent({\n   *   message: 'Manual',\n   *   stacktrace: [\n   *     // ...\n   *   ],\n   * });\n   * ```\n   *\n   * @see {@link BrowserOptions} for documentation on configuration options.\n   */\n  function init(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    if (options.defaultIntegrations === undefined) {\n      options.defaultIntegrations = defaultIntegrations;\n    }\n    if (options.release === undefined) {\n      var window_1 = getGlobalObject();\n      // This supports the variable that sentry-webpack-plugin injects\n      if (window_1.SENTRY_RELEASE && window_1.SENTRY_RELEASE.id) {\n        options.release = window_1.SENTRY_RELEASE.id;\n      }\n    }\n    initAndBind(BrowserClient, options);\n  }\n\n  function _classCallCheck$1(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  function _defineProperties$1(e, t) {\n    for (var n = 0; n < t.length; n++) {\n      var r = t[n];\n      r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n    }\n  }\n  function _createClass$1(e, t, n) {\n    return t && _defineProperties$1(e.prototype, t), n && _defineProperties$1(e, n), e;\n  }\n  function _defineProperty$2(e, t, n) {\n    return t in e ? Object.defineProperty(e, t, {\n      value: n,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : e[t] = n, e;\n  }\n  function _slicedToArray(e, t) {\n    return _arrayWithHoles(e) || _iterableToArrayLimit(e, t) || _nonIterableRest();\n  }\n  function _arrayWithHoles(e) {\n    if (Array.isArray(e)) return e;\n  }\n  function _iterableToArrayLimit(e, t) {\n    var n = [],\n      r = !0,\n      o = !1,\n      i = void 0;\n    try {\n      for (var s, a = e[Symbol.iterator](); !(r = (s = a.next()).done) && (n.push(s.value), !t || n.length !== t); r = !0);\n    } catch (e) {\n      o = !0, i = e;\n    } finally {\n      try {\n        r || null == a.return || a.return();\n      } finally {\n        if (o) throw i;\n      }\n    }\n    return n;\n  }\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n  var getConstructor$2 = function (e) {\n      return null != e ? e.constructor : null;\n    },\n    instanceOf$2 = function (e, t) {\n      return !!(e && t && e instanceof t);\n    },\n    isNullOrUndefined$2 = function (e) {\n      return null == e;\n    },\n    isObject$2 = function (e) {\n      return getConstructor$2(e) === Object;\n    },\n    isNumber$2 = function (e) {\n      return getConstructor$2(e) === Number && !Number.isNaN(e);\n    },\n    isString$2 = function (e) {\n      return getConstructor$2(e) === String;\n    },\n    isBoolean$2 = function (e) {\n      return getConstructor$2(e) === Boolean;\n    },\n    isFunction$2 = function (e) {\n      return getConstructor$2(e) === Function;\n    },\n    isArray$2 = function (e) {\n      return Array.isArray(e);\n    },\n    isNodeList$2 = function (e) {\n      return instanceOf$2(e, NodeList);\n    },\n    isElement$2 = function (e) {\n      return instanceOf$2(e, Element);\n    },\n    isEvent$2 = function (e) {\n      return instanceOf$2(e, Event);\n    },\n    isEmpty$2 = function (e) {\n      return isNullOrUndefined$2(e) || (isString$2(e) || isArray$2(e) || isNodeList$2(e)) && !e.length || isObject$2(e) && !Object.keys(e).length;\n    },\n    is$2 = {\n      nullOrUndefined: isNullOrUndefined$2,\n      object: isObject$2,\n      number: isNumber$2,\n      string: isString$2,\n      boolean: isBoolean$2,\n      function: isFunction$2,\n      array: isArray$2,\n      nodeList: isNodeList$2,\n      element: isElement$2,\n      event: isEvent$2,\n      empty: isEmpty$2\n    },\n    constants = {\n      facebook: {\n        domain: \"facebook.com\",\n        url: function (e) {\n          return \"https://graph.facebook.com/?id=\".concat(e, \"&fields=og_object{engagement}\");\n        },\n        shareCount: function (e) {\n          return e.og_object.engagement.count;\n        },\n        popup: {\n          width: 640,\n          height: 360\n        }\n      },\n      twitter: {\n        domain: \"twitter.com\",\n        url: function () {\n          return null;\n        },\n        shareCount: function () {\n          return null;\n        },\n        popup: {\n          width: 640,\n          height: 240\n        }\n      },\n      pinterest: {\n        domain: \"pinterest.com\",\n        url: function (e) {\n          return \"https://widgets.pinterest.com/v1/urls/count.json?url=\".concat(e);\n        },\n        shareCount: function (e) {\n          return e.count;\n        },\n        popup: {\n          width: 830,\n          height: 700\n        }\n      },\n      github: {\n        domain: \"github.com\",\n        url: function (e, t) {\n          return \"https://api.github.com/repos/\".concat(e).concat(is$2.string(t) ? \"?access_token=\".concat(t) : \"\");\n        },\n        shareCount: function (e) {\n          return e.data.stargazers_count;\n        }\n      },\n      youtube: {\n        domain: \"youtube.com\",\n        url: function (e, t) {\n          return \"https://www.googleapis.com/youtube/v3/channels?part=statistics&id=\".concat(e, \"&key=\").concat(t);\n        },\n        shareCount: function (e) {\n          if (!is$2.empty(e.error)) return null;\n          var t = _slicedToArray(e.items, 1)[0];\n          return is$2.empty(t) ? null : t.statistics.subscriberCount;\n        }\n      }\n    },\n    defaults$2 = {\n      debug: !1,\n      wrapper: {\n        className: \"shr\"\n      },\n      count: {\n        className: \"shr__count\",\n        displayZero: !1,\n        format: !0,\n        position: \"after\",\n        increment: !0\n      },\n      tokens: {\n        github: \"\",\n        youtube: \"\"\n      },\n      storage: {\n        enabled: !0,\n        key: \"shr\",\n        ttl: 3e5\n      }\n    };\n  function getJSONP(e) {\n    return new Promise(function (t, n) {\n      var r = \"jsonp_callback_\".concat(Math.round(1e5 * Math.random())),\n        o = document.createElement(\"script\");\n      o.addEventListener(\"error\", function (e) {\n        return n(e);\n      }), window[r] = function (e) {\n        delete window[r], document.body.removeChild(o), t(e);\n      };\n      var i = new URL(e);\n      i.searchParams.set(\"callback\", r), o.setAttribute(\"src\", i.toString()), document.body.appendChild(o);\n    });\n  }\n  var noop$1 = function () {},\n    Console$1 = function () {\n      function e() {\n        var t = !!(0 < arguments.length && void 0 !== arguments[0]) && arguments[0];\n        _classCallCheck$1(this, e), this.enabled = window.console && t, this.enabled && this.log(\"Debugging enabled\");\n      }\n      return _createClass$1(e, [{\n        key: \"log\",\n        get: function () {\n          return this.enabled ? Function.prototype.bind.call(console.log, console) : noop$1;\n        }\n      }, {\n        key: \"warn\",\n        get: function () {\n          return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop$1;\n        }\n      }, {\n        key: \"error\",\n        get: function () {\n          return this.enabled ? Function.prototype.bind.call(console.error, console) : noop$1;\n        }\n      }]), e;\n    }();\n  function matches$2(e, t) {\n    return function () {\n      return Array.from(document.querySelectorAll(t)).includes(this);\n    }.call(e, t);\n  }\n  function wrap$1(e, t) {\n    var n = e.length ? e : [e];\n    Array.from(n).reverse().forEach(function (e, n) {\n      var r = 0 < n ? t.cloneNode(!0) : t,\n        o = e.parentNode,\n        i = e.nextSibling;\n      r.appendChild(e), i ? o.insertBefore(r, i) : o.appendChild(r);\n    });\n  }\n  function setAttributes$1(e, t) {\n    !is$2.element(e) || is$2.empty(t) || Object.entries(t).filter(function (e) {\n      var t = _slicedToArray(e, 2)[1];\n      return !is$2.nullOrUndefined(t);\n    }).forEach(function (t) {\n      var n = _slicedToArray(t, 2),\n        r = n[0],\n        o = n[1];\n      return e.setAttribute(r, o);\n    });\n  }\n  function createElement$1(e, t, n) {\n    var r = document.createElement(e);\n    return is$2.object(t) && setAttributes$1(r, t), is$2.string(n) && (r.innerText = n), r;\n  }\n  function formatNumber(e) {\n    var t = /\\./.test(1.1.toLocaleString()) ? \".\" : \",\",\n      n = new RegExp(\"\\\\\".concat(t, \"\\\\d+$\"));\n    return Math.round(e).toLocaleString().replace(n, \"\");\n  }\n  function extend$1() {\n    for (var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, t = arguments.length, n = Array(1 < t ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];\n    if (!n.length) return e;\n    var o = n.shift();\n    return is$2.object(o) ? (Object.keys(o).forEach(function (t) {\n      is$2.object(o[t]) ? (!Object.keys(e).includes(t) && Object.assign(e, _defineProperty$2({}, t, {})), extend$1(e[t], o[t])) : Object.assign(e, _defineProperty$2({}, t, o[t]));\n    }), extend$1.apply(void 0, [e].concat(n))) : e;\n  }\n  var Storage$1 = function () {\n    function e(t, n) {\n      var r = !(2 < arguments.length && void 0 !== arguments[2]) || arguments[2];\n      _classCallCheck$1(this, e), this.enabled = r && e.supported, this.key = t, this.ttl = n;\n    }\n    return _createClass$1(e, [{\n      key: \"get\",\n      value: function (t) {\n        if (!e.supported || !this.enabled) return null;\n        var n = window.localStorage.getItem(this.key);\n        if (is$2.empty(n)) return null;\n        var r = window.localStorage.getItem(\"\".concat(this.key, \"_ttl\"));\n        if (is$2.empty(r) || r < Date.now()) return null;\n        var o = JSON.parse(n);\n        return is$2.string(t) && t.length ? o[t] : o;\n      }\n    }, {\n      key: \"set\",\n      value: function (t) {\n        if (e.supported && this.enabled && is$2.object(t)) {\n          var n = this.get();\n          is$2.empty(n) && (n = {}), extend$1(n, t), window.localStorage.setItem(this.key, JSON.stringify(n)), window.localStorage.setItem(\"\".concat(this.key, \"_ttl\"), Date.now() + this.ttl);\n        }\n      }\n    }], [{\n      key: \"supported\",\n      get: function () {\n        try {\n          return \"localStorage\" in window && (window.localStorage.setItem(\"___test\", \"___test\"), window.localStorage.removeItem(\"___test\"), !0);\n        } catch (e) {\n          return !1;\n        }\n      }\n    }]), e;\n  }();\n  function getDomain(e) {\n    var t = new URL(e).hostname,\n      n = t.split(\".\"),\n      r = n.length;\n    return 2 < r && (t = \"\".concat(n[r - 2], \".\").concat(n[r - 1]), 2 === n[r - 2].length && 2 === n[r - 1].length && (t = \"\".concat(n[r - 3], \".\").concat(t))), t;\n  }\n  var Shr = function () {\n    function e(t, n) {\n      var r = this;\n      _classCallCheck$1(this, e), this.elements = {\n        count: null,\n        trigger: null,\n        popup: null\n      }, is$2.element(t) ? this.elements.trigger = t : is$2.string(t) && (this.elements.trigger = document.querySelector(t)), is$2.element(this.elements.trigger) && is$2.empty(this.elements.trigger.shr) && (this.config = extend$1({}, defaults$2, n, {\n        networks: constants\n      }), this.console = new Console$1(this.config.debug), this.storage = new Storage$1(this.config.storage.key, this.config.storage.ttl, this.config.storage.enabled), this.getCount().then(function (e) {\n        return r.updateDisplay(e);\n      }).catch(function () {}), this.listeners(!0), this.elements.trigger.shr = this);\n    }\n    return _createClass$1(e, [{\n      key: \"destroy\",\n      value: function () {\n        this.listeners(!1);\n      }\n    }, {\n      key: \"listeners\",\n      value: function () {\n        var e = this,\n          t = !!(0 < arguments.length && void 0 !== arguments[0]) && arguments[0] ? \"addEventListener\" : \"removeEventListener\";\n        this.elements.trigger[t](\"click\", function (t) {\n          return e.share(t);\n        }, !1);\n      }\n    }, {\n      key: \"share\",\n      value: function (e) {\n        var t = this;\n        this.openPopup(e);\n        var n = this.config.count.increment;\n        this.getCount().then(function (e) {\n          return t.updateDisplay(e, n);\n        }).catch(function () {});\n      }\n    }, {\n      key: \"openPopup\",\n      value: function (e) {\n        if (!is$2.empty(this.network) && this.networkConfig.popup) {\n          is$2.event(e) && e.preventDefault();\n          var t = this.networkConfig.popup,\n            n = t.width,\n            r = t.height,\n            o = \"shr-popup--\".concat(this.network);\n          if (this.popup && !this.popup.closed) this.popup.focus(), this.console.log(\"Popup re-focused.\");else {\n            var i = void 0 === window.screenLeft ? window.screen.left : window.screenLeft,\n              s = void 0 === window.screenTop ? window.screen.top : window.screenTop,\n              a = window.screen.width / 2 - n / 2 + i,\n              c = window.screen.height / 2 - r / 2 + s;\n            this.popup = window.open(this.href, o, \"top=\".concat(c, \",left=\").concat(a, \",width=\").concat(n, \",height=\").concat(r)), !this.popup || this.popup.closed || !is$2.boolean(this.popup.closed) ? this.console.error(\"Popup blocked.\") : (this.popup.focus(), this.console.log(\"Popup opened.\"));\n          }\n        }\n      }\n    }, {\n      key: \"getCount\",\n      value: function () {\n        var e = this,\n          t = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0];\n        return new Promise(function (n, r) {\n          var o = e.apiUrl;\n          if (is$2.empty(o)) r(new Error(\"No URL available for \".concat(e.network, \".\")));else {\n            if (t) {\n              var i = e.storage.get(e.target);\n              if (!is$2.empty(i) && Object.keys(i).includes(e.network)) {\n                var s = i[e.network];\n                return n(is$2.number(s) ? s : 0), void e.console.log(\"getCount for '\".concat(e.target, \"' for '\").concat(e.network, \"' resolved from cache.\"));\n              }\n            }\n            getJSONP(o).then(function (t) {\n              var r = 0,\n                o = e.elements.trigger.getAttribute(\"data-shr-display\");\n              r = is$2.empty(o) ? e.networkConfig.shareCount(t) : t[o], is$2.empty(r) ? r = 0 : (r = parseInt(r, 10), !is$2.number(r) && (r = 0)), e.storage.set(_defineProperty$2({}, e.target, _defineProperty$2({}, e.network, r))), n(r);\n            }).catch(r);\n          }\n        });\n      }\n    }, {\n      key: \"updateDisplay\",\n      value: function (e) {\n        var t = !!(1 < arguments.length && void 0 !== arguments[1]) && arguments[1],\n          n = this.config,\n          r = n.count,\n          o = n.wrapper,\n          i = t ? e + 1 : e,\n          s = r.position.toLowerCase();\n        if (0 < i || r.displayZero) {\n          var a = function (e) {\n              return Math.round(i / e * 10) / 10;\n            },\n            c = formatNumber(i);\n          r.format && (1e6 < i ? c = \"\".concat(a(1e6), \"M\") : 1e3 < i && (c = \"\".concat(a(1e3), \"K\"))), is$2.element(this.elements.count) ? this.elements.count.textContent = c : (wrap$1(this.elements.trigger, createElement$1(\"span\", {\n            class: o.className\n          })), this.elements.count = createElement$1(\"span\", {\n            class: \"\".concat(r.className, \" \").concat(r.className, \"--\").concat(s)\n          }, c), this.elements.trigger.insertAdjacentElement(\"after\" === s ? \"afterend\" : \"beforebegin\", this.elements.count));\n        }\n      }\n    }, {\n      key: \"href\",\n      get: function () {\n        return is$2.element(this.elements.trigger) ? this.elements.trigger.href : null;\n      }\n    }, {\n      key: \"network\",\n      get: function () {\n        var e = this;\n        if (!is$2.element(this.elements.trigger)) return null;\n        var t = this.config.networks;\n        return Object.keys(t).find(function (n) {\n          return getDomain(e.href) === t[n].domain;\n        });\n      }\n    }, {\n      key: \"networkConfig\",\n      get: function () {\n        return is$2.empty(this.network) ? null : this.config.networks[this.network];\n      }\n    }, {\n      key: \"target\",\n      get: function () {\n        if (is$2.empty(this.network)) return null;\n        var e = new URL(this.href);\n        switch (this.network) {\n          case \"facebook\":\n            return e.searchParams.get(\"u\");\n          case \"github\":\n            return e.pathname.substring(1);\n          case \"youtube\":\n            return e.pathname.split(\"/\").pop();\n          default:\n            return e.searchParams.get(\"url\");\n        }\n      }\n    }, {\n      key: \"apiUrl\",\n      get: function () {\n        if (is$2.empty(this.network)) return null;\n        var e = this.config.tokens;\n        switch (this.network) {\n          case \"github\":\n            return this.networkConfig.url(this.target, e.github);\n          case \"youtube\":\n            return this.networkConfig.url(this.target, e.youtube);\n          default:\n            return this.networkConfig.url(encodeURIComponent(this.target));\n        }\n      }\n    }], [{\n      key: \"setup\",\n      value: function (t) {\n        var n = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {},\n          r = null;\n        if (is$2.string(t) ? r = Array.from(document.querySelectorAll(t)) : is$2.element(t) ? r = [t] : is$2.nodeList(t) ? r = Array.from(t) : is$2.array(t) && (r = t.filter(is$2.element)), is$2.empty(r)) return null;\n        var o = Object.assign({}, defaults$2, n);\n        is$2.string(t) && o.watch && new MutationObserver(function (n) {\n          Array.from(n).forEach(function (n) {\n            Array.from(n.addedNodes).forEach(function (n) {\n              is$2.element(n) && matches$2(n, t) && new e(n, o);\n            });\n          });\n        }).observe(document.body, {\n          childList: !0,\n          subtree: !0\n        });\n        return r.map(function (t) {\n          return new e(t, n);\n        });\n      }\n    }]), e;\n  }();\n\n  function _defineProperty$1(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n\n  function _classCallCheck(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  function _defineProperties(e, t) {\n    for (var n = 0; n < t.length; n++) {\n      var r = t[n];\n      r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n    }\n  }\n  function _createClass(e, t, n) {\n    return t && _defineProperties(e.prototype, t), n && _defineProperties(e, n), e;\n  }\n  function _defineProperty(e, t, n) {\n    return t in e ? Object.defineProperty(e, t, {\n      value: n,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : e[t] = n, e;\n  }\n  function ownKeys(e, t) {\n    var n = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n      var r = Object.getOwnPropertySymbols(e);\n      t && (r = r.filter(function (t) {\n        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n      })), n.push.apply(n, r);\n    }\n    return n;\n  }\n  function _objectSpread2(e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var n = null != arguments[t] ? arguments[t] : {};\n      t % 2 ? ownKeys(Object(n), !0).forEach(function (t) {\n        _defineProperty(e, t, n[t]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ownKeys(Object(n)).forEach(function (t) {\n        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n      });\n    }\n    return e;\n  }\n  var defaults$1 = {\n    addCSS: !0,\n    thumbWidth: 15,\n    watch: !0\n  };\n  function matches$1(e, t) {\n    return function () {\n      return Array.from(document.querySelectorAll(t)).includes(this);\n    }.call(e, t);\n  }\n  function trigger(e, t) {\n    if (e && t) {\n      var n = new Event(t, {\n        bubbles: !0\n      });\n      e.dispatchEvent(n);\n    }\n  }\n  var getConstructor$1 = function (e) {\n      return null != e ? e.constructor : null;\n    },\n    instanceOf$1 = function (e, t) {\n      return !!(e && t && e instanceof t);\n    },\n    isNullOrUndefined$1 = function (e) {\n      return null == e;\n    },\n    isObject$1 = function (e) {\n      return getConstructor$1(e) === Object;\n    },\n    isNumber$1 = function (e) {\n      return getConstructor$1(e) === Number && !Number.isNaN(e);\n    },\n    isString$1 = function (e) {\n      return getConstructor$1(e) === String;\n    },\n    isBoolean$1 = function (e) {\n      return getConstructor$1(e) === Boolean;\n    },\n    isFunction$1 = function (e) {\n      return getConstructor$1(e) === Function;\n    },\n    isArray$1 = function (e) {\n      return Array.isArray(e);\n    },\n    isNodeList$1 = function (e) {\n      return instanceOf$1(e, NodeList);\n    },\n    isElement$1 = function (e) {\n      return instanceOf$1(e, Element);\n    },\n    isEvent$1 = function (e) {\n      return instanceOf$1(e, Event);\n    },\n    isEmpty$1 = function (e) {\n      return isNullOrUndefined$1(e) || (isString$1(e) || isArray$1(e) || isNodeList$1(e)) && !e.length || isObject$1(e) && !Object.keys(e).length;\n    },\n    is$1 = {\n      nullOrUndefined: isNullOrUndefined$1,\n      object: isObject$1,\n      number: isNumber$1,\n      string: isString$1,\n      boolean: isBoolean$1,\n      function: isFunction$1,\n      array: isArray$1,\n      nodeList: isNodeList$1,\n      element: isElement$1,\n      event: isEvent$1,\n      empty: isEmpty$1\n    };\n  function getDecimalPlaces(e) {\n    var t = \"\".concat(e).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n    return t ? Math.max(0, (t[1] ? t[1].length : 0) - (t[2] ? +t[2] : 0)) : 0;\n  }\n  function round(e, t) {\n    if (1 > t) {\n      var n = getDecimalPlaces(t);\n      return parseFloat(e.toFixed(n));\n    }\n    return Math.round(e / t) * t;\n  }\n  var RangeTouch = function () {\n    function e(t, n) {\n      _classCallCheck(this, e), is$1.element(t) ? this.element = t : is$1.string(t) && (this.element = document.querySelector(t)), is$1.element(this.element) && is$1.empty(this.element.rangeTouch) && (this.config = _objectSpread2({}, defaults$1, {}, n), this.init());\n    }\n    return _createClass(e, [{\n      key: \"init\",\n      value: function () {\n        e.enabled && (this.config.addCSS && (this.element.style.userSelect = \"none\", this.element.style.webKitUserSelect = \"none\", this.element.style.touchAction = \"manipulation\"), this.listeners(!0), this.element.rangeTouch = this);\n      }\n    }, {\n      key: \"destroy\",\n      value: function () {\n        e.enabled && (this.config.addCSS && (this.element.style.userSelect = \"\", this.element.style.webKitUserSelect = \"\", this.element.style.touchAction = \"\"), this.listeners(!1), this.element.rangeTouch = null);\n      }\n    }, {\n      key: \"listeners\",\n      value: function (e) {\n        var t = this,\n          n = e ? \"addEventListener\" : \"removeEventListener\";\n        [\"touchstart\", \"touchmove\", \"touchend\"].forEach(function (e) {\n          t.element[n](e, function (e) {\n            return t.set(e);\n          }, !1);\n        });\n      }\n    }, {\n      key: \"get\",\n      value: function (t) {\n        if (!e.enabled || !is$1.event(t)) return null;\n        var n,\n          r = t.target,\n          i = t.changedTouches[0],\n          o = parseFloat(r.getAttribute(\"min\")) || 0,\n          s = parseFloat(r.getAttribute(\"max\")) || 100,\n          u = parseFloat(r.getAttribute(\"step\")) || 1,\n          c = r.getBoundingClientRect(),\n          a = 100 / c.width * (this.config.thumbWidth / 2) / 100;\n        return 0 > (n = 100 / c.width * (i.clientX - c.left)) ? n = 0 : 100 < n && (n = 100), 50 > n ? n -= (100 - 2 * n) * a : 50 < n && (n += 2 * (n - 50) * a), o + round(n / 100 * (s - o), u);\n      }\n    }, {\n      key: \"set\",\n      value: function (t) {\n        e.enabled && is$1.event(t) && !t.target.disabled && (t.preventDefault(), t.target.value = this.get(t), trigger(t.target, \"touchend\" === t.type ? \"change\" : \"input\"));\n      }\n    }], [{\n      key: \"setup\",\n      value: function (t) {\n        var n = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {},\n          r = null;\n        if (is$1.empty(t) || is$1.string(t) ? r = Array.from(document.querySelectorAll(is$1.string(t) ? t : 'input[type=\"range\"]')) : is$1.element(t) ? r = [t] : is$1.nodeList(t) ? r = Array.from(t) : is$1.array(t) && (r = t.filter(is$1.element)), is$1.empty(r)) return null;\n        var i = _objectSpread2({}, defaults$1, {}, n);\n        if (is$1.string(t) && i.watch) {\n          var o = new MutationObserver(function (n) {\n            Array.from(n).forEach(function (n) {\n              Array.from(n.addedNodes).forEach(function (n) {\n                is$1.element(n) && matches$1(n, t) && new e(n, i);\n              });\n            });\n          });\n          o.observe(document.body, {\n            childList: !0,\n            subtree: !0\n          });\n        }\n        return r.map(function (t) {\n          return new e(t, n);\n        });\n      }\n    }, {\n      key: \"enabled\",\n      get: function () {\n        return \"ontouchstart\" in document.documentElement;\n      }\n    }]), e;\n  }();\n\n  // ==========================================================================\n  // Type checking utils\n  // ==========================================================================\n\n  const getConstructor = input => input !== null && typeof input !== 'undefined' ? input.constructor : null;\n  const instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\n  const isNullOrUndefined = input => input === null || typeof input === 'undefined';\n  const isObject = input => getConstructor(input) === Object;\n  const isNumber = input => getConstructor(input) === Number && !Number.isNaN(input);\n  const isString = input => getConstructor(input) === String;\n  const isBoolean = input => getConstructor(input) === Boolean;\n  const isFunction = input => typeof input === 'function';\n  const isArray = input => Array.isArray(input);\n  const isWeakMap = input => instanceOf(input, WeakMap);\n  const isNodeList = input => instanceOf(input, NodeList);\n  const isTextNode = input => getConstructor(input) === Text;\n  const isEvent = input => instanceOf(input, Event);\n  const isKeyboardEvent = input => instanceOf(input, KeyboardEvent);\n  const isCue = input => instanceOf(input, window.TextTrackCue) || instanceOf(input, window.VTTCue);\n  const isTrack = input => instanceOf(input, TextTrack) || !isNullOrUndefined(input) && isString(input.kind);\n  const isPromise = input => instanceOf(input, Promise) && isFunction(input.then);\n  const isElement = input => input !== null && typeof input === 'object' && input.nodeType === 1 && typeof input.style === 'object' && typeof input.ownerDocument === 'object';\n  const isEmpty = input => isNullOrUndefined(input) || (isString(input) || isArray(input) || isNodeList(input)) && !input.length || isObject(input) && !Object.keys(input).length;\n  const isUrl = input => {\n    // Accept a URL object\n    if (instanceOf(input, window.URL)) {\n      return true;\n    }\n\n    // Must be string from here\n    if (!isString(input)) {\n      return false;\n    }\n\n    // Add the protocol if required\n    let string = input;\n    if (!input.startsWith('http://') || !input.startsWith('https://')) {\n      string = `http://${input}`;\n    }\n    try {\n      return !isEmpty(new URL(string).hostname);\n    } catch (_) {\n      return false;\n    }\n  };\n  var is = {\n    nullOrUndefined: isNullOrUndefined,\n    object: isObject,\n    number: isNumber,\n    string: isString,\n    boolean: isBoolean,\n    function: isFunction,\n    array: isArray,\n    weakMap: isWeakMap,\n    nodeList: isNodeList,\n    element: isElement,\n    textNode: isTextNode,\n    event: isEvent,\n    keyboardEvent: isKeyboardEvent,\n    cue: isCue,\n    track: isTrack,\n    promise: isPromise,\n    url: isUrl,\n    empty: isEmpty\n  };\n\n  // ==========================================================================\n  const transitionEndEvent = (() => {\n    const element = document.createElement('span');\n    const events = {\n      WebkitTransition: 'webkitTransitionEnd',\n      MozTransition: 'transitionend',\n      OTransition: 'oTransitionEnd otransitionend',\n      transition: 'transitionend'\n    };\n    const type = Object.keys(events).find(event => element.style[event] !== undefined);\n    return is.string(type) ? events[type] : false;\n  })();\n\n  // Force repaint of element\n  function repaint(element, delay) {\n    setTimeout(() => {\n      try {\n        // eslint-disable-next-line no-param-reassign\n        element.hidden = true;\n\n        // eslint-disable-next-line no-unused-expressions\n        element.offsetHeight;\n\n        // eslint-disable-next-line no-param-reassign\n        element.hidden = false;\n      } catch (_) {\n        // Do nothing\n      }\n    }, delay);\n  }\n\n  // ==========================================================================\n  // Browser sniffing\n  // Unfortunately, due to mixed support, UA sniffing is required\n  // ==========================================================================\n\n  const browser = {\n    isIE: Boolean(window.document.documentMode),\n    isEdge: /Edge/g.test(navigator.userAgent),\n    isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/g.test(navigator.userAgent),\n    isIPhone: /iPhone|iPod/gi.test(navigator.userAgent) && navigator.maxTouchPoints > 1,\n    isIos: /iPad|iPhone|iPod/gi.test(navigator.userAgent) && navigator.maxTouchPoints > 1\n  };\n\n  // ==========================================================================\n\n  // Clone nested objects\n  function cloneDeep(object) {\n    return JSON.parse(JSON.stringify(object));\n  }\n\n  // Get a nested value in an object\n  function getDeep(object, path) {\n    return path.split('.').reduce((obj, key) => obj && obj[key], object);\n  }\n\n  // Deep extend destination object with N more objects\n  function extend(target = {}, ...sources) {\n    if (!sources.length) {\n      return target;\n    }\n    const source = sources.shift();\n    if (!is.object(source)) {\n      return target;\n    }\n    Object.keys(source).forEach(key => {\n      if (is.object(source[key])) {\n        if (!Object.keys(target).includes(key)) {\n          Object.assign(target, {\n            [key]: {}\n          });\n        }\n        extend(target[key], source[key]);\n      } else {\n        Object.assign(target, {\n          [key]: source[key]\n        });\n      }\n    });\n    return extend(target, ...sources);\n  }\n\n  // ==========================================================================\n\n  // Wrap an element\n  function wrap(elements, wrapper) {\n    // Convert `elements` to an array, if necessary.\n    const targets = elements.length ? elements : [elements];\n\n    // Loops backwards to prevent having to clone the wrapper on the\n    // first element (see `child` below).\n    Array.from(targets).reverse().forEach((element, index) => {\n      const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n      // Cache the current parent and sibling.\n      const parent = element.parentNode;\n      const sibling = element.nextSibling;\n\n      // Wrap the element (is automatically removed from its current\n      // parent).\n      child.appendChild(element);\n\n      // If the element had a sibling, insert the wrapper before\n      // the sibling to maintain the HTML structure; otherwise, just\n      // append it to the parent.\n      if (sibling) {\n        parent.insertBefore(child, sibling);\n      } else {\n        parent.appendChild(child);\n      }\n    });\n  }\n\n  // Set attributes\n  function setAttributes(element, attributes) {\n    if (!is.element(element) || is.empty(attributes)) {\n      return;\n    }\n\n    // Assume null and undefined attributes should be left out,\n    // Setting them would otherwise convert them to \"null\" and \"undefined\"\n    Object.entries(attributes).filter(([, value]) => !is.nullOrUndefined(value)).forEach(([key, value]) => element.setAttribute(key, value));\n  }\n\n  // Create a DocumentFragment\n  function createElement(type, attributes, text) {\n    // Create a new <element>\n    const element = document.createElement(type);\n\n    // Set all passed attributes\n    if (is.object(attributes)) {\n      setAttributes(element, attributes);\n    }\n\n    // Add text node\n    if (is.string(text)) {\n      element.innerText = text;\n    }\n\n    // Return built element\n    return element;\n  }\n\n  // Inaert an element after another\n  function insertAfter(element, target) {\n    if (!is.element(element) || !is.element(target)) {\n      return;\n    }\n    target.parentNode.insertBefore(element, target.nextSibling);\n  }\n\n  // Insert a DocumentFragment\n  function insertElement(type, parent, attributes, text) {\n    if (!is.element(parent)) {\n      return;\n    }\n    parent.appendChild(createElement(type, attributes, text));\n  }\n\n  // Remove element(s)\n  function removeElement(element) {\n    if (is.nodeList(element) || is.array(element)) {\n      Array.from(element).forEach(removeElement);\n      return;\n    }\n    if (!is.element(element) || !is.element(element.parentNode)) {\n      return;\n    }\n    element.parentNode.removeChild(element);\n  }\n\n  // Remove all child elements\n  function emptyElement(element) {\n    if (!is.element(element)) {\n      return;\n    }\n    let {\n      length\n    } = element.childNodes;\n    while (length > 0) {\n      element.removeChild(element.lastChild);\n      length -= 1;\n    }\n  }\n\n  // Replace element\n  function replaceElement(newChild, oldChild) {\n    if (!is.element(oldChild) || !is.element(oldChild.parentNode) || !is.element(newChild)) {\n      return null;\n    }\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n    return newChild;\n  }\n\n  // Get an attribute object from a string selector\n  function getAttributesFromSelector(sel, existingAttributes) {\n    // For example:\n    // '.test' to { class: 'test' }\n    // '#test' to { id: 'test' }\n    // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n    if (!is.string(sel) || is.empty(sel)) {\n      return {};\n    }\n    const attributes = {};\n    const existing = extend({}, existingAttributes);\n    sel.split(',').forEach(s => {\n      // Remove whitespace\n      const selector = s.trim();\n      const className = selector.replace('.', '');\n      const stripped = selector.replace(/[[\\]]/g, '');\n      // Get the parts and value\n      const parts = stripped.split('=');\n      const [key] = parts;\n      const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n      // Get the first character\n      const start = selector.charAt(0);\n      switch (start) {\n        case '.':\n          // Add to existing classname\n          if (is.string(existing.class)) {\n            attributes.class = `${existing.class} ${className}`;\n          } else {\n            attributes.class = className;\n          }\n          break;\n        case '#':\n          // ID selector\n          attributes.id = selector.replace('#', '');\n          break;\n        case '[':\n          // Attribute selector\n          attributes[key] = value;\n          break;\n      }\n    });\n    return extend(existing, attributes);\n  }\n\n  // Toggle hidden\n  function toggleHidden(element, hidden) {\n    if (!is.element(element)) {\n      return;\n    }\n    let hide = hidden;\n    if (!is.boolean(hide)) {\n      hide = !element.hidden;\n    }\n\n    // eslint-disable-next-line no-param-reassign\n    element.hidden = hide;\n  }\n\n  // Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\n  function toggleClass$1(element, className, force) {\n    if (is.nodeList(element)) {\n      return Array.from(element).map(e => toggleClass$1(e, className, force));\n    }\n    if (is.element(element)) {\n      let method = 'toggle';\n      if (typeof force !== 'undefined') {\n        method = force ? 'add' : 'remove';\n      }\n      element.classList[method](className);\n      return element.classList.contains(className);\n    }\n    return false;\n  }\n\n  // Has class name\n  function hasClass(element, className) {\n    return is.element(element) && element.classList.contains(className);\n  }\n\n  // Element matches selector\n  function matches(element, selector) {\n    const {\n      prototype\n    } = Element;\n    function match() {\n      return Array.from(document.querySelectorAll(selector)).includes(this);\n    }\n    const method = prototype.matches || prototype.webkitMatchesSelector || prototype.mozMatchesSelector || prototype.msMatchesSelector || match;\n    return method.call(element, selector);\n  }\n\n  // Closest ancestor element matching selector (also tests element itself)\n  function closest$1(element, selector) {\n    const {\n      prototype\n    } = Element;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\n    function closestElement() {\n      let el = this;\n      do {\n        if (matches.matches(el, selector)) return el;\n        el = el.parentElement || el.parentNode;\n      } while (el !== null && el.nodeType === 1);\n      return null;\n    }\n    const method = prototype.closest || closestElement;\n    return method.call(element, selector);\n  }\n\n  // Find all elements\n  function getElements(selector) {\n    return this.elements.container.querySelectorAll(selector);\n  }\n\n  // Find a single element\n  function getElement(selector) {\n    return this.elements.container.querySelector(selector);\n  }\n\n  // Set focus and tab focus class\n  function setFocus(element = null, tabFocus = false) {\n    if (!is.element(element)) {\n      return;\n    }\n\n    // Set regular focus\n    element.focus({\n      preventScroll: true\n    });\n\n    // If we want to mimic keyboard focus via tab\n    if (tabFocus) {\n      toggleClass$1(element, this.config.classNames.tabFocus);\n    }\n  }\n\n  // ==========================================================================\n\n  // Default codecs for checking mimetype support\n  const defaultCodecs = {\n    'audio/ogg': 'vorbis',\n    'audio/wav': '1',\n    'video/webm': 'vp8, vorbis',\n    'video/mp4': 'avc1.42E01E, mp4a.40.2',\n    'video/ogg': 'theora'\n  };\n\n  // Check for feature support\n  const support = {\n    // Basic support\n    audio: 'canPlayType' in document.createElement('audio'),\n    video: 'canPlayType' in document.createElement('video'),\n    // Check for support\n    // Basic functionality vs full UI\n    check(type, provider, playsinline) {\n      const canPlayInline = browser.isIPhone && playsinline && support.playsinline;\n      const api = support[type] || provider !== 'html5';\n      const ui = api && support.rangeInput && (type !== 'video' || !browser.isIPhone || canPlayInline);\n      return {\n        api,\n        ui\n      };\n    },\n    // Picture-in-picture support\n    // Safari & Chrome only currently\n    pip: (() => {\n      // While iPhone's support picture-in-picture for some apps, seemingly Safari isn't one of them\n      // It will throw the following error when trying to enter picture-in-picture\n      // `NotSupportedError: The Picture-in-Picture mode is not supported.`\n      if (browser.isIPhone) {\n        return false;\n      }\n\n      // Safari\n      // https://developer.apple.com/documentation/webkitjs/adding_picture_in_picture_to_your_safari_media_controls\n      if (is.function(createElement('video').webkitSetPresentationMode)) {\n        return true;\n      }\n\n      // Chrome\n      // https://developers.google.com/web/updates/2018/10/watch-video-using-picture-in-picture\n      if (document.pictureInPictureEnabled && !createElement('video').disablePictureInPicture) {\n        return true;\n      }\n      return false;\n    })(),\n    // Airplay support\n    // Safari only currently\n    airplay: is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n    // Inline playback support\n    // https://webkit.org/blog/6784/new-video-policies-for-ios/\n    playsinline: 'playsInline' in document.createElement('video'),\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplayer.com/test/h5mt.html\n    mime(input) {\n      if (is.empty(input)) {\n        return false;\n      }\n      const [mediaType] = input.split('/');\n      let type = input;\n\n      // Verify we're using HTML5 and there's no media type mismatch\n      if (!this.isHTML5 || mediaType !== this.type) {\n        return false;\n      }\n\n      // Add codec if required\n      if (Object.keys(defaultCodecs).includes(type)) {\n        type += `; codecs=\"${defaultCodecs[input]}\"`;\n      }\n      try {\n        return Boolean(type && this.media.canPlayType(type).replace(/no/, ''));\n      } catch (_) {\n        return false;\n      }\n    },\n    // Check for textTracks support\n    textTracks: 'textTracks' in document.createElement('video'),\n    // <input type=\"range\"> Sliders\n    rangeInput: (() => {\n      const range = document.createElement('input');\n      range.type = 'range';\n      return range.type === 'range';\n    })(),\n    // Touch\n    // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n    touch: 'ontouchstart' in document.documentElement,\n    // Detect transitions support\n    transitions: transitionEndEvent !== false,\n    // Reduced motion iOS & MacOS setting\n    // https://webkit.org/blog/7551/responsive-design-for-motion/\n    reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches\n  };\n\n  // ==========================================================================\n\n  // Check for passive event listener support\n  // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n  // https://www.youtube.com/watch?v=NPM6172J22g\n  const supportsPassiveListeners = (() => {\n    // Test via a getter in the options object to see if the passive property is accessed\n    let supported = false;\n    try {\n      const options = Object.defineProperty({}, 'passive', {\n        get() {\n          supported = true;\n          return null;\n        }\n      });\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    } catch (_) {\n      // Do nothing\n    }\n    return supported;\n  })();\n\n  // Toggle event listener\n  function toggleListener(element, event, callback, toggle = false, passive = true, capture = false) {\n    // Bail if no element, event, or callback\n    if (!element || !('addEventListener' in element) || is.empty(event) || !is.function(callback)) {\n      return;\n    }\n\n    // Allow multiple events\n    const events = event.split(' ');\n    // Build options\n    // Default to just the capture boolean for browsers with no passive listener support\n    let options = capture;\n\n    // If passive events listeners are supported\n    if (supportsPassiveListeners) {\n      options = {\n        // Whether the listener can be passive (i.e. default never prevented)\n        passive,\n        // Whether the listener is a capturing listener or not\n        capture\n      };\n    }\n\n    // If a single node is passed, bind the event listener\n    events.forEach(type => {\n      if (this && this.eventListeners && toggle) {\n        // Cache event listener\n        this.eventListeners.push({\n          element,\n          type,\n          callback,\n          options\n        });\n      }\n      element[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\n    });\n  }\n\n  // Bind event handler\n  function on(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, true, passive, capture);\n  }\n\n  // Unbind event handler\n  function off(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, false, passive, capture);\n  }\n\n  // Bind once-only event handler\n  function once(element, events = '', callback, passive = true, capture = false) {\n    const onceCallback = (...args) => {\n      off(element, events, onceCallback, passive, capture);\n      callback.apply(this, args);\n    };\n    toggleListener.call(this, element, events, onceCallback, true, passive, capture);\n  }\n\n  // Trigger event\n  function triggerEvent(element, type = '', bubbles = false, detail = {}) {\n    // Bail if no element\n    if (!is.element(element) || is.empty(type)) {\n      return;\n    }\n\n    // Create and dispatch the event\n    const event = new CustomEvent(type, {\n      bubbles,\n      detail: {\n        ...detail,\n        plyr: this\n      }\n    });\n\n    // Dispatch the event\n    element.dispatchEvent(event);\n  }\n\n  // Unbind all cached event listeners\n  function unbindListeners() {\n    if (this && this.eventListeners) {\n      this.eventListeners.forEach(item => {\n        const {\n          element,\n          type,\n          callback,\n          options\n        } = item;\n        element.removeEventListener(type, callback, options);\n      });\n      this.eventListeners = [];\n    }\n  }\n\n  // Run method when / if player is ready\n  function ready() {\n    return new Promise(resolve => this.ready ? setTimeout(resolve, 0) : on.call(this, this.elements.container, 'ready', resolve)).then(() => {});\n  }\n\n  /**\n   * Silence a Promise-like object.\n   * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n   * play promise\" rejection error messages.\n   * @param  {Object} value An object that may or may not be `Promise`-like.\n   */\n  function silencePromise(value) {\n    if (is.promise(value)) {\n      value.then(null, () => {});\n    }\n  }\n\n  // ==========================================================================\n\n  // Remove duplicates in an array\n  function dedupe(array) {\n    if (!is.array(array)) {\n      return array;\n    }\n    return array.filter((item, index) => array.indexOf(item) === index);\n  }\n\n  // Get the closest value in an array\n  function closest(array, value) {\n    if (!is.array(array) || !array.length) {\n      return null;\n    }\n    return array.reduce((prev, curr) => Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev);\n  }\n\n  // ==========================================================================\n\n  // Check support for a CSS declaration\n  function supportsCSS(declaration) {\n    if (!window || !window.CSS) {\n      return false;\n    }\n    return window.CSS.supports(declaration);\n  }\n\n  // Standard/common aspect ratios\n  const standardRatios = [[1, 1], [4, 3], [3, 4], [5, 4], [4, 5], [3, 2], [2, 3], [16, 10], [10, 16], [16, 9], [9, 16], [21, 9], [9, 21], [32, 9], [9, 32]].reduce((out, [x, y]) => ({\n    ...out,\n    [x / y]: [x, y]\n  }), {});\n\n  // Validate an aspect ratio\n  function validateAspectRatio(input) {\n    if (!is.array(input) && (!is.string(input) || !input.includes(':'))) {\n      return false;\n    }\n    const ratio = is.array(input) ? input : input.split(':');\n    return ratio.map(Number).every(is.number);\n  }\n\n  // Reduce an aspect ratio to it's lowest form\n  function reduceAspectRatio(ratio) {\n    if (!is.array(ratio) || !ratio.every(is.number)) {\n      return null;\n    }\n    const [width, height] = ratio;\n    const getDivider = (w, h) => h === 0 ? w : getDivider(h, w % h);\n    const divider = getDivider(width, height);\n    return [width / divider, height / divider];\n  }\n\n  // Calculate an aspect ratio\n  function getAspectRatio(input) {\n    const parse = ratio => validateAspectRatio(ratio) ? ratio.split(':').map(Number) : null;\n    // Try provided ratio\n    let ratio = parse(input);\n\n    // Get from config\n    if (ratio === null) {\n      ratio = parse(this.config.ratio);\n    }\n\n    // Get from embed\n    if (ratio === null && !is.empty(this.embed) && is.array(this.embed.ratio)) {\n      ({\n        ratio\n      } = this.embed);\n    }\n\n    // Get from HTML5 video\n    if (ratio === null && this.isHTML5) {\n      const {\n        videoWidth,\n        videoHeight\n      } = this.media;\n      ratio = [videoWidth, videoHeight];\n    }\n    return reduceAspectRatio(ratio);\n  }\n\n  // Set aspect ratio for responsive container\n  function setAspectRatio(input) {\n    if (!this.isVideo) {\n      return {};\n    }\n    const {\n      wrapper\n    } = this.elements;\n    const ratio = getAspectRatio.call(this, input);\n    if (!is.array(ratio)) {\n      return {};\n    }\n    const [x, y] = reduceAspectRatio(ratio);\n    const useNative = supportsCSS(`aspect-ratio: ${x}/${y}`);\n    const padding = 100 / x * y;\n    if (useNative) {\n      wrapper.style.aspectRatio = `${x}/${y}`;\n    } else {\n      wrapper.style.paddingBottom = `${padding}%`;\n    }\n\n    // For Vimeo we have an extra <div> to hide the standard controls and UI\n    if (this.isVimeo && !this.config.vimeo.premium && this.supported.ui) {\n      const height = 100 / this.media.offsetWidth * parseInt(window.getComputedStyle(this.media).paddingBottom, 10);\n      const offset = (height - padding) / (height / 50);\n      if (this.fullscreen.active) {\n        wrapper.style.paddingBottom = null;\n      } else {\n        this.media.style.transform = `translateY(-${offset}%)`;\n      }\n    } else if (this.isHTML5) {\n      wrapper.classList.add(this.config.classNames.videoFixedRatio);\n    }\n    return {\n      padding,\n      ratio\n    };\n  }\n\n  // Round an aspect ratio to closest standard ratio\n  function roundAspectRatio(x, y, tolerance = 0.05) {\n    const ratio = x / y;\n    const closestRatio = closest(Object.keys(standardRatios), ratio);\n\n    // Check match is within tolerance\n    if (Math.abs(closestRatio - ratio) <= tolerance) {\n      return standardRatios[closestRatio];\n    }\n\n    // No match\n    return [x, y];\n  }\n\n  // Get the size of the viewport\n  // https://stackoverflow.com/questions/1248081/how-to-get-the-browser-viewport-dimensions\n  function getViewportSize() {\n    const width = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n    const height = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n    return [width, height];\n  }\n\n  // ==========================================================================\n  const html5 = {\n    getSources() {\n      if (!this.isHTML5) {\n        return [];\n      }\n      const sources = Array.from(this.media.querySelectorAll('source'));\n\n      // Filter out unsupported sources (if type is specified)\n      return sources.filter(source => {\n        const type = source.getAttribute('type');\n        if (is.empty(type)) {\n          return true;\n        }\n        return support.mime.call(this, type);\n      });\n    },\n    // Get quality levels\n    getQualityOptions() {\n      // Whether we're forcing all options (e.g. for streaming)\n      if (this.config.quality.forced) {\n        return this.config.quality.options;\n      }\n\n      // Get sizes from <source> elements\n      return html5.getSources.call(this).map(source => Number(source.getAttribute('size'))).filter(Boolean);\n    },\n    setup() {\n      if (!this.isHTML5) {\n        return;\n      }\n      const player = this;\n\n      // Set speed options from config\n      player.options.speed = player.config.speed.options;\n\n      // Set aspect ratio if fixed\n      if (!is.empty(this.config.ratio)) {\n        setAspectRatio.call(player);\n      }\n\n      // Quality\n      Object.defineProperty(player.media, 'quality', {\n        get() {\n          // Get sources\n          const sources = html5.getSources.call(player);\n          const source = sources.find(s => s.getAttribute('src') === player.source);\n\n          // Return size, if match is found\n          return source && Number(source.getAttribute('size'));\n        },\n        set(input) {\n          if (player.quality === input) {\n            return;\n          }\n\n          // If we're using an external handler...\n          if (player.config.quality.forced && is.function(player.config.quality.onChange)) {\n            player.config.quality.onChange(input);\n          } else {\n            // Get sources\n            const sources = html5.getSources.call(player);\n            // Get first match for requested size\n            const source = sources.find(s => Number(s.getAttribute('size')) === input);\n\n            // No matching source found\n            if (!source) {\n              return;\n            }\n\n            // Get current state\n            const {\n              currentTime,\n              paused,\n              preload,\n              readyState,\n              playbackRate\n            } = player.media;\n\n            // Set new source\n            player.media.src = source.getAttribute('src');\n\n            // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\n            if (preload !== 'none' || readyState) {\n              // Restore time\n              player.once('loadedmetadata', () => {\n                player.speed = playbackRate;\n                player.currentTime = currentTime;\n\n                // Resume playing\n                if (!paused) {\n                  silencePromise(player.play());\n                }\n              });\n\n              // Load new source\n              player.media.load();\n            }\n          }\n\n          // Trigger change event\n          triggerEvent.call(player, player.media, 'qualitychange', false, {\n            quality: input\n          });\n        }\n      });\n    },\n    // Cancel current network requests\n    // See https://github.com/sampotts/plyr/issues/174\n    cancelRequests() {\n      if (!this.isHTML5) {\n        return;\n      }\n\n      // Remove child sources\n      removeElement(html5.getSources.call(this));\n\n      // Set blank video src attribute\n      // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n      // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n      this.media.setAttribute('src', this.config.blankVideo);\n\n      // Load the new empty source\n      // This will cancel existing requests\n      // See https://github.com/sampotts/plyr/issues/174\n      this.media.load();\n\n      // Debugging\n      this.debug.log('Cancelled network requests');\n    }\n  };\n\n  // ==========================================================================\n\n  // Generate a random ID\n  function generateId(prefix) {\n    return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n  }\n\n  // Format string\n  function format(input, ...args) {\n    if (is.empty(input)) return input;\n    return input.toString().replace(/{(\\d+)}/g, (match, i) => args[i].toString());\n  }\n\n  // Get percentage\n  function getPercentage(current, max) {\n    if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n      return 0;\n    }\n    return (current / max * 100).toFixed(2);\n  }\n\n  // Replace all occurrences of a string in a string\n  const replaceAll = (input = '', find = '', replace = '') => input.replace(new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'), replace.toString());\n\n  // Convert to title case\n  const toTitleCase = (input = '') => input.toString().replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.slice(1).toLowerCase());\n\n  // Convert string to pascalCase\n  function toPascalCase(input = '') {\n    let string = input.toString();\n\n    // Convert kebab case\n    string = replaceAll(string, '-', ' ');\n\n    // Convert snake case\n    string = replaceAll(string, '_', ' ');\n\n    // Convert to title case\n    string = toTitleCase(string);\n\n    // Convert to pascal case\n    return replaceAll(string, ' ', '');\n  }\n\n  // Convert string to pascalCase\n  function toCamelCase(input = '') {\n    let string = input.toString();\n\n    // Convert to pascal case\n    string = toPascalCase(string);\n\n    // Convert first character to lowercase\n    return string.charAt(0).toLowerCase() + string.slice(1);\n  }\n\n  // Remove HTML from a string\n  function stripHTML(source) {\n    const fragment = document.createDocumentFragment();\n    const element = document.createElement('div');\n    fragment.appendChild(element);\n    element.innerHTML = source;\n    return fragment.firstChild.innerText;\n  }\n\n  // Like outerHTML, but also works for DocumentFragment\n  function getHTML(element) {\n    const wrapper = document.createElement('div');\n    wrapper.appendChild(element);\n    return wrapper.innerHTML;\n  }\n\n  // ==========================================================================\n\n  // Skip i18n for abbreviations and brand names\n  const resources = {\n    pip: 'PIP',\n    airplay: 'AirPlay',\n    html5: 'HTML5',\n    vimeo: 'Vimeo',\n    youtube: 'YouTube'\n  };\n  const i18n = {\n    get(key = '', config = {}) {\n      if (is.empty(key) || is.empty(config)) {\n        return '';\n      }\n      let string = getDeep(config.i18n, key);\n      if (is.empty(string)) {\n        if (Object.keys(resources).includes(key)) {\n          return resources[key];\n        }\n        return '';\n      }\n      const replace = {\n        '{seektime}': config.seekTime,\n        '{title}': config.title\n      };\n      Object.entries(replace).forEach(([k, v]) => {\n        string = replaceAll(string, k, v);\n      });\n      return string;\n    }\n  };\n\n  class Storage {\n    constructor(player) {\n      _defineProperty$1(this, \"get\", key => {\n        if (!Storage.supported || !this.enabled) {\n          return null;\n        }\n        const store = window.localStorage.getItem(this.key);\n        if (is.empty(store)) {\n          return null;\n        }\n        const json = JSON.parse(store);\n        return is.string(key) && key.length ? json[key] : json;\n      });\n      _defineProperty$1(this, \"set\", object => {\n        // Bail if we don't have localStorage support or it's disabled\n        if (!Storage.supported || !this.enabled) {\n          return;\n        }\n\n        // Can only store objectst\n        if (!is.object(object)) {\n          return;\n        }\n\n        // Get current storage\n        let storage = this.get();\n\n        // Default to empty object\n        if (is.empty(storage)) {\n          storage = {};\n        }\n\n        // Update the working copy of the values\n        extend(storage, object);\n\n        // Update storage\n        try {\n          window.localStorage.setItem(this.key, JSON.stringify(storage));\n        } catch (_) {\n          // Do nothing\n        }\n      });\n      this.enabled = player.config.storage.enabled;\n      this.key = player.config.storage.key;\n    }\n\n    // Check for actual support (see if we can use it)\n    static get supported() {\n      try {\n        if (!('localStorage' in window)) {\n          return false;\n        }\n        const test = '___test';\n\n        // Try to use it (it might be disabled, e.g. user is in private mode)\n        // see: https://github.com/sampotts/plyr/issues/131\n        window.localStorage.setItem(test, test);\n        window.localStorage.removeItem(test);\n        return true;\n      } catch (_) {\n        return false;\n      }\n    }\n  }\n\n  // ==========================================================================\n  // Fetch wrapper\n  // Using XHR to avoid issues with older browsers\n  // ==========================================================================\n\n  function fetch(url, responseType = 'text') {\n    return new Promise((resolve, reject) => {\n      try {\n        const request = new XMLHttpRequest();\n\n        // Check for CORS support\n        if (!('withCredentials' in request)) {\n          return;\n        }\n        request.addEventListener('load', () => {\n          if (responseType === 'text') {\n            try {\n              resolve(JSON.parse(request.responseText));\n            } catch (_) {\n              resolve(request.responseText);\n            }\n          } else {\n            resolve(request.response);\n          }\n        });\n        request.addEventListener('error', () => {\n          throw new Error(request.status);\n        });\n        request.open('GET', url, true);\n\n        // Set the required response type\n        request.responseType = responseType;\n        request.send();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  // ==========================================================================\n\n  // Load an external SVG sprite\n  function loadSprite(url, id) {\n    if (!is.string(url)) {\n      return;\n    }\n    const prefix = 'cache';\n    const hasId = is.string(id);\n    let isCached = false;\n    const exists = () => document.getElementById(id) !== null;\n    const update = (container, data) => {\n      // eslint-disable-next-line no-param-reassign\n      container.innerHTML = data;\n\n      // Check again incase of race condition\n      if (hasId && exists()) {\n        return;\n      }\n\n      // Inject the SVG to the body\n      document.body.insertAdjacentElement('afterbegin', container);\n    };\n\n    // Only load once if ID set\n    if (!hasId || !exists()) {\n      const useStorage = Storage.supported;\n      // Create container\n      const container = document.createElement('div');\n      container.setAttribute('hidden', '');\n      if (hasId) {\n        container.setAttribute('id', id);\n      }\n\n      // Check in cache\n      if (useStorage) {\n        const cached = window.localStorage.getItem(`${prefix}-${id}`);\n        isCached = cached !== null;\n        if (isCached) {\n          const data = JSON.parse(cached);\n          update(container, data.content);\n        }\n      }\n\n      // Get the sprite\n      fetch(url).then(result => {\n        if (is.empty(result)) {\n          return;\n        }\n        if (useStorage) {\n          try {\n            window.localStorage.setItem(`${prefix}-${id}`, JSON.stringify({\n              content: result\n            }));\n          } catch (_) {\n            // Do nothing\n          }\n        }\n        update(container, result);\n      }).catch(() => {});\n    }\n  }\n\n  // ==========================================================================\n\n  // Time helpers\n  const getHours = value => Math.trunc(value / 60 / 60 % 60, 10);\n  const getMinutes = value => Math.trunc(value / 60 % 60, 10);\n  const getSeconds = value => Math.trunc(value % 60, 10);\n\n  // Format time to UI friendly string\n  function formatTime(time = 0, displayHours = false, inverted = false) {\n    // Bail if the value isn't a number\n    if (!is.number(time)) {\n      return formatTime(undefined, displayHours, inverted);\n    }\n\n    // Format time component to add leading zero\n    const format = value => `0${value}`.slice(-2);\n    // Breakdown to hours, mins, secs\n    let hours = getHours(time);\n    const mins = getMinutes(time);\n    const secs = getSeconds(time);\n\n    // Do we need to display hours?\n    if (displayHours || hours > 0) {\n      hours = `${hours}:`;\n    } else {\n      hours = '';\n    }\n\n    // Render\n    return `${inverted && time > 0 ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n  }\n\n  // ==========================================================================\n\n  // TODO: Don't export a massive object - break down and create class\n  const controls = {\n    // Get icon URL\n    getIconUrl() {\n      const url = new URL(this.config.iconUrl, window.location);\n      const host = window.location.host ? window.location.host : window.top.location.host;\n      const cors = url.host !== host || browser.isIE && !window.svg4everybody;\n      return {\n        url: this.config.iconUrl,\n        cors\n      };\n    },\n    // Find the UI controls\n    findElements() {\n      try {\n        this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper);\n\n        // Buttons\n        this.elements.buttons = {\n          play: getElements.call(this, this.config.selectors.buttons.play),\n          pause: getElement.call(this, this.config.selectors.buttons.pause),\n          restart: getElement.call(this, this.config.selectors.buttons.restart),\n          rewind: getElement.call(this, this.config.selectors.buttons.rewind),\n          fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\n          mute: getElement.call(this, this.config.selectors.buttons.mute),\n          pip: getElement.call(this, this.config.selectors.buttons.pip),\n          airplay: getElement.call(this, this.config.selectors.buttons.airplay),\n          settings: getElement.call(this, this.config.selectors.buttons.settings),\n          captions: getElement.call(this, this.config.selectors.buttons.captions),\n          fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen)\n        };\n\n        // Progress\n        this.elements.progress = getElement.call(this, this.config.selectors.progress);\n\n        // Inputs\n        this.elements.inputs = {\n          seek: getElement.call(this, this.config.selectors.inputs.seek),\n          volume: getElement.call(this, this.config.selectors.inputs.volume)\n        };\n\n        // Display\n        this.elements.display = {\n          buffer: getElement.call(this, this.config.selectors.display.buffer),\n          currentTime: getElement.call(this, this.config.selectors.display.currentTime),\n          duration: getElement.call(this, this.config.selectors.display.duration)\n        };\n\n        // Seek tooltip\n        if (is.element(this.elements.progress)) {\n          this.elements.display.seekTooltip = this.elements.progress.querySelector(`.${this.config.classNames.tooltip}`);\n        }\n        return true;\n      } catch (error) {\n        // Log it\n        this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n        // Restore native video controls\n        this.toggleNativeControls(true);\n        return false;\n      }\n    },\n    // Create <svg> icon\n    createIcon(type, attributes) {\n      const namespace = 'http://www.w3.org/2000/svg';\n      const iconUrl = controls.getIconUrl.call(this);\n      const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n      // Create <svg>\n      const icon = document.createElementNS(namespace, 'svg');\n      setAttributes(icon, extend(attributes, {\n        'aria-hidden': 'true',\n        focusable: 'false'\n      }));\n\n      // Create the <use> to reference sprite\n      const use = document.createElementNS(namespace, 'use');\n      const path = `${iconPath}-${type}`;\n\n      // Set `href` attributes\n      // https://github.com/sampotts/plyr/issues/460\n      // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n      if ('href' in use) {\n        use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n      }\n\n      // Always set the older attribute even though it's \"deprecated\" (it'll be around for ages)\n      use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n\n      // Add <use> to <svg>\n      icon.appendChild(use);\n      return icon;\n    },\n    // Create hidden text label\n    createLabel(key, attr = {}) {\n      const text = i18n.get(key, this.config);\n      const attributes = {\n        ...attr,\n        class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' ')\n      };\n      return createElement('span', attributes, text);\n    },\n    // Create a badge\n    createBadge(text) {\n      if (is.empty(text)) {\n        return null;\n      }\n      const badge = createElement('span', {\n        class: this.config.classNames.menu.value\n      });\n      badge.appendChild(createElement('span', {\n        class: this.config.classNames.menu.badge\n      }, text));\n      return badge;\n    },\n    // Create a <button>\n    createButton(buttonType, attr) {\n      const attributes = extend({}, attr);\n      let type = toCamelCase(buttonType);\n      const props = {\n        element: 'button',\n        toggle: false,\n        label: null,\n        icon: null,\n        labelPressed: null,\n        iconPressed: null\n      };\n      ['element', 'icon', 'label'].forEach(key => {\n        if (Object.keys(attributes).includes(key)) {\n          props[key] = attributes[key];\n          delete attributes[key];\n        }\n      });\n\n      // Default to 'button' type to prevent form submission\n      if (props.element === 'button' && !Object.keys(attributes).includes('type')) {\n        attributes.type = 'button';\n      }\n\n      // Set class name\n      if (Object.keys(attributes).includes('class')) {\n        if (!attributes.class.split(' ').some(c => c === this.config.classNames.control)) {\n          extend(attributes, {\n            class: `${attributes.class} ${this.config.classNames.control}`\n          });\n        }\n      } else {\n        attributes.class = this.config.classNames.control;\n      }\n\n      // Large play button\n      switch (buttonType) {\n        case 'play':\n          props.toggle = true;\n          props.label = 'play';\n          props.labelPressed = 'pause';\n          props.icon = 'play';\n          props.iconPressed = 'pause';\n          break;\n        case 'mute':\n          props.toggle = true;\n          props.label = 'mute';\n          props.labelPressed = 'unmute';\n          props.icon = 'volume';\n          props.iconPressed = 'muted';\n          break;\n        case 'captions':\n          props.toggle = true;\n          props.label = 'enableCaptions';\n          props.labelPressed = 'disableCaptions';\n          props.icon = 'captions-off';\n          props.iconPressed = 'captions-on';\n          break;\n        case 'fullscreen':\n          props.toggle = true;\n          props.label = 'enterFullscreen';\n          props.labelPressed = 'exitFullscreen';\n          props.icon = 'enter-fullscreen';\n          props.iconPressed = 'exit-fullscreen';\n          break;\n        case 'play-large':\n          attributes.class += ` ${this.config.classNames.control}--overlaid`;\n          type = 'play';\n          props.label = 'play';\n          props.icon = 'play';\n          break;\n        default:\n          if (is.empty(props.label)) {\n            props.label = type;\n          }\n          if (is.empty(props.icon)) {\n            props.icon = buttonType;\n          }\n      }\n      const button = createElement(props.element);\n\n      // Setup toggle icon and labels\n      if (props.toggle) {\n        // Icon\n        button.appendChild(controls.createIcon.call(this, props.iconPressed, {\n          class: 'icon--pressed'\n        }));\n        button.appendChild(controls.createIcon.call(this, props.icon, {\n          class: 'icon--not-pressed'\n        }));\n\n        // Label/Tooltip\n        button.appendChild(controls.createLabel.call(this, props.labelPressed, {\n          class: 'label--pressed'\n        }));\n        button.appendChild(controls.createLabel.call(this, props.label, {\n          class: 'label--not-pressed'\n        }));\n      } else {\n        button.appendChild(controls.createIcon.call(this, props.icon));\n        button.appendChild(controls.createLabel.call(this, props.label));\n      }\n\n      // Merge and set attributes\n      extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n      setAttributes(button, attributes);\n\n      // We have multiple play buttons\n      if (type === 'play') {\n        if (!is.array(this.elements.buttons[type])) {\n          this.elements.buttons[type] = [];\n        }\n        this.elements.buttons[type].push(button);\n      } else {\n        this.elements.buttons[type] = button;\n      }\n      return button;\n    },\n    // Create an <input type='range'>\n    createRange(type, attributes) {\n      // Seek input\n      const input = createElement('input', extend(getAttributesFromSelector(this.config.selectors.inputs[type]), {\n        type: 'range',\n        min: 0,\n        max: 100,\n        step: 0.01,\n        value: 0,\n        autocomplete: 'off',\n        // A11y fixes for https://github.com/sampotts/plyr/issues/905\n        role: 'slider',\n        'aria-label': i18n.get(type, this.config),\n        'aria-valuemin': 0,\n        'aria-valuemax': 100,\n        'aria-valuenow': 0\n      }, attributes));\n      this.elements.inputs[type] = input;\n\n      // Set the fill for webkit now\n      controls.updateRangeFill.call(this, input);\n\n      // Improve support on touch devices\n      RangeTouch.setup(input);\n      return input;\n    },\n    // Create a <progress>\n    createProgress(type, attributes) {\n      const progress = createElement('progress', extend(getAttributesFromSelector(this.config.selectors.display[type]), {\n        min: 0,\n        max: 100,\n        value: 0,\n        role: 'progressbar',\n        'aria-hidden': true\n      }, attributes));\n\n      // Create the label inside\n      if (type !== 'volume') {\n        progress.appendChild(createElement('span', null, '0'));\n        const suffixKey = {\n          played: 'played',\n          buffer: 'buffered'\n        }[type];\n        const suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\n        progress.innerText = `% ${suffix.toLowerCase()}`;\n      }\n      this.elements.display[type] = progress;\n      return progress;\n    },\n    // Create time display\n    createTime(type, attrs) {\n      const attributes = getAttributesFromSelector(this.config.selectors.display[type], attrs);\n      const container = createElement('div', extend(attributes, {\n        class: `${attributes.class ? attributes.class : ''} ${this.config.classNames.display.time} `.trim(),\n        'aria-label': i18n.get(type, this.config)\n      }), '00:00');\n\n      // Reference for updates\n      this.elements.display[type] = container;\n      return container;\n    },\n    // Bind keyboard shortcuts for a menu item\n    // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n    bindMenuItemShortcuts(menuItem, type) {\n      // Navigate through menus via arrow keys and space\n      on.call(this, menuItem, 'keydown keyup', event => {\n        // We only care about space and ⬆️ ⬇️️ ➡️\n        if (![' ', 'ArrowUp', 'ArrowDown', 'ArrowRight'].includes(event.key)) {\n          return;\n        }\n\n        // Prevent play / seek\n        event.preventDefault();\n        event.stopPropagation();\n\n        // We're just here to prevent the keydown bubbling\n        if (event.type === 'keydown') {\n          return;\n        }\n        const isRadioButton = matches(menuItem, '[role=\"menuitemradio\"]');\n\n        // Show the respective menu\n        if (!isRadioButton && [' ', 'ArrowRight'].includes(event.key)) {\n          controls.showMenuPanel.call(this, type, true);\n        } else {\n          let target;\n          if (event.key !== ' ') {\n            if (event.key === 'ArrowDown' || isRadioButton && event.key === 'ArrowRight') {\n              target = menuItem.nextElementSibling;\n              if (!is.element(target)) {\n                target = menuItem.parentNode.firstElementChild;\n              }\n            } else {\n              target = menuItem.previousElementSibling;\n              if (!is.element(target)) {\n                target = menuItem.parentNode.lastElementChild;\n              }\n            }\n            setFocus.call(this, target, true);\n          }\n        }\n      }, false);\n\n      // Enter will fire a `click` event but we still need to manage focus\n      // So we bind to keyup which fires after and set focus here\n      on.call(this, menuItem, 'keyup', event => {\n        if (event.key !== 'Return') return;\n        controls.focusFirstMenuItem.call(this, null, true);\n      });\n    },\n    // Create a settings menu item\n    createMenuItem({\n      value,\n      list,\n      type,\n      title,\n      badge = null,\n      checked = false\n    }) {\n      const attributes = getAttributesFromSelector(this.config.selectors.inputs[type]);\n      const menuItem = createElement('button', extend(attributes, {\n        type: 'button',\n        role: 'menuitemradio',\n        class: `${this.config.classNames.control} ${attributes.class ? attributes.class : ''}`.trim(),\n        'aria-checked': checked,\n        value\n      }));\n      const flex = createElement('span');\n\n      // We have to set as HTML incase of special characters\n      flex.innerHTML = title;\n      if (is.element(badge)) {\n        flex.appendChild(badge);\n      }\n      menuItem.appendChild(flex);\n\n      // Replicate radio button behavior\n      Object.defineProperty(menuItem, 'checked', {\n        enumerable: true,\n        get() {\n          return menuItem.getAttribute('aria-checked') === 'true';\n        },\n        set(check) {\n          // Ensure exclusivity\n          if (check) {\n            Array.from(menuItem.parentNode.children).filter(node => matches(node, '[role=\"menuitemradio\"]')).forEach(node => node.setAttribute('aria-checked', 'false'));\n          }\n          menuItem.setAttribute('aria-checked', check ? 'true' : 'false');\n        }\n      });\n      this.listeners.bind(menuItem, 'click keyup', event => {\n        if (is.keyboardEvent(event) && event.key !== ' ') {\n          return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        menuItem.checked = true;\n        switch (type) {\n          case 'language':\n            this.currentTrack = Number(value);\n            break;\n          case 'quality':\n            this.quality = value;\n            break;\n          case 'speed':\n            this.speed = parseFloat(value);\n            break;\n        }\n        controls.showMenuPanel.call(this, 'home', is.keyboardEvent(event));\n      }, type, false);\n      controls.bindMenuItemShortcuts.call(this, menuItem, type);\n      list.appendChild(menuItem);\n    },\n    // Format a time for display\n    formatTime(time = 0, inverted = false) {\n      // Bail if the value isn't a number\n      if (!is.number(time)) {\n        return time;\n      }\n\n      // Always display hours if duration is over an hour\n      const forceHours = getHours(this.duration) > 0;\n      return formatTime(time, forceHours, inverted);\n    },\n    // Update the displayed time\n    updateTimeDisplay(target = null, time = 0, inverted = false) {\n      // Bail if there's no element to display or the value isn't a number\n      if (!is.element(target) || !is.number(time)) {\n        return;\n      }\n\n      // eslint-disable-next-line no-param-reassign\n      target.innerText = controls.formatTime(time, inverted);\n    },\n    // Update volume UI and storage\n    updateVolume() {\n      if (!this.supported.ui) {\n        return;\n      }\n\n      // Update range\n      if (is.element(this.elements.inputs.volume)) {\n        controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n      }\n\n      // Update mute state\n      if (is.element(this.elements.buttons.mute)) {\n        this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\n      }\n    },\n    // Update seek value and lower fill\n    setRange(target, value = 0) {\n      if (!is.element(target)) {\n        return;\n      }\n\n      // eslint-disable-next-line\n      target.value = value;\n\n      // Webkit range fill\n      controls.updateRangeFill.call(this, target);\n    },\n    // Update <progress> elements\n    updateProgress(event) {\n      if (!this.supported.ui || !is.event(event)) {\n        return;\n      }\n      let value = 0;\n      const setProgress = (target, input) => {\n        const val = is.number(input) ? input : 0;\n        const progress = is.element(target) ? target : this.elements.display.buffer;\n\n        // Update value and label\n        if (is.element(progress)) {\n          progress.value = val;\n\n          // Update text label inside\n          const label = progress.getElementsByTagName('span')[0];\n          if (is.element(label)) {\n            label.childNodes[0].nodeValue = val;\n          }\n        }\n      };\n      if (event) {\n        switch (event.type) {\n          // Video playing\n          case 'timeupdate':\n          case 'seeking':\n          case 'seeked':\n            value = getPercentage(this.currentTime, this.duration);\n\n            // Set seek range value only if it's a 'natural' time event\n            if (event.type === 'timeupdate') {\n              controls.setRange.call(this, this.elements.inputs.seek, value);\n            }\n            break;\n\n          // Check buffer status\n          case 'playing':\n          case 'progress':\n            setProgress(this.elements.display.buffer, this.buffered * 100);\n            break;\n        }\n      }\n    },\n    // Webkit polyfill for lower fill range\n    updateRangeFill(target) {\n      // Get range from event if event passed\n      const range = is.event(target) ? target.target : target;\n\n      // Needs to be a valid <input type='range'>\n      if (!is.element(range) || range.getAttribute('type') !== 'range') {\n        return;\n      }\n\n      // Set aria values for https://github.com/sampotts/plyr/issues/905\n      if (matches(range, this.config.selectors.inputs.seek)) {\n        range.setAttribute('aria-valuenow', this.currentTime);\n        const currentTime = controls.formatTime(this.currentTime);\n        const duration = controls.formatTime(this.duration);\n        const format = i18n.get('seekLabel', this.config);\n        range.setAttribute('aria-valuetext', format.replace('{currentTime}', currentTime).replace('{duration}', duration));\n      } else if (matches(range, this.config.selectors.inputs.volume)) {\n        const percent = range.value * 100;\n        range.setAttribute('aria-valuenow', percent);\n        range.setAttribute('aria-valuetext', `${percent.toFixed(1)}%`);\n      } else {\n        range.setAttribute('aria-valuenow', range.value);\n      }\n\n      // WebKit only\n      if (!browser.isWebkit) {\n        return;\n      }\n\n      // Set CSS custom property\n      range.style.setProperty('--value', `${range.value / range.max * 100}%`);\n    },\n    // Update hover tooltip for seeking\n    updateSeekTooltip(event) {\n      var _this$config$markers, _this$config$markers$;\n      // Bail if setting not true\n      if (!this.config.tooltips.seek || !is.element(this.elements.inputs.seek) || !is.element(this.elements.display.seekTooltip) || this.duration === 0) {\n        return;\n      }\n      const tipElement = this.elements.display.seekTooltip;\n      const visible = `${this.config.classNames.tooltip}--visible`;\n      const toggle = show => toggleClass$1(tipElement, visible, show);\n\n      // Hide on touch\n      if (this.touch) {\n        toggle(false);\n        return;\n      }\n\n      // Determine percentage, if already visible\n      let percent = 0;\n      const clientRect = this.elements.progress.getBoundingClientRect();\n      if (is.event(event)) {\n        percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n      } else if (hasClass(tipElement, visible)) {\n        percent = parseFloat(tipElement.style.left, 10);\n      } else {\n        return;\n      }\n\n      // Set bounds\n      if (percent < 0) {\n        percent = 0;\n      } else if (percent > 100) {\n        percent = 100;\n      }\n      const time = this.duration / 100 * percent;\n\n      // Display the time a click would seek to\n      tipElement.innerText = controls.formatTime(time);\n\n      // Get marker point for time\n      const point = (_this$config$markers = this.config.markers) === null || _this$config$markers === void 0 ? void 0 : (_this$config$markers$ = _this$config$markers.points) === null || _this$config$markers$ === void 0 ? void 0 : _this$config$markers$.find(({\n        time: t\n      }) => t === Math.round(time));\n\n      // Append the point label to the tooltip\n      if (point) {\n        tipElement.insertAdjacentHTML('afterbegin', `${point.label}<br>`);\n      }\n\n      // Set position\n      tipElement.style.left = `${percent}%`;\n\n      // Show/hide the tooltip\n      // If the event is a moues in/out and percentage is inside bounds\n      if (is.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\n        toggle(event.type === 'mouseenter');\n      }\n    },\n    // Handle time change event\n    timeUpdate(event) {\n      // Only invert if only one time element is displayed and used for both duration and currentTime\n      const invert = !is.element(this.elements.display.duration) && this.config.invertTime;\n\n      // Duration\n      controls.updateTimeDisplay.call(this, this.elements.display.currentTime, invert ? this.duration - this.currentTime : this.currentTime, invert);\n\n      // Ignore updates while seeking\n      if (event && event.type === 'timeupdate' && this.media.seeking) {\n        return;\n      }\n\n      // Playing progress\n      controls.updateProgress.call(this, event);\n    },\n    // Show the duration on metadataloaded or durationchange events\n    durationUpdate() {\n      // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\n      if (!this.supported.ui || !this.config.invertTime && this.currentTime) {\n        return;\n      }\n\n      // If duration is the 2**32 (shaka), Infinity (HLS), DASH-IF (Number.MAX_SAFE_INTEGER || Number.MAX_VALUE) indicating live we hide the currentTime and progressbar.\n      // https://github.com/video-dev/hls.js/blob/5820d29d3c4c8a46e8b75f1e3afa3e68c1a9a2db/src/controller/buffer-controller.js#L415\n      // https://github.com/google/shaka-player/blob/4d889054631f4e1cf0fbd80ddd2b71887c02e232/lib/media/streaming_engine.js#L1062\n      // https://github.com/Dash-Industry-Forum/dash.js/blob/69859f51b969645b234666800d4cb596d89c602d/src/dash/models/DashManifestModel.js#L338\n      if (this.duration >= 2 ** 32) {\n        toggleHidden(this.elements.display.currentTime, true);\n        toggleHidden(this.elements.progress, true);\n        return;\n      }\n\n      // Update ARIA values\n      if (is.element(this.elements.inputs.seek)) {\n        this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\n      }\n\n      // If there's a spot to display duration\n      const hasDuration = is.element(this.elements.display.duration);\n\n      // If there's only one time display, display duration there\n      if (!hasDuration && this.config.displayDuration && this.paused) {\n        controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n      }\n\n      // If there's a duration element, update content\n      if (hasDuration) {\n        controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n      }\n      if (this.config.markers.enabled) {\n        controls.setMarkers.call(this);\n      }\n\n      // Update the tooltip (if visible)\n      controls.updateSeekTooltip.call(this);\n    },\n    // Hide/show a tab\n    toggleMenuButton(setting, toggle) {\n      toggleHidden(this.elements.settings.buttons[setting], !toggle);\n    },\n    // Update the selected setting\n    updateSetting(setting, container, input) {\n      const pane = this.elements.settings.panels[setting];\n      let value = null;\n      let list = container;\n      if (setting === 'captions') {\n        value = this.currentTrack;\n      } else {\n        value = !is.empty(input) ? input : this[setting];\n\n        // Get default\n        if (is.empty(value)) {\n          value = this.config[setting].default;\n        }\n\n        // Unsupported value\n        if (!is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n          this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n          return;\n        }\n\n        // Disabled value\n        if (!this.config[setting].options.includes(value)) {\n          this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n          return;\n        }\n      }\n\n      // Get the list if we need to\n      if (!is.element(list)) {\n        list = pane && pane.querySelector('[role=\"menu\"]');\n      }\n\n      // If there's no list it means it's not been rendered...\n      if (!is.element(list)) {\n        return;\n      }\n\n      // Update the label\n      const label = this.elements.settings.buttons[setting].querySelector(`.${this.config.classNames.menu.value}`);\n      label.innerHTML = controls.getLabel.call(this, setting, value);\n\n      // Find the radio option and check it\n      const target = list && list.querySelector(`[value=\"${value}\"]`);\n      if (is.element(target)) {\n        target.checked = true;\n      }\n    },\n    // Translate a value into a nice label\n    getLabel(setting, value) {\n      switch (setting) {\n        case 'speed':\n          return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n        case 'quality':\n          if (is.number(value)) {\n            const label = i18n.get(`qualityLabel.${value}`, this.config);\n            if (!label.length) {\n              return `${value}p`;\n            }\n            return label;\n          }\n          return toTitleCase(value);\n        case 'captions':\n          return captions.getLabel.call(this);\n        default:\n          return null;\n      }\n    },\n    // Set the quality menu\n    setQualityMenu(options) {\n      // Menu required\n      if (!is.element(this.elements.settings.panels.quality)) {\n        return;\n      }\n      const type = 'quality';\n      const list = this.elements.settings.panels.quality.querySelector('[role=\"menu\"]');\n\n      // Set options if passed and filter based on uniqueness and config\n      if (is.array(options)) {\n        this.options.quality = dedupe(options).filter(quality => this.config.quality.options.includes(quality));\n      }\n\n      // Toggle the pane and tab\n      const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n      controls.toggleMenuButton.call(this, type, toggle);\n\n      // Empty the menu\n      emptyElement(list);\n\n      // Check if we need to toggle the parent\n      controls.checkMenu.call(this);\n\n      // If we're hiding, nothing more to do\n      if (!toggle) {\n        return;\n      }\n\n      // Get the badge HTML for HD, 4K etc\n      const getBadge = quality => {\n        const label = i18n.get(`qualityBadge.${quality}`, this.config);\n        if (!label.length) {\n          return null;\n        }\n        return controls.createBadge.call(this, label);\n      };\n\n      // Sort options by the config and then render options\n      this.options.quality.sort((a, b) => {\n        const sorting = this.config.quality.options;\n        return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n      }).forEach(quality => {\n        controls.createMenuItem.call(this, {\n          value: quality,\n          list,\n          type,\n          title: controls.getLabel.call(this, 'quality', quality),\n          badge: getBadge(quality)\n        });\n      });\n      controls.updateSetting.call(this, type, list);\n    },\n    // Set the looping options\n    /* setLoopMenu() {\n          // Menu required\n          if (!is.element(this.elements.settings.panels.loop)) {\n              return;\n          }\n           const options = ['start', 'end', 'all', 'reset'];\n          const list = this.elements.settings.panels.loop.querySelector('[role=\"menu\"]');\n           // Show the pane and tab\n          toggleHidden(this.elements.settings.buttons.loop, false);\n          toggleHidden(this.elements.settings.panels.loop, false);\n           // Toggle the pane and tab\n          const toggle = !is.empty(this.loop.options);\n          controls.toggleMenuButton.call(this, 'loop', toggle);\n           // Empty the menu\n          emptyElement(list);\n           options.forEach(option => {\n              const item = createElement('li');\n               const button = createElement(\n                  'button',\n                  extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                      type: 'button',\n                      class: this.config.classNames.control,\n                      'data-plyr-loop-action': option,\n                  }),\n                  i18n.get(option, this.config)\n              );\n               if (['start', 'end'].includes(option)) {\n                  const badge = controls.createBadge.call(this, '00:00');\n                  button.appendChild(badge);\n              }\n               item.appendChild(button);\n              list.appendChild(item);\n          });\n      }, */\n\n    // Get current selected caption language\n    // TODO: rework this to user the getter in the API?\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n      // Menu required\n      if (!is.element(this.elements.settings.panels.captions)) {\n        return;\n      }\n\n      // TODO: Captions or language? Currently it's mixed\n      const type = 'captions';\n      const list = this.elements.settings.panels.captions.querySelector('[role=\"menu\"]');\n      const tracks = captions.getTracks.call(this);\n      const toggle = Boolean(tracks.length);\n\n      // Toggle the pane and tab\n      controls.toggleMenuButton.call(this, type, toggle);\n\n      // Empty the menu\n      emptyElement(list);\n\n      // Check if we need to toggle the parent\n      controls.checkMenu.call(this);\n\n      // If there's no captions, bail\n      if (!toggle) {\n        return;\n      }\n\n      // Generate options data\n      const options = tracks.map((track, value) => ({\n        value,\n        checked: this.captions.toggled && this.currentTrack === value,\n        title: captions.getLabel.call(this, track),\n        badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n        list,\n        type: 'language'\n      }));\n\n      // Add the \"Disabled\" option to turn off captions\n      options.unshift({\n        value: -1,\n        checked: !this.captions.toggled,\n        title: i18n.get('disabled', this.config),\n        list,\n        type: 'language'\n      });\n\n      // Generate options\n      options.forEach(controls.createMenuItem.bind(this));\n      controls.updateSetting.call(this, type, list);\n    },\n    // Set a list of available captions languages\n    setSpeedMenu() {\n      // Menu required\n      if (!is.element(this.elements.settings.panels.speed)) {\n        return;\n      }\n      const type = 'speed';\n      const list = this.elements.settings.panels.speed.querySelector('[role=\"menu\"]');\n\n      // Filter out invalid speeds\n      this.options.speed = this.options.speed.filter(o => o >= this.minimumSpeed && o <= this.maximumSpeed);\n\n      // Toggle the pane and tab\n      const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n      controls.toggleMenuButton.call(this, type, toggle);\n\n      // Empty the menu\n      emptyElement(list);\n\n      // Check if we need to toggle the parent\n      controls.checkMenu.call(this);\n\n      // If we're hiding, nothing more to do\n      if (!toggle) {\n        return;\n      }\n\n      // Create items\n      this.options.speed.forEach(speed => {\n        controls.createMenuItem.call(this, {\n          value: speed,\n          list,\n          type,\n          title: controls.getLabel.call(this, 'speed', speed)\n        });\n      });\n      controls.updateSetting.call(this, type, list);\n    },\n    // Check if we need to hide/show the settings menu\n    checkMenu() {\n      const {\n        buttons\n      } = this.elements.settings;\n      const visible = !is.empty(buttons) && Object.values(buttons).some(button => !button.hidden);\n      toggleHidden(this.elements.settings.menu, !visible);\n    },\n    // Focus the first menu item in a given (or visible) menu\n    focusFirstMenuItem(pane, tabFocus = false) {\n      if (this.elements.settings.popup.hidden) {\n        return;\n      }\n      let target = pane;\n      if (!is.element(target)) {\n        target = Object.values(this.elements.settings.panels).find(p => !p.hidden);\n      }\n      const firstItem = target.querySelector('[role^=\"menuitem\"]');\n      setFocus.call(this, firstItem, tabFocus);\n    },\n    // Show/hide menu\n    toggleMenu(input) {\n      const {\n        popup\n      } = this.elements.settings;\n      const button = this.elements.buttons.settings;\n\n      // Menu and button are required\n      if (!is.element(popup) || !is.element(button)) {\n        return;\n      }\n\n      // True toggle by default\n      const {\n        hidden\n      } = popup;\n      let show = hidden;\n      if (is.boolean(input)) {\n        show = input;\n      } else if (is.keyboardEvent(input) && input.key === 'Escape') {\n        show = false;\n      } else if (is.event(input)) {\n        // If Plyr is in a shadowDOM, the event target is set to the component, instead of the\n        // Element in the shadowDOM. The path, if available, is complete.\n        const target = is.function(input.composedPath) ? input.composedPath()[0] : input.target;\n        const isMenuItem = popup.contains(target);\n\n        // If the click was inside the menu or if the click\n        // wasn't the button or menu item and we're trying to\n        // show the menu (a doc click shouldn't show the menu)\n        if (isMenuItem || !isMenuItem && input.target !== button && show) {\n          return;\n        }\n      }\n\n      // Set button attributes\n      button.setAttribute('aria-expanded', show);\n\n      // Show the actual popup\n      toggleHidden(popup, !show);\n\n      // Add class hook\n      toggleClass$1(this.elements.container, this.config.classNames.menu.open, show);\n\n      // Focus the first item if key interaction\n      if (show && is.keyboardEvent(input)) {\n        controls.focusFirstMenuItem.call(this, null, true);\n      } else if (!show && !hidden) {\n        // If closing, re-focus the button\n        setFocus.call(this, button, is.keyboardEvent(input));\n      }\n    },\n    // Get the natural size of a menu panel\n    getMenuSize(tab) {\n      const clone = tab.cloneNode(true);\n      clone.style.position = 'absolute';\n      clone.style.opacity = 0;\n      clone.removeAttribute('hidden');\n\n      // Append to parent so we get the \"real\" size\n      tab.parentNode.appendChild(clone);\n\n      // Get the sizes before we remove\n      const width = clone.scrollWidth;\n      const height = clone.scrollHeight;\n\n      // Remove from the DOM\n      removeElement(clone);\n      return {\n        width,\n        height\n      };\n    },\n    // Show a panel in the menu\n    showMenuPanel(type = '', tabFocus = false) {\n      const target = this.elements.container.querySelector(`#plyr-settings-${this.id}-${type}`);\n\n      // Nothing to show, bail\n      if (!is.element(target)) {\n        return;\n      }\n\n      // Hide all other panels\n      const container = target.parentNode;\n      const current = Array.from(container.children).find(node => !node.hidden);\n\n      // If we can do fancy animations, we'll animate the height/width\n      if (support.transitions && !support.reducedMotion) {\n        // Set the current width as a base\n        container.style.width = `${current.scrollWidth}px`;\n        container.style.height = `${current.scrollHeight}px`;\n\n        // Get potential sizes\n        const size = controls.getMenuSize.call(this, target);\n\n        // Restore auto height/width\n        const restore = event => {\n          // We're only bothered about height and width on the container\n          if (event.target !== container || !['width', 'height'].includes(event.propertyName)) {\n            return;\n          }\n\n          // Revert back to auto\n          container.style.width = '';\n          container.style.height = '';\n\n          // Only listen once\n          off.call(this, container, transitionEndEvent, restore);\n        };\n\n        // Listen for the transition finishing and restore auto height/width\n        on.call(this, container, transitionEndEvent, restore);\n\n        // Set dimensions to target\n        container.style.width = `${size.width}px`;\n        container.style.height = `${size.height}px`;\n      }\n\n      // Set attributes on current tab\n      toggleHidden(current, true);\n\n      // Set attributes on target\n      toggleHidden(target, false);\n\n      // Focus the first item\n      controls.focusFirstMenuItem.call(this, target, tabFocus);\n    },\n    // Set the download URL\n    setDownloadUrl() {\n      const button = this.elements.buttons.download;\n\n      // Bail if no button\n      if (!is.element(button)) {\n        return;\n      }\n\n      // Set attribute\n      button.setAttribute('href', this.download);\n    },\n    // Build the default HTML\n    create(data) {\n      const {\n        bindMenuItemShortcuts,\n        createButton,\n        createProgress,\n        createRange,\n        createTime,\n        setQualityMenu,\n        setSpeedMenu,\n        showMenuPanel\n      } = controls;\n      this.elements.controls = null;\n\n      // Larger overlaid play button\n      if (is.array(this.config.controls) && this.config.controls.includes('play-large')) {\n        this.elements.container.appendChild(createButton.call(this, 'play-large'));\n      }\n\n      // Create the container\n      const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n      this.elements.controls = container;\n\n      // Default item attributes\n      const defaultAttributes = {\n        class: 'plyr__controls__item'\n      };\n\n      // Loop through controls in order\n      dedupe(is.array(this.config.controls) ? this.config.controls : []).forEach(control => {\n        // Restart button\n        if (control === 'restart') {\n          container.appendChild(createButton.call(this, 'restart', defaultAttributes));\n        }\n\n        // Rewind button\n        if (control === 'rewind') {\n          container.appendChild(createButton.call(this, 'rewind', defaultAttributes));\n        }\n\n        // Play/Pause button\n        if (control === 'play') {\n          container.appendChild(createButton.call(this, 'play', defaultAttributes));\n        }\n\n        // Fast forward button\n        if (control === 'fast-forward') {\n          container.appendChild(createButton.call(this, 'fast-forward', defaultAttributes));\n        }\n\n        // Progress\n        if (control === 'progress') {\n          const progressContainer = createElement('div', {\n            class: `${defaultAttributes.class} plyr__progress__container`\n          });\n          const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n          // Seek range slider\n          progress.appendChild(createRange.call(this, 'seek', {\n            id: `plyr-seek-${data.id}`\n          }));\n\n          // Buffer progress\n          progress.appendChild(createProgress.call(this, 'buffer'));\n\n          // TODO: Add loop display indicator\n\n          // Seek tooltip\n          if (this.config.tooltips.seek) {\n            const tooltip = createElement('span', {\n              class: this.config.classNames.tooltip\n            }, '00:00');\n            progress.appendChild(tooltip);\n            this.elements.display.seekTooltip = tooltip;\n          }\n          this.elements.progress = progress;\n          progressContainer.appendChild(this.elements.progress);\n          container.appendChild(progressContainer);\n        }\n\n        // Media current time display\n        if (control === 'current-time') {\n          container.appendChild(createTime.call(this, 'currentTime', defaultAttributes));\n        }\n\n        // Media duration display\n        if (control === 'duration') {\n          container.appendChild(createTime.call(this, 'duration', defaultAttributes));\n        }\n\n        // Volume controls\n        if (control === 'mute' || control === 'volume') {\n          let {\n            volume\n          } = this.elements;\n\n          // Create the volume container if needed\n          if (!is.element(volume) || !container.contains(volume)) {\n            volume = createElement('div', extend({}, defaultAttributes, {\n              class: `${defaultAttributes.class} plyr__volume`.trim()\n            }));\n            this.elements.volume = volume;\n            container.appendChild(volume);\n          }\n\n          // Toggle mute button\n          if (control === 'mute') {\n            volume.appendChild(createButton.call(this, 'mute'));\n          }\n\n          // Volume range control\n          // Ignored on iOS as it's handled globally\n          // https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html\n          if (control === 'volume' && !browser.isIos) {\n            // Set the attributes\n            const attributes = {\n              max: 1,\n              step: 0.05,\n              value: this.config.volume\n            };\n\n            // Create the volume range slider\n            volume.appendChild(createRange.call(this, 'volume', extend(attributes, {\n              id: `plyr-volume-${data.id}`\n            })));\n          }\n        }\n\n        // Toggle captions button\n        if (control === 'captions') {\n          container.appendChild(createButton.call(this, 'captions', defaultAttributes));\n        }\n\n        // Settings button / menu\n        if (control === 'settings' && !is.empty(this.config.settings)) {\n          const wrapper = createElement('div', extend({}, defaultAttributes, {\n            class: `${defaultAttributes.class} plyr__menu`.trim(),\n            hidden: ''\n          }));\n          wrapper.appendChild(createButton.call(this, 'settings', {\n            'aria-haspopup': true,\n            'aria-controls': `plyr-settings-${data.id}`,\n            'aria-expanded': false\n          }));\n          const popup = createElement('div', {\n            class: 'plyr__menu__container',\n            id: `plyr-settings-${data.id}`,\n            hidden: ''\n          });\n          const inner = createElement('div');\n          const home = createElement('div', {\n            id: `plyr-settings-${data.id}-home`\n          });\n\n          // Create the menu\n          const menu = createElement('div', {\n            role: 'menu'\n          });\n          home.appendChild(menu);\n          inner.appendChild(home);\n          this.elements.settings.panels.home = home;\n\n          // Build the menu items\n          this.config.settings.forEach(type => {\n            // TODO: bundle this with the createMenuItem helper and bindings\n            const menuItem = createElement('button', extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n              type: 'button',\n              class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n              role: 'menuitem',\n              'aria-haspopup': true,\n              hidden: ''\n            }));\n\n            // Bind menu shortcuts for keyboard users\n            bindMenuItemShortcuts.call(this, menuItem, type);\n\n            // Show menu on click\n            on.call(this, menuItem, 'click', () => {\n              showMenuPanel.call(this, type, false);\n            });\n            const flex = createElement('span', null, i18n.get(type, this.config));\n            const value = createElement('span', {\n              class: this.config.classNames.menu.value\n            });\n\n            // Speed contains HTML entities\n            value.innerHTML = data[type];\n            flex.appendChild(value);\n            menuItem.appendChild(flex);\n            menu.appendChild(menuItem);\n\n            // Build the panes\n            const pane = createElement('div', {\n              id: `plyr-settings-${data.id}-${type}`,\n              hidden: ''\n            });\n\n            // Back button\n            const backButton = createElement('button', {\n              type: 'button',\n              class: `${this.config.classNames.control} ${this.config.classNames.control}--back`\n            });\n\n            // Visible label\n            backButton.appendChild(createElement('span', {\n              'aria-hidden': true\n            }, i18n.get(type, this.config)));\n\n            // Screen reader label\n            backButton.appendChild(createElement('span', {\n              class: this.config.classNames.hidden\n            }, i18n.get('menuBack', this.config)));\n\n            // Go back via keyboard\n            on.call(this, pane, 'keydown', event => {\n              if (event.key !== 'ArrowLeft') return;\n\n              // Prevent seek\n              event.preventDefault();\n              event.stopPropagation();\n\n              // Show the respective menu\n              showMenuPanel.call(this, 'home', true);\n            }, false);\n\n            // Go back via button click\n            on.call(this, backButton, 'click', () => {\n              showMenuPanel.call(this, 'home', false);\n            });\n\n            // Add to pane\n            pane.appendChild(backButton);\n\n            // Menu\n            pane.appendChild(createElement('div', {\n              role: 'menu'\n            }));\n            inner.appendChild(pane);\n            this.elements.settings.buttons[type] = menuItem;\n            this.elements.settings.panels[type] = pane;\n          });\n          popup.appendChild(inner);\n          wrapper.appendChild(popup);\n          container.appendChild(wrapper);\n          this.elements.settings.popup = popup;\n          this.elements.settings.menu = wrapper;\n        }\n\n        // Picture in picture button\n        if (control === 'pip' && support.pip) {\n          container.appendChild(createButton.call(this, 'pip', defaultAttributes));\n        }\n\n        // Airplay button\n        if (control === 'airplay' && support.airplay) {\n          container.appendChild(createButton.call(this, 'airplay', defaultAttributes));\n        }\n\n        // Download button\n        if (control === 'download') {\n          const attributes = extend({}, defaultAttributes, {\n            element: 'a',\n            href: this.download\n            // target: '_blank',\n          });\n\n          // Set download attribute for HTML5 only\n          if (this.isHTML5) {\n            attributes.download = '';\n          }\n          const {\n            download\n          } = this.config.urls;\n          if (!is.url(download) && this.isEmbed) {\n            extend(attributes, {\n              icon: `logo-${this.provider}`,\n              label: this.provider\n            });\n          }\n          container.appendChild(createButton.call(this, 'download', attributes));\n        }\n\n        // Toggle fullscreen button\n        if (control === 'fullscreen') {\n          container.appendChild(createButton.call(this, 'fullscreen', defaultAttributes));\n        }\n      });\n\n      // Set available quality levels\n      if (this.isHTML5) {\n        setQualityMenu.call(this, html5.getQualityOptions.call(this));\n      }\n      setSpeedMenu.call(this);\n      return container;\n    },\n    // Insert controls\n    inject() {\n      // Sprite\n      if (this.config.loadSprite) {\n        const icon = controls.getIconUrl.call(this);\n\n        // Only load external sprite using AJAX\n        if (icon.cors) {\n          loadSprite(icon.url, 'sprite-plyr');\n        }\n      }\n\n      // Create a unique ID\n      this.id = Math.floor(Math.random() * 10000);\n\n      // Null by default\n      let container = null;\n      this.elements.controls = null;\n\n      // Set template properties\n      const props = {\n        id: this.id,\n        seektime: this.config.seekTime,\n        title: this.config.title\n      };\n      let update = true;\n\n      // If function, run it and use output\n      if (is.function(this.config.controls)) {\n        this.config.controls = this.config.controls.call(this, props);\n      }\n\n      // Convert falsy controls to empty array (primarily for empty strings)\n      if (!this.config.controls) {\n        this.config.controls = [];\n      }\n      if (is.element(this.config.controls) || is.string(this.config.controls)) {\n        // HTMLElement or Non-empty string passed as the option\n        container = this.config.controls;\n      } else {\n        // Create controls\n        container = controls.create.call(this, {\n          id: this.id,\n          seektime: this.config.seekTime,\n          speed: this.speed,\n          quality: this.quality,\n          captions: captions.getLabel.call(this)\n          // TODO: Looping\n          // loop: 'None',\n        });\n\n        update = false;\n      }\n\n      // Replace props with their value\n      const replace = input => {\n        let result = input;\n        Object.entries(props).forEach(([key, value]) => {\n          result = replaceAll(result, `{${key}}`, value);\n        });\n        return result;\n      };\n\n      // Update markup\n      if (update) {\n        if (is.string(this.config.controls)) {\n          container = replace(container);\n        }\n      }\n\n      // Controls container\n      let target;\n\n      // Inject to custom location\n      if (is.string(this.config.selectors.controls.container)) {\n        target = document.querySelector(this.config.selectors.controls.container);\n      }\n\n      // Inject into the container by default\n      if (!is.element(target)) {\n        target = this.elements.container;\n      }\n\n      // Inject controls HTML (needs to be before captions, hence \"afterbegin\")\n      const insertMethod = is.element(container) ? 'insertAdjacentElement' : 'insertAdjacentHTML';\n      target[insertMethod]('afterbegin', container);\n\n      // Find the elements if need be\n      if (!is.element(this.elements.controls)) {\n        controls.findElements.call(this);\n      }\n\n      // Add pressed property to buttons\n      if (!is.empty(this.elements.buttons)) {\n        const addProperty = button => {\n          const className = this.config.classNames.controlPressed;\n          button.setAttribute('aria-pressed', 'false');\n          Object.defineProperty(button, 'pressed', {\n            configurable: true,\n            enumerable: true,\n            get() {\n              return hasClass(button, className);\n            },\n            set(pressed = false) {\n              toggleClass$1(button, className, pressed);\n              button.setAttribute('aria-pressed', pressed ? 'true' : 'false');\n            }\n          });\n        };\n\n        // Toggle classname when pressed property is set\n        Object.values(this.elements.buttons).filter(Boolean).forEach(button => {\n          if (is.array(button) || is.nodeList(button)) {\n            Array.from(button).filter(Boolean).forEach(addProperty);\n          } else {\n            addProperty(button);\n          }\n        });\n      }\n\n      // Edge sometimes doesn't finish the paint so force a repaint\n      if (browser.isEdge) {\n        repaint(target);\n      }\n\n      // Setup tooltips\n      if (this.config.tooltips.controls) {\n        const {\n          classNames,\n          selectors\n        } = this.config;\n        const selector = `${selectors.controls.wrapper} ${selectors.labels} .${classNames.hidden}`;\n        const labels = getElements.call(this, selector);\n        Array.from(labels).forEach(label => {\n          toggleClass$1(label, this.config.classNames.hidden, false);\n          toggleClass$1(label, this.config.classNames.tooltip, true);\n        });\n      }\n    },\n    // Set media metadata\n    setMediaMetadata() {\n      try {\n        if ('mediaSession' in navigator) {\n          navigator.mediaSession.metadata = new window.MediaMetadata({\n            title: this.config.mediaMetadata.title,\n            artist: this.config.mediaMetadata.artist,\n            album: this.config.mediaMetadata.album,\n            artwork: this.config.mediaMetadata.artwork\n          });\n        }\n      } catch (_) {\n        // Do nothing\n      }\n    },\n    // Add markers\n    setMarkers() {\n      var _this$config$markers2, _this$config$markers3;\n      if (!this.duration || this.elements.markers) return;\n\n      // Get valid points\n      const points = (_this$config$markers2 = this.config.markers) === null || _this$config$markers2 === void 0 ? void 0 : (_this$config$markers3 = _this$config$markers2.points) === null || _this$config$markers3 === void 0 ? void 0 : _this$config$markers3.filter(({\n        time\n      }) => time > 0 && time < this.duration);\n      if (!(points !== null && points !== void 0 && points.length)) return;\n      const containerFragment = document.createDocumentFragment();\n      const pointsFragment = document.createDocumentFragment();\n      let tipElement = null;\n      const tipVisible = `${this.config.classNames.tooltip}--visible`;\n      const toggleTip = show => toggleClass$1(tipElement, tipVisible, show);\n\n      // Inject markers to progress container\n      points.forEach(point => {\n        const markerElement = createElement('span', {\n          class: this.config.classNames.marker\n        }, '');\n        const left = `${point.time / this.duration * 100}%`;\n        if (tipElement) {\n          // Show on hover\n          markerElement.addEventListener('mouseenter', () => {\n            if (point.label) return;\n            tipElement.style.left = left;\n            tipElement.innerHTML = point.label;\n            toggleTip(true);\n          });\n\n          // Hide on leave\n          markerElement.addEventListener('mouseleave', () => {\n            toggleTip(false);\n          });\n        }\n        markerElement.addEventListener('click', () => {\n          this.currentTime = point.time;\n        });\n        markerElement.style.left = left;\n        pointsFragment.appendChild(markerElement);\n      });\n      containerFragment.appendChild(pointsFragment);\n\n      // Inject a tooltip if needed\n      if (!this.config.tooltips.seek) {\n        tipElement = createElement('span', {\n          class: this.config.classNames.tooltip\n        }, '');\n        containerFragment.appendChild(tipElement);\n      }\n      this.elements.markers = {\n        points: pointsFragment,\n        tip: tipElement\n      };\n      this.elements.progress.appendChild(containerFragment);\n    }\n  };\n\n  // ==========================================================================\n\n  /**\n   * Parse a string to a URL object\n   * @param {String} input - the URL to be parsed\n   * @param {Boolean} safe - failsafe parsing\n   */\n  function parseUrl(input, safe = true) {\n    let url = input;\n    if (safe) {\n      const parser = document.createElement('a');\n      parser.href = url;\n      url = parser.href;\n    }\n    try {\n      return new URL(url);\n    } catch (_) {\n      return null;\n    }\n  }\n\n  // Convert object to URLSearchParams\n  function buildUrlParams(input) {\n    const params = new URLSearchParams();\n    if (is.object(input)) {\n      Object.entries(input).forEach(([key, value]) => {\n        params.set(key, value);\n      });\n    }\n    return params;\n  }\n\n  // ==========================================================================\n  const captions = {\n    // Setup captions\n    setup() {\n      // Requires UI support\n      if (!this.supported.ui) {\n        return;\n      }\n\n      // Only Vimeo and HTML5 video supported at this point\n      if (!this.isVideo || this.isYouTube || this.isHTML5 && !support.textTracks) {\n        // Clear menu and hide\n        if (is.array(this.config.controls) && this.config.controls.includes('settings') && this.config.settings.includes('captions')) {\n          controls.setCaptionsMenu.call(this);\n        }\n        return;\n      }\n\n      // Inject the container\n      if (!is.element(this.elements.captions)) {\n        this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\n        this.elements.captions.setAttribute('dir', 'auto');\n        insertAfter(this.elements.captions, this.elements.wrapper);\n      }\n\n      // Fix IE captions if CORS is used\n      // Fetch captions and inject as blobs instead (data URIs not supported!)\n      if (browser.isIE && window.URL) {\n        const elements = this.media.querySelectorAll('track');\n        Array.from(elements).forEach(track => {\n          const src = track.getAttribute('src');\n          const url = parseUrl(src);\n          if (url !== null && url.hostname !== window.location.href.hostname && ['http:', 'https:'].includes(url.protocol)) {\n            fetch(src, 'blob').then(blob => {\n              track.setAttribute('src', window.URL.createObjectURL(blob));\n            }).catch(() => {\n              removeElement(track);\n            });\n          }\n        });\n      }\n\n      // Get and set initial data\n      // The \"preferred\" options are not realized unless / until the wanted language has a match\n      // * languages: Array of user's browser languages.\n      // * language:  The language preferred by user settings or config\n      // * active:    The state preferred by user settings or config\n      // * toggled:   The real captions state\n\n      const browserLanguages = navigator.languages || [navigator.language || navigator.userLanguage || 'en'];\n      const languages = dedupe(browserLanguages.map(language => language.split('-')[0]));\n      let language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase();\n\n      // Use first browser language when language is 'auto'\n      if (language === 'auto') {\n        [language] = languages;\n      }\n      let active = this.storage.get('captions');\n      if (!is.boolean(active)) {\n        ({\n          active\n        } = this.config.captions);\n      }\n      Object.assign(this.captions, {\n        toggled: false,\n        active,\n        language,\n        languages\n      });\n\n      // Watch changes to textTracks and update captions menu\n      if (this.isHTML5) {\n        const trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\n        on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\n      }\n\n      // Update available languages in list next tick (the event must not be triggered before the listeners)\n      setTimeout(captions.update.bind(this), 0);\n    },\n    // Update available language options in settings based on tracks\n    update() {\n      const tracks = captions.getTracks.call(this, true);\n      // Get the wanted language\n      const {\n        active,\n        language,\n        meta,\n        currentTrackNode\n      } = this.captions;\n      const languageExists = Boolean(tracks.find(track => track.language === language));\n\n      // Handle tracks (add event listener and \"pseudo\"-default)\n      if (this.isHTML5 && this.isVideo) {\n        tracks.filter(track => !meta.get(track)).forEach(track => {\n          this.debug.log('Track added', track);\n\n          // Attempt to store if the original dom element was \"default\"\n          meta.set(track, {\n            default: track.mode === 'showing'\n          });\n\n          // Turn off native caption rendering to avoid double captions\n          // Note: mode='hidden' forces a track to download. To ensure every track\n          // isn't downloaded at once, only 'showing' tracks should be reassigned\n          // eslint-disable-next-line no-param-reassign\n          if (track.mode === 'showing') {\n            // eslint-disable-next-line no-param-reassign\n            track.mode = 'hidden';\n          }\n\n          // Add event listener for cue changes\n          on.call(this, track, 'cuechange', () => captions.updateCues.call(this));\n        });\n      }\n\n      // Update language first time it matches, or if the previous matching track was removed\n      if (languageExists && this.language !== language || !tracks.includes(currentTrackNode)) {\n        captions.setLanguage.call(this, language);\n        captions.toggle.call(this, active && languageExists);\n      }\n\n      // Enable or disable captions based on track length\n      if (this.elements) {\n        toggleClass$1(this.elements.container, this.config.classNames.captions.enabled, !is.empty(tracks));\n      }\n\n      // Update available languages in list\n      if (is.array(this.config.controls) && this.config.controls.includes('settings') && this.config.settings.includes('captions')) {\n        controls.setCaptionsMenu.call(this);\n      }\n    },\n    // Toggle captions display\n    // Used internally for the toggleCaptions method, with the passive option forced to false\n    toggle(input, passive = true) {\n      // If there's no full support\n      if (!this.supported.ui) {\n        return;\n      }\n      const {\n        toggled\n      } = this.captions; // Current state\n      const activeClass = this.config.classNames.captions.active;\n      // Get the next state\n      // If the method is called without parameter, toggle based on current value\n      const active = is.nullOrUndefined(input) ? !toggled : input;\n\n      // Update state and trigger event\n      if (active !== toggled) {\n        // When passive, don't override user preferences\n        if (!passive) {\n          this.captions.active = active;\n          this.storage.set({\n            captions: active\n          });\n        }\n\n        // Force language if the call isn't passive and there is no matching language to toggle to\n        if (!this.language && active && !passive) {\n          const tracks = captions.getTracks.call(this);\n          const track = captions.findTrack.call(this, [this.captions.language, ...this.captions.languages], true);\n\n          // Override user preferences to avoid switching languages if a matching track is added\n          this.captions.language = track.language;\n\n          // Set caption, but don't store in localStorage as user preference\n          captions.set.call(this, tracks.indexOf(track));\n          return;\n        }\n\n        // Toggle button if it's enabled\n        if (this.elements.buttons.captions) {\n          this.elements.buttons.captions.pressed = active;\n        }\n\n        // Add class hook\n        toggleClass$1(this.elements.container, activeClass, active);\n        this.captions.toggled = active;\n\n        // Update settings menu\n        controls.updateSetting.call(this, 'captions');\n\n        // Trigger event (not used internally)\n        triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\n      }\n\n      // Wait for the call stack to clear before setting mode='hidden'\n      // on the active track - forcing the browser to download it\n      setTimeout(() => {\n        if (active && this.captions.toggled) {\n          this.captions.currentTrackNode.mode = 'hidden';\n        }\n      });\n    },\n    // Set captions by track index\n    // Used internally for the currentTrack setter with the passive option forced to false\n    set(index, passive = true) {\n      const tracks = captions.getTracks.call(this);\n\n      // Disable captions if setting to -1\n      if (index === -1) {\n        captions.toggle.call(this, false, passive);\n        return;\n      }\n      if (!is.number(index)) {\n        this.debug.warn('Invalid caption argument', index);\n        return;\n      }\n      if (!(index in tracks)) {\n        this.debug.warn('Track not found', index);\n        return;\n      }\n      if (this.captions.currentTrack !== index) {\n        this.captions.currentTrack = index;\n        const track = tracks[index];\n        const {\n          language\n        } = track || {};\n\n        // Store reference to node for invalidation on remove\n        this.captions.currentTrackNode = track;\n\n        // Update settings menu\n        controls.updateSetting.call(this, 'captions');\n\n        // When passive, don't override user preferences\n        if (!passive) {\n          this.captions.language = language;\n          this.storage.set({\n            language\n          });\n        }\n\n        // Handle Vimeo captions\n        if (this.isVimeo) {\n          this.embed.enableTextTrack(language);\n        }\n\n        // Trigger event\n        triggerEvent.call(this, this.media, 'languagechange');\n      }\n\n      // Show captions\n      captions.toggle.call(this, true, passive);\n      if (this.isHTML5 && this.isVideo) {\n        // If we change the active track while a cue is already displayed we need to update it\n        captions.updateCues.call(this);\n      }\n    },\n    // Set captions by language\n    // Used internally for the language setter with the passive option forced to false\n    setLanguage(input, passive = true) {\n      if (!is.string(input)) {\n        this.debug.warn('Invalid language argument', input);\n        return;\n      }\n      // Normalize\n      const language = input.toLowerCase();\n      this.captions.language = language;\n\n      // Set currentTrack\n      const tracks = captions.getTracks.call(this);\n      const track = captions.findTrack.call(this, [language]);\n      captions.set.call(this, tracks.indexOf(track), passive);\n    },\n    // Get current valid caption tracks\n    // If update is false it will also ignore tracks without metadata\n    // This is used to \"freeze\" the language options when captions.update is false\n    getTracks(update = false) {\n      // Handle media or textTracks missing or null\n      const tracks = Array.from((this.media || {}).textTracks || []);\n      // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\n      // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\n      return tracks.filter(track => !this.isHTML5 || update || this.captions.meta.has(track)).filter(track => ['captions', 'subtitles'].includes(track.kind));\n    },\n    // Match tracks based on languages and get the first\n    findTrack(languages, force = false) {\n      const tracks = captions.getTracks.call(this);\n      const sortIsDefault = track => Number((this.captions.meta.get(track) || {}).default);\n      const sorted = Array.from(tracks).sort((a, b) => sortIsDefault(b) - sortIsDefault(a));\n      let track;\n      languages.every(language => {\n        track = sorted.find(t => t.language === language);\n        return !track; // Break iteration if there is a match\n      });\n\n      // If no match is found but is required, get first\n      return track || (force ? sorted[0] : undefined);\n    },\n    // Get the current track\n    getCurrentTrack() {\n      return captions.getTracks.call(this)[this.currentTrack];\n    },\n    // Get UI label for track\n    getLabel(track) {\n      let currentTrack = track;\n      if (!is.track(currentTrack) && support.textTracks && this.captions.toggled) {\n        currentTrack = captions.getCurrentTrack.call(this);\n      }\n      if (is.track(currentTrack)) {\n        if (!is.empty(currentTrack.label)) {\n          return currentTrack.label;\n        }\n        if (!is.empty(currentTrack.language)) {\n          return track.language.toUpperCase();\n        }\n        return i18n.get('enabled', this.config);\n      }\n      return i18n.get('disabled', this.config);\n    },\n    // Update captions using current track's active cues\n    // Also optional array argument in case there isn't any track (ex: vimeo)\n    updateCues(input) {\n      // Requires UI\n      if (!this.supported.ui) {\n        return;\n      }\n      if (!is.element(this.elements.captions)) {\n        this.debug.warn('No captions element to render to');\n        return;\n      }\n\n      // Only accept array or empty input\n      if (!is.nullOrUndefined(input) && !Array.isArray(input)) {\n        this.debug.warn('updateCues: Invalid input', input);\n        return;\n      }\n      let cues = input;\n\n      // Get cues from track\n      if (!cues) {\n        const track = captions.getCurrentTrack.call(this);\n        cues = Array.from((track || {}).activeCues || []).map(cue => cue.getCueAsHTML()).map(getHTML);\n      }\n\n      // Set new caption text\n      const content = cues.map(cueText => cueText.trim()).join('\\n');\n      const changed = content !== this.elements.captions.innerHTML;\n      if (changed) {\n        // Empty the container and create a new child element\n        emptyElement(this.elements.captions);\n        const caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\n        caption.innerHTML = content;\n        this.elements.captions.appendChild(caption);\n\n        // Trigger event\n        triggerEvent.call(this, this.media, 'cuechange');\n      }\n    }\n  };\n\n  // ==========================================================================\n  // Plyr default config\n  // ==========================================================================\n\n  const defaults = {\n    // Disable\n    enabled: true,\n    // Custom media title\n    title: '',\n    // Logging to console\n    debug: false,\n    // Auto play (if supported)\n    autoplay: false,\n    // Only allow one media playing at once (vimeo only)\n    autopause: true,\n    // Allow inline playback on iOS (this effects YouTube/Vimeo - HTML5 requires the attribute present)\n    // TODO: Remove iosNative fullscreen option in favour of this (logic needs work)\n    playsinline: true,\n    // Default time to skip when rewind/fast forward\n    seekTime: 10,\n    // Default volume\n    volume: 1,\n    muted: false,\n    // Pass a custom duration\n    duration: null,\n    // Display the media duration on load in the current time position\n    // If you have opted to display both duration and currentTime, this is ignored\n    displayDuration: true,\n    // Invert the current time to be a countdown\n    invertTime: true,\n    // Clicking the currentTime inverts it's value to show time left rather than elapsed\n    toggleInvert: true,\n    // Force an aspect ratio\n    // The format must be `'w:h'` (e.g. `'16:9'`)\n    ratio: null,\n    // Click video container to play/pause\n    clickToPlay: true,\n    // Auto hide the controls\n    hideControls: true,\n    // Reset to start when playback ended\n    resetOnEnd: false,\n    // Disable the standard context menu\n    disableContextMenu: true,\n    // Sprite (for icons)\n    loadSprite: true,\n    iconPrefix: 'plyr',\n    iconUrl: 'https://cdn.plyr.io/3.7.3/plyr.svg',\n    // Blank video (used to prevent errors on source change)\n    blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n    // Quality default\n    quality: {\n      default: 576,\n      // The options to display in the UI, if available for the source media\n      options: [4320, 2880, 2160, 1440, 1080, 720, 576, 480, 360, 240],\n      forced: false,\n      onChange: null\n    },\n    // Set loops\n    loop: {\n      active: false\n      // start: null,\n      // end: null,\n    },\n\n    // Speed default and options to display\n    speed: {\n      selected: 1,\n      // The options to display in the UI, if available for the source media (e.g. Vimeo and YouTube only support 0.5x-4x)\n      options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2, 4]\n    },\n    // Keyboard shortcut settings\n    keyboard: {\n      focused: true,\n      global: false\n    },\n    // Display tooltips\n    tooltips: {\n      controls: false,\n      seek: true\n    },\n    // Captions settings\n    captions: {\n      active: false,\n      language: 'auto',\n      // Listen to new tracks added after Plyr is initialized.\n      // This is needed for streaming captions, but may result in unselectable options\n      update: false\n    },\n    // Fullscreen settings\n    fullscreen: {\n      enabled: true,\n      // Allow fullscreen?\n      fallback: true,\n      // Fallback using full viewport/window\n      iosNative: false // Use the native fullscreen in iOS (disables custom controls)\n      // Selector for the fullscreen container so contextual / non-player content can remain visible in fullscreen mode\n      // Non-ancestors of the player element will be ignored\n      // container: null, // defaults to the player element\n    },\n\n    // Local storage\n    storage: {\n      enabled: true,\n      key: 'plyr'\n    },\n    // Default controls\n    controls: ['play-large',\n    // 'restart',\n    // 'rewind',\n    'play',\n    // 'fast-forward',\n    'progress', 'current-time',\n    // 'duration',\n    'mute', 'volume', 'captions', 'settings', 'pip', 'airplay',\n    // 'download',\n    'fullscreen'],\n    settings: ['captions', 'quality', 'speed'],\n    // Localisation\n    i18n: {\n      restart: 'Restart',\n      rewind: 'Rewind {seektime}s',\n      play: 'Play',\n      pause: 'Pause',\n      fastForward: 'Forward {seektime}s',\n      seek: 'Seek',\n      seekLabel: '{currentTime} of {duration}',\n      played: 'Played',\n      buffered: 'Buffered',\n      currentTime: 'Current time',\n      duration: 'Duration',\n      volume: 'Volume',\n      mute: 'Mute',\n      unmute: 'Unmute',\n      enableCaptions: 'Enable captions',\n      disableCaptions: 'Disable captions',\n      download: 'Download',\n      enterFullscreen: 'Enter fullscreen',\n      exitFullscreen: 'Exit fullscreen',\n      frameTitle: 'Player for {title}',\n      captions: 'Captions',\n      settings: 'Settings',\n      pip: 'PIP',\n      menuBack: 'Go back to previous menu',\n      speed: 'Speed',\n      normal: 'Normal',\n      quality: 'Quality',\n      loop: 'Loop',\n      start: 'Start',\n      end: 'End',\n      all: 'All',\n      reset: 'Reset',\n      disabled: 'Disabled',\n      enabled: 'Enabled',\n      advertisement: 'Ad',\n      qualityBadge: {\n        2160: '4K',\n        1440: 'HD',\n        1080: 'HD',\n        720: 'HD',\n        576: 'SD',\n        480: 'SD'\n      }\n    },\n    // URLs\n    urls: {\n      download: null,\n      vimeo: {\n        sdk: 'https://player.vimeo.com/api/player.js',\n        iframe: 'https://player.vimeo.com/video/{0}?{1}',\n        api: 'https://vimeo.com/api/oembed.json?url={0}'\n      },\n      youtube: {\n        sdk: 'https://www.youtube.com/iframe_api',\n        api: 'https://noembed.com/embed?url=https://www.youtube.com/watch?v={0}'\n      },\n      googleIMA: {\n        sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js'\n      }\n    },\n    // Custom control listeners\n    listeners: {\n      seek: null,\n      play: null,\n      pause: null,\n      restart: null,\n      rewind: null,\n      fastForward: null,\n      mute: null,\n      volume: null,\n      captions: null,\n      download: null,\n      fullscreen: null,\n      pip: null,\n      airplay: null,\n      speed: null,\n      quality: null,\n      loop: null,\n      language: null\n    },\n    // Events to watch and bubble\n    events: [\n    // Events to watch on HTML5 media elements and bubble\n    // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n    'ended', 'progress', 'stalled', 'playing', 'waiting', 'canplay', 'canplaythrough', 'loadstart', 'loadeddata', 'loadedmetadata', 'timeupdate', 'volumechange', 'play', 'pause', 'error', 'seeking', 'seeked', 'emptied', 'ratechange', 'cuechange',\n    // Custom events\n    'download', 'enterfullscreen', 'exitfullscreen', 'captionsenabled', 'captionsdisabled', 'languagechange', 'controlshidden', 'controlsshown', 'ready',\n    // YouTube\n    'statechange',\n    // Quality\n    'qualitychange',\n    // Ads\n    'adsloaded', 'adscontentpause', 'adscontentresume', 'adstarted', 'adsmidpoint', 'adscomplete', 'adsallcomplete', 'adsimpression', 'adsclick'],\n    // Selectors\n    // Change these to match your template if using custom HTML\n    selectors: {\n      editable: 'input, textarea, select, [contenteditable]',\n      container: '.plyr',\n      controls: {\n        container: null,\n        wrapper: '.plyr__controls'\n      },\n      labels: '[data-plyr]',\n      buttons: {\n        play: '[data-plyr=\"play\"]',\n        pause: '[data-plyr=\"pause\"]',\n        restart: '[data-plyr=\"restart\"]',\n        rewind: '[data-plyr=\"rewind\"]',\n        fastForward: '[data-plyr=\"fast-forward\"]',\n        mute: '[data-plyr=\"mute\"]',\n        captions: '[data-plyr=\"captions\"]',\n        download: '[data-plyr=\"download\"]',\n        fullscreen: '[data-plyr=\"fullscreen\"]',\n        pip: '[data-plyr=\"pip\"]',\n        airplay: '[data-plyr=\"airplay\"]',\n        settings: '[data-plyr=\"settings\"]',\n        loop: '[data-plyr=\"loop\"]'\n      },\n      inputs: {\n        seek: '[data-plyr=\"seek\"]',\n        volume: '[data-plyr=\"volume\"]',\n        speed: '[data-plyr=\"speed\"]',\n        language: '[data-plyr=\"language\"]',\n        quality: '[data-plyr=\"quality\"]'\n      },\n      display: {\n        currentTime: '.plyr__time--current',\n        duration: '.plyr__time--duration',\n        buffer: '.plyr__progress__buffer',\n        loop: '.plyr__progress__loop',\n        // Used later\n        volume: '.plyr__volume--display'\n      },\n      progress: '.plyr__progress',\n      captions: '.plyr__captions',\n      caption: '.plyr__caption'\n    },\n    // Class hooks added to the player in different states\n    classNames: {\n      type: 'plyr--{0}',\n      provider: 'plyr--{0}',\n      video: 'plyr__video-wrapper',\n      embed: 'plyr__video-embed',\n      videoFixedRatio: 'plyr__video-wrapper--fixed-ratio',\n      embedContainer: 'plyr__video-embed__container',\n      poster: 'plyr__poster',\n      posterEnabled: 'plyr__poster-enabled',\n      ads: 'plyr__ads',\n      control: 'plyr__control',\n      controlPressed: 'plyr__control--pressed',\n      playing: 'plyr--playing',\n      paused: 'plyr--paused',\n      stopped: 'plyr--stopped',\n      loading: 'plyr--loading',\n      hover: 'plyr--hover',\n      tooltip: 'plyr__tooltip',\n      cues: 'plyr__cues',\n      marker: 'plyr__progress__marker',\n      hidden: 'plyr__sr-only',\n      hideControls: 'plyr--hide-controls',\n      isIos: 'plyr--is-ios',\n      isTouch: 'plyr--is-touch',\n      uiSupported: 'plyr--full-ui',\n      noTransition: 'plyr--no-transition',\n      display: {\n        time: 'plyr__time'\n      },\n      menu: {\n        value: 'plyr__menu__value',\n        badge: 'plyr__badge',\n        open: 'plyr--menu-open'\n      },\n      captions: {\n        enabled: 'plyr--captions-enabled',\n        active: 'plyr--captions-active'\n      },\n      fullscreen: {\n        enabled: 'plyr--fullscreen-enabled',\n        fallback: 'plyr--fullscreen-fallback'\n      },\n      pip: {\n        supported: 'plyr--pip-supported',\n        active: 'plyr--pip-active'\n      },\n      airplay: {\n        supported: 'plyr--airplay-supported',\n        active: 'plyr--airplay-active'\n      },\n      tabFocus: 'plyr__tab-focus',\n      previewThumbnails: {\n        // Tooltip thumbs\n        thumbContainer: 'plyr__preview-thumb',\n        thumbContainerShown: 'plyr__preview-thumb--is-shown',\n        imageContainer: 'plyr__preview-thumb__image-container',\n        timeContainer: 'plyr__preview-thumb__time-container',\n        // Scrubbing\n        scrubbingContainer: 'plyr__preview-scrubbing',\n        scrubbingContainerShown: 'plyr__preview-scrubbing--is-shown'\n      }\n    },\n    // Embed attributes\n    attributes: {\n      embed: {\n        provider: 'data-plyr-provider',\n        id: 'data-plyr-embed-id',\n        hash: 'data-plyr-embed-hash'\n      }\n    },\n    // Advertisements plugin\n    // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n    ads: {\n      enabled: false,\n      publisherId: '',\n      tagUrl: ''\n    },\n    // Preview Thumbnails plugin\n    previewThumbnails: {\n      enabled: false,\n      src: ''\n    },\n    // Vimeo plugin\n    vimeo: {\n      byline: false,\n      portrait: false,\n      title: false,\n      speed: true,\n      transparent: false,\n      // Custom settings from Plyr\n      customControls: true,\n      referrerPolicy: null,\n      // https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/referrerPolicy\n      // Whether the owner of the video has a Pro or Business account\n      // (which allows us to properly hide controls without CSS hacks, etc)\n      premium: false\n    },\n    // YouTube plugin\n    youtube: {\n      rel: 0,\n      // No related vids\n      showinfo: 0,\n      // Hide info\n      iv_load_policy: 3,\n      // Hide annotations\n      modestbranding: 1,\n      // Hide logos as much as possible (they still show one in the corner when paused)\n      // Custom settings from Plyr\n      customControls: true,\n      noCookie: false // Whether to use an alternative version of YouTube without cookies\n    },\n\n    // Media Metadata\n    mediaMetadata: {\n      title: '',\n      artist: '',\n      album: '',\n      artwork: []\n    },\n    // Markers\n    markers: {\n      enabled: false,\n      points: []\n    }\n  };\n\n  // ==========================================================================\n  // Plyr states\n  // ==========================================================================\n\n  const pip = {\n    active: 'picture-in-picture',\n    inactive: 'inline'\n  };\n\n  // ==========================================================================\n  // Plyr supported types and providers\n  // ==========================================================================\n\n  const providers = {\n    html5: 'html5',\n    youtube: 'youtube',\n    vimeo: 'vimeo'\n  };\n  const types = {\n    audio: 'audio',\n    video: 'video'\n  };\n\n  /**\n   * Get provider by URL\n   * @param {String} url\n   */\n  function getProviderByUrl(url) {\n    // YouTube\n    if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtube-nocookie\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n      return providers.youtube;\n    }\n\n    // Vimeo\n    if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\n      return providers.vimeo;\n    }\n    return null;\n  }\n\n  // ==========================================================================\n  // Console wrapper\n  // ==========================================================================\n\n  const noop = () => {};\n  class Console {\n    constructor(enabled = false) {\n      this.enabled = window.console && enabled;\n      if (this.enabled) {\n        this.log('Debugging enabled');\n      }\n    }\n    get log() {\n      // eslint-disable-next-line no-console\n      return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n    }\n    get warn() {\n      // eslint-disable-next-line no-console\n      return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n    }\n    get error() {\n      // eslint-disable-next-line no-console\n      return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n    }\n  }\n\n  class Fullscreen {\n    constructor(player) {\n      _defineProperty$1(this, \"onChange\", () => {\n        if (!this.enabled) {\n          return;\n        }\n\n        // Update toggle button\n        const button = this.player.elements.buttons.fullscreen;\n        if (is.element(button)) {\n          button.pressed = this.active;\n        }\n\n        // Always trigger events on the plyr / media element (not a fullscreen container) and let them bubble up\n        const target = this.target === this.player.media ? this.target : this.player.elements.container;\n        // Trigger an event\n        triggerEvent.call(this.player, target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n      });\n      _defineProperty$1(this, \"toggleFallback\", (toggle = false) => {\n        // Store or restore scroll position\n        if (toggle) {\n          this.scrollPosition = {\n            x: window.scrollX || 0,\n            y: window.scrollY || 0\n          };\n        } else {\n          window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n        }\n\n        // Toggle scroll\n        document.body.style.overflow = toggle ? 'hidden' : '';\n\n        // Toggle class hook\n        toggleClass$1(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n\n        // Force full viewport on iPhone X+\n        if (browser.isIos) {\n          let viewport = document.head.querySelector('meta[name=\"viewport\"]');\n          const property = 'viewport-fit=cover';\n\n          // Inject the viewport meta if required\n          if (!viewport) {\n            viewport = document.createElement('meta');\n            viewport.setAttribute('name', 'viewport');\n          }\n\n          // Check if the property already exists\n          const hasProperty = is.string(viewport.content) && viewport.content.includes(property);\n          if (toggle) {\n            this.cleanupViewport = !hasProperty;\n            if (!hasProperty) {\n              viewport.content += `,${property}`;\n            }\n          } else if (this.cleanupViewport) {\n            viewport.content = viewport.content.split(',').filter(part => part.trim() !== property).join(',');\n          }\n        }\n\n        // Toggle button and fire events\n        this.onChange();\n      });\n      _defineProperty$1(this, \"trapFocus\", event => {\n        // Bail if iOS, not active, not the tab key\n        if (browser.isIos || !this.active || event.key !== 'Tab') {\n          return;\n        }\n\n        // Get the current focused element\n        const focused = document.activeElement;\n        const focusable = getElements.call(this.player, 'a[href], button:not(:disabled), input:not(:disabled), [tabindex]');\n        const [first] = focusable;\n        const last = focusable[focusable.length - 1];\n        if (focused === last && !event.shiftKey) {\n          // Move focus to first element that can be tabbed if Shift isn't used\n          first.focus();\n          event.preventDefault();\n        } else if (focused === first && event.shiftKey) {\n          // Move focus to last element that can be tabbed if Shift is used\n          last.focus();\n          event.preventDefault();\n        }\n      });\n      _defineProperty$1(this, \"update\", () => {\n        if (this.enabled) {\n          let mode;\n          if (this.forceFallback) {\n            mode = 'Fallback (forced)';\n          } else if (Fullscreen.native) {\n            mode = 'Native';\n          } else {\n            mode = 'Fallback';\n          }\n          this.player.debug.log(`${mode} fullscreen enabled`);\n        } else {\n          this.player.debug.log('Fullscreen not supported and fallback disabled');\n        }\n\n        // Add styling hook to show button\n        toggleClass$1(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\n      });\n      _defineProperty$1(this, \"enter\", () => {\n        if (!this.enabled) {\n          return;\n        }\n\n        // iOS native fullscreen doesn't need the request step\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n          if (this.player.isVimeo) {\n            this.player.embed.requestFullscreen();\n          } else {\n            this.target.webkitEnterFullscreen();\n          }\n        } else if (!Fullscreen.native || this.forceFallback) {\n          this.toggleFallback(true);\n        } else if (!this.prefix) {\n          this.target.requestFullscreen({\n            navigationUI: 'hide'\n          });\n        } else if (!is.empty(this.prefix)) {\n          this.target[`${this.prefix}Request${this.property}`]();\n        }\n      });\n      _defineProperty$1(this, \"exit\", () => {\n        if (!this.enabled) {\n          return;\n        }\n\n        // iOS native fullscreen\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n          this.target.webkitExitFullscreen();\n          silencePromise(this.player.play());\n        } else if (!Fullscreen.native || this.forceFallback) {\n          this.toggleFallback(false);\n        } else if (!this.prefix) {\n          (document.cancelFullScreen || document.exitFullscreen).call(document);\n        } else if (!is.empty(this.prefix)) {\n          const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n          document[`${this.prefix}${action}${this.property}`]();\n        }\n      });\n      _defineProperty$1(this, \"toggle\", () => {\n        if (!this.active) {\n          this.enter();\n        } else {\n          this.exit();\n        }\n      });\n      // Keep reference to parent\n      this.player = player;\n\n      // Get prefix\n      this.prefix = Fullscreen.prefix;\n      this.property = Fullscreen.property;\n\n      // Scroll position\n      this.scrollPosition = {\n        x: 0,\n        y: 0\n      };\n\n      // Force the use of 'full window/browser' rather than fullscreen\n      this.forceFallback = player.config.fullscreen.fallback === 'force';\n\n      // Get the fullscreen element\n      // Checks container is an ancestor, defaults to null\n      this.player.elements.fullscreen = player.config.fullscreen.container && closest$1(this.player.elements.container, player.config.fullscreen.container);\n\n      // Register event listeners\n      // Handle event (incase user presses escape etc)\n      on.call(this.player, document, this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`, () => {\n        // TODO: Filter for target??\n        this.onChange();\n      });\n\n      // Fullscreen toggle on double click\n      on.call(this.player, this.player.elements.container, 'dblclick', event => {\n        // Ignore double click in controls\n        if (is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\n          return;\n        }\n        this.player.listeners.proxy(event, this.toggle, 'fullscreen');\n      });\n\n      // Tap focus when in fullscreen\n      on.call(this, this.player.elements.container, 'keydown', event => this.trapFocus(event));\n\n      // Update the UI\n      this.update();\n\n      // this.toggle = this.toggle.bind(this);\n    }\n\n    // Determine if native supported\n    static get native() {\n      return !!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled);\n    }\n\n    // If we're actually using native\n    get usingNative() {\n      return Fullscreen.native && !this.forceFallback;\n    }\n\n    // Get the prefix for handlers\n    static get prefix() {\n      // No prefix\n      if (is.function(document.exitFullscreen)) {\n        return '';\n      }\n\n      // Check for fullscreen support by vendor prefix\n      let value = '';\n      const prefixes = ['webkit', 'moz', 'ms'];\n      prefixes.some(pre => {\n        if (is.function(document[`${pre}ExitFullscreen`]) || is.function(document[`${pre}CancelFullScreen`])) {\n          value = pre;\n          return true;\n        }\n        return false;\n      });\n      return value;\n    }\n    static get property() {\n      return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n    }\n\n    // Determine if fullscreen is enabled\n    get enabled() {\n      return (Fullscreen.native || this.player.config.fullscreen.fallback) && this.player.config.fullscreen.enabled && this.player.supported.ui && this.player.isVideo;\n    }\n\n    // Get active state\n    get active() {\n      if (!this.enabled) {\n        return false;\n      }\n\n      // Fallback using classname\n      if (!Fullscreen.native || this.forceFallback) {\n        return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n      }\n      const element = !this.prefix ? this.target.getRootNode().fullscreenElement : this.target.getRootNode()[`${this.prefix}${this.property}Element`];\n      return element && element.shadowRoot ? element === this.target.getRootNode().host : element === this.target;\n    }\n\n    // Get target element\n    get target() {\n      return browser.isIos && this.player.config.fullscreen.iosNative ? this.player.media : this.player.elements.fullscreen || this.player.elements.container;\n    }\n  }\n\n  // ==========================================================================\n  // Load image avoiding xhr/fetch CORS issues\n  // Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\n  // By default it checks if it is at least 1px, but you can add a second argument to change this\n  // ==========================================================================\n\n  function loadImage(src, minWidth = 1) {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      const handler = () => {\n        delete image.onload;\n        delete image.onerror;\n        (image.naturalWidth >= minWidth ? resolve : reject)(image);\n      };\n      Object.assign(image, {\n        onload: handler,\n        onerror: handler,\n        src\n      });\n    });\n  }\n\n  // ==========================================================================\n  const ui = {\n    addStyleHook() {\n      toggleClass$1(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n      toggleClass$1(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n    },\n    // Toggle native HTML5 media controls\n    toggleNativeControls(toggle = false) {\n      if (toggle && this.isHTML5) {\n        this.media.setAttribute('controls', '');\n      } else {\n        this.media.removeAttribute('controls');\n      }\n    },\n    // Setup the UI\n    build() {\n      // Re-attach media element listeners\n      // TODO: Use event bubbling?\n      this.listeners.media();\n\n      // Don't setup interface if no support\n      if (!this.supported.ui) {\n        this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\n\n        // Restore native controls\n        ui.toggleNativeControls.call(this, true);\n\n        // Bail\n        return;\n      }\n\n      // Inject custom controls if not present\n      if (!is.element(this.elements.controls)) {\n        // Inject custom controls\n        controls.inject.call(this);\n\n        // Re-attach control listeners\n        this.listeners.controls();\n      }\n\n      // Remove native controls\n      ui.toggleNativeControls.call(this);\n\n      // Setup captions for HTML5\n      if (this.isHTML5) {\n        captions.setup.call(this);\n      }\n\n      // Reset volume\n      this.volume = null;\n\n      // Reset mute state\n      this.muted = null;\n\n      // Reset loop state\n      this.loop = null;\n\n      // Reset quality setting\n      this.quality = null;\n\n      // Reset speed\n      this.speed = null;\n\n      // Reset volume display\n      controls.updateVolume.call(this);\n\n      // Reset time display\n      controls.timeUpdate.call(this);\n\n      // Reset duration display\n      controls.durationUpdate.call(this);\n\n      // Update the UI\n      ui.checkPlaying.call(this);\n\n      // Check for picture-in-picture support\n      toggleClass$1(this.elements.container, this.config.classNames.pip.supported, support.pip && this.isHTML5 && this.isVideo);\n\n      // Check for airplay support\n      toggleClass$1(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\n\n      // Add iOS class\n      toggleClass$1(this.elements.container, this.config.classNames.isIos, browser.isIos);\n\n      // Add touch class\n      toggleClass$1(this.elements.container, this.config.classNames.isTouch, this.touch);\n\n      // Ready for API calls\n      this.ready = true;\n\n      // Ready event at end of execution stack\n      setTimeout(() => {\n        triggerEvent.call(this, this.media, 'ready');\n      }, 0);\n\n      // Set the title\n      ui.setTitle.call(this);\n\n      // Assure the poster image is set, if the property was added before the element was created\n      if (this.poster) {\n        ui.setPoster.call(this, this.poster, false).catch(() => {});\n      }\n\n      // Manually set the duration if user has overridden it.\n      // The event listeners for it doesn't get called if preload is disabled (#701)\n      if (this.config.duration) {\n        controls.durationUpdate.call(this);\n      }\n\n      // Media metadata\n      if (this.config.mediaMetadata) {\n        controls.setMediaMetadata.call(this);\n      }\n    },\n    // Setup aria attribute for play and iframe title\n    setTitle() {\n      // Find the current text\n      let label = i18n.get('play', this.config);\n\n      // If there's a media title set, use that for the label\n      if (is.string(this.config.title) && !is.empty(this.config.title)) {\n        label += `, ${this.config.title}`;\n      }\n\n      // If there's a play button, set label\n      Array.from(this.elements.buttons.play || []).forEach(button => {\n        button.setAttribute('aria-label', label);\n      });\n\n      // Set iframe title\n      // https://github.com/sampotts/plyr/issues/124\n      if (this.isEmbed) {\n        const iframe = getElement.call(this, 'iframe');\n        if (!is.element(iframe)) {\n          return;\n        }\n\n        // Default to media type\n        const title = !is.empty(this.config.title) ? this.config.title : 'video';\n        const format = i18n.get('frameTitle', this.config);\n        iframe.setAttribute('title', format.replace('{title}', title));\n      }\n    },\n    // Toggle poster\n    togglePoster(enable) {\n      toggleClass$1(this.elements.container, this.config.classNames.posterEnabled, enable);\n    },\n    // Set the poster image (async)\n    // Used internally for the poster setter, with the passive option forced to false\n    setPoster(poster, passive = true) {\n      // Don't override if call is passive\n      if (passive && this.poster) {\n        return Promise.reject(new Error('Poster already set'));\n      }\n\n      // Set property synchronously to respect the call order\n      this.media.setAttribute('data-poster', poster);\n\n      // Show the poster\n      this.elements.poster.removeAttribute('hidden');\n\n      // Wait until ui is ready\n      return ready.call(this)\n      // Load image\n      .then(() => {\n        if (!this.media.dataset.posterLazyload) {\n          loadImage(poster);\n        }\n      }).catch(error => {\n        // Hide poster on error unless it's been set by another call\n        if (poster === this.poster) {\n          ui.togglePoster.call(this, false);\n        }\n        // Rethrow\n        throw error;\n      }).then(() => {\n        // Prevent race conditions\n        if (poster !== this.poster) {\n          throw new Error('setPoster cancelled by later call to setPoster');\n        }\n      }).then(() => {\n        if (this.media.dataset.posterLazyload) {\n          this.elements.poster.classList.add('lazyload');\n          this.elements.poster.dataset.bg = this.media.dataset.posterLazyload;\n          Object.assign(this.elements.poster.style, {\n            // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n            backgroundSize: ''\n          });\n        } else {\n          Object.assign(this.elements.poster.style, {\n            backgroundImage: `url('${poster}')`,\n            // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n            backgroundSize: ''\n          });\n        }\n        ui.togglePoster.call(this, true);\n        return poster;\n      });\n    },\n    // Check playing state\n    checkPlaying(event) {\n      // Class hooks\n      toggleClass$1(this.elements.container, this.config.classNames.playing, this.playing);\n      toggleClass$1(this.elements.container, this.config.classNames.paused, this.paused);\n      toggleClass$1(this.elements.container, this.config.classNames.stopped, this.stopped);\n\n      // Set state\n      Array.from(this.elements.buttons.play || []).forEach(target => {\n        Object.assign(target, {\n          pressed: this.playing\n        });\n        target.setAttribute('aria-label', i18n.get(this.playing ? 'pause' : 'play', this.config));\n      });\n\n      // Only update controls on non timeupdate events\n      if (is.event(event) && event.type === 'timeupdate') {\n        return;\n      }\n\n      // Toggle controls\n      ui.toggleControls.call(this);\n    },\n    // Check if media is loading\n    checkLoading(event) {\n      this.loading = ['stalled', 'waiting'].includes(event.type);\n\n      // Clear timer\n      clearTimeout(this.timers.loading);\n\n      // Timer to prevent flicker when seeking\n      this.timers.loading = setTimeout(() => {\n        // Update progress bar loading class state\n        toggleClass$1(this.elements.container, this.config.classNames.loading, this.loading);\n\n        // Update controls visibility\n        ui.toggleControls.call(this);\n      }, this.loading ? 250 : 0);\n    },\n    // Toggle controls based on state and `force` argument\n    toggleControls(force) {\n      const {\n        controls: controlsElement\n      } = this.elements;\n      if (controlsElement && this.config.hideControls) {\n        // Don't hide controls if a touch-device user recently seeked. (Must be limited to touch devices, or it occasionally prevents desktop controls from hiding.)\n        const recentTouchSeek = this.touch && this.lastSeekTime + 2000 > Date.now();\n\n        // Show controls if force, loading, paused, button interaction, or recent seek, otherwise hide\n        this.toggleControls(Boolean(force || this.loading || this.paused || controlsElement.pressed || controlsElement.hover || recentTouchSeek));\n      }\n    },\n    // Migrate any custom properties from the media to the parent\n    migrateStyles() {\n      // Loop through values (as they are the keys when the object is spread 🤔)\n      Object.values({\n        ...this.media.style\n      })\n      // We're only fussed about Plyr specific properties\n      .filter(key => !is.empty(key) && is.string(key) && key.startsWith('--plyr')).forEach(key => {\n        // Set on the container\n        this.elements.container.style.setProperty(key, this.media.style.getPropertyValue(key));\n\n        // Clean up from media element\n        this.media.style.removeProperty(key);\n      });\n\n      // Remove attribute if empty\n      if (is.empty(this.media.style)) {\n        this.media.removeAttribute('style');\n      }\n    }\n  };\n\n  class Listeners {\n    constructor(_player) {\n      _defineProperty$1(this, \"firstTouch\", () => {\n        const {\n          player\n        } = this;\n        const {\n          elements\n        } = player;\n        player.touch = true;\n\n        // Add touch class\n        toggleClass$1(elements.container, player.config.classNames.isTouch, true);\n      });\n      _defineProperty$1(this, \"setTabFocus\", event => {\n        const {\n          player\n        } = this;\n        const {\n          elements\n        } = player;\n        const {\n          key,\n          type,\n          timeStamp\n        } = event;\n        clearTimeout(this.focusTimer);\n\n        // Ignore any key other than tab\n        if (type === 'keydown' && key !== 'Tab') {\n          return;\n        }\n\n        // Store reference to event timeStamp\n        if (type === 'keydown') {\n          this.lastKeyDown = timeStamp;\n        }\n\n        // Remove current classes\n        const removeCurrent = () => {\n          const className = player.config.classNames.tabFocus;\n          const current = getElements.call(player, `.${className}`);\n          toggleClass$1(current, className, false);\n        };\n\n        // Determine if a key was pressed to trigger this event\n        const wasKeyDown = timeStamp - this.lastKeyDown <= 20;\n\n        // Ignore focus events if a key was pressed prior\n        if (type === 'focus' && !wasKeyDown) {\n          return;\n        }\n\n        // Remove all current\n        removeCurrent();\n\n        // Delay the adding of classname until the focus has changed\n        // This event fires before the focusin event\n        if (type !== 'focusout') {\n          this.focusTimer = setTimeout(() => {\n            const focused = document.activeElement;\n\n            // Ignore if current focus element isn't inside the player\n            if (!elements.container.contains(focused)) {\n              return;\n            }\n            toggleClass$1(document.activeElement, player.config.classNames.tabFocus, true);\n          }, 10);\n        }\n      });\n      _defineProperty$1(this, \"global\", (toggle = true) => {\n        const {\n          player\n        } = this;\n\n        // Keyboard shortcuts\n        if (player.config.keyboard.global) {\n          toggleListener.call(player, window, 'keydown keyup', this.handleKey, toggle, false);\n        }\n\n        // Click anywhere closes menu\n        toggleListener.call(player, document.body, 'click', this.toggleMenu, toggle);\n\n        // Detect touch by events\n        once.call(player, document.body, 'touchstart', this.firstTouch);\n\n        // Tab focus detection\n        toggleListener.call(player, document.body, 'keydown focus blur focusout', this.setTabFocus, toggle, false, true);\n      });\n      _defineProperty$1(this, \"container\", () => {\n        const {\n          player\n        } = this;\n        const {\n          config,\n          elements,\n          timers\n        } = player;\n\n        // Keyboard shortcuts\n        if (!config.keyboard.global && config.keyboard.focused) {\n          on.call(player, elements.container, 'keydown keyup', this.handleKey, false);\n        }\n\n        // Toggle controls on mouse events and entering fullscreen\n        on.call(player, elements.container, 'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen', event => {\n          const {\n            controls: controlsElement\n          } = elements;\n\n          // Remove button states for fullscreen\n          if (controlsElement && event.type === 'enterfullscreen') {\n            controlsElement.pressed = false;\n            controlsElement.hover = false;\n          }\n\n          // Show, then hide after a timeout unless another control event occurs\n          const show = ['touchstart', 'touchmove', 'mousemove'].includes(event.type);\n          let delay = 0;\n          if (show) {\n            ui.toggleControls.call(player, true);\n            // Use longer timeout for touch devices\n            delay = player.touch ? 3000 : 2000;\n          }\n\n          // Clear timer\n          clearTimeout(timers.controls);\n\n          // Set new timer to prevent flicker when seeking\n          timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\n        });\n\n        // Set a gutter for Vimeo\n        const setGutter = () => {\n          if (!player.isVimeo || player.config.vimeo.premium) {\n            return;\n          }\n          const target = elements.wrapper;\n          const {\n            active\n          } = player.fullscreen;\n          const [videoWidth, videoHeight] = getAspectRatio.call(player);\n          const useNativeAspectRatio = supportsCSS(`aspect-ratio: ${videoWidth} / ${videoHeight}`);\n\n          // If not active, remove styles\n          if (!active) {\n            if (useNativeAspectRatio) {\n              target.style.width = null;\n              target.style.height = null;\n            } else {\n              target.style.maxWidth = null;\n              target.style.margin = null;\n            }\n            return;\n          }\n\n          // Determine which dimension will overflow and constrain view\n          const [viewportWidth, viewportHeight] = getViewportSize();\n          const overflow = viewportWidth / viewportHeight > videoWidth / videoHeight;\n          if (useNativeAspectRatio) {\n            target.style.width = overflow ? 'auto' : '100%';\n            target.style.height = overflow ? '100%' : 'auto';\n          } else {\n            target.style.maxWidth = overflow ? `${viewportHeight / videoHeight * videoWidth}px` : null;\n            target.style.margin = overflow ? '0 auto' : null;\n          }\n        };\n\n        // Handle resizing\n        const resized = () => {\n          clearTimeout(timers.resized);\n          timers.resized = setTimeout(setGutter, 50);\n        };\n        on.call(player, elements.container, 'enterfullscreen exitfullscreen', event => {\n          const {\n            target\n          } = player.fullscreen;\n\n          // Ignore events not from target\n          if (target !== elements.container) {\n            return;\n          }\n\n          // If it's not an embed and no ratio specified\n          if (!player.isEmbed && is.empty(player.config.ratio)) {\n            return;\n          }\n\n          // Set Vimeo gutter\n          setGutter();\n\n          // Watch for resizes\n          const method = event.type === 'enterfullscreen' ? on : off;\n          method.call(player, window, 'resize', resized);\n        });\n      });\n      _defineProperty$1(this, \"media\", () => {\n        const {\n          player\n        } = this;\n        const {\n          elements\n        } = player;\n\n        // Time change on media\n        on.call(player, player.media, 'timeupdate seeking seeked', event => controls.timeUpdate.call(player, event));\n\n        // Display duration\n        on.call(player, player.media, 'durationchange loadeddata loadedmetadata', event => controls.durationUpdate.call(player, event));\n\n        // Handle the media finishing\n        on.call(player, player.media, 'ended', () => {\n          // Show poster on end\n          if (player.isHTML5 && player.isVideo && player.config.resetOnEnd) {\n            // Restart\n            player.restart();\n\n            // Call pause otherwise IE11 will start playing the video again\n            player.pause();\n          }\n        });\n\n        // Check for buffer progress\n        on.call(player, player.media, 'progress playing seeking seeked', event => controls.updateProgress.call(player, event));\n\n        // Handle volume changes\n        on.call(player, player.media, 'volumechange', event => controls.updateVolume.call(player, event));\n\n        // Handle play/pause\n        on.call(player, player.media, 'playing play pause ended emptied timeupdate', event => ui.checkPlaying.call(player, event));\n\n        // Loading state\n        on.call(player, player.media, 'waiting canplay seeked playing', event => ui.checkLoading.call(player, event));\n\n        // Click video\n        if (player.supported.ui && player.config.clickToPlay && !player.isAudio) {\n          // Re-fetch the wrapper\n          const wrapper = getElement.call(player, `.${player.config.classNames.video}`);\n\n          // Bail if there's no wrapper (this should never happen)\n          if (!is.element(wrapper)) {\n            return;\n          }\n\n          // On click play, pause or restart\n          on.call(player, elements.container, 'click', event => {\n            const targets = [elements.container, wrapper];\n\n            // Ignore if click if not container or in video wrapper\n            if (!targets.includes(event.target) && !wrapper.contains(event.target)) {\n              return;\n            }\n\n            // Touch devices will just show controls (if hidden)\n            if (player.touch && player.config.hideControls) {\n              return;\n            }\n            if (player.ended) {\n              this.proxy(event, player.restart, 'restart');\n              this.proxy(event, () => {\n                silencePromise(player.play());\n              }, 'play');\n            } else {\n              this.proxy(event, () => {\n                silencePromise(player.togglePlay());\n              }, 'play');\n            }\n          });\n        }\n\n        // Disable right click\n        if (player.supported.ui && player.config.disableContextMenu) {\n          on.call(player, elements.wrapper, 'contextmenu', event => {\n            event.preventDefault();\n          }, false);\n        }\n\n        // Volume change\n        on.call(player, player.media, 'volumechange', () => {\n          // Save to storage\n          player.storage.set({\n            volume: player.volume,\n            muted: player.muted\n          });\n        });\n\n        // Speed change\n        on.call(player, player.media, 'ratechange', () => {\n          // Update UI\n          controls.updateSetting.call(player, 'speed');\n\n          // Save to storage\n          player.storage.set({\n            speed: player.speed\n          });\n        });\n\n        // Quality change\n        on.call(player, player.media, 'qualitychange', event => {\n          // Update UI\n          controls.updateSetting.call(player, 'quality', null, event.detail.quality);\n        });\n\n        // Update download link when ready and if quality changes\n        on.call(player, player.media, 'ready qualitychange', () => {\n          controls.setDownloadUrl.call(player);\n        });\n\n        // Proxy events to container\n        // Bubble up key events for Edge\n        const proxyEvents = player.config.events.concat(['keyup', 'keydown']).join(' ');\n        on.call(player, player.media, proxyEvents, event => {\n          let {\n            detail = {}\n          } = event;\n\n          // Get error details from media\n          if (event.type === 'error') {\n            detail = player.media.error;\n          }\n          triggerEvent.call(player, elements.container, event.type, true, detail);\n        });\n      });\n      _defineProperty$1(this, \"proxy\", (event, defaultHandler, customHandlerKey) => {\n        const {\n          player\n        } = this;\n        const customHandler = player.config.listeners[customHandlerKey];\n        const hasCustomHandler = is.function(customHandler);\n        let returned = true;\n\n        // Execute custom handler\n        if (hasCustomHandler) {\n          returned = customHandler.call(player, event);\n        }\n\n        // Only call default handler if not prevented in custom handler\n        if (returned !== false && is.function(defaultHandler)) {\n          defaultHandler.call(player, event);\n        }\n      });\n      _defineProperty$1(this, \"bind\", (element, type, defaultHandler, customHandlerKey, passive = true) => {\n        const {\n          player\n        } = this;\n        const customHandler = player.config.listeners[customHandlerKey];\n        const hasCustomHandler = is.function(customHandler);\n        on.call(player, element, type, event => this.proxy(event, defaultHandler, customHandlerKey), passive && !hasCustomHandler);\n      });\n      _defineProperty$1(this, \"controls\", () => {\n        const {\n          player\n        } = this;\n        const {\n          elements\n        } = player;\n        // NOTE: Currently only using change to avoid indirect over-eager segment fetch\n        // requests for HTTP Adaptive Streaming cases, since 'change' will only fire\n        // after the thumb is released for an input[type=range] (CJP).\n        const inputEvent = 'change';\n\n        // Play/pause toggle\n        if (elements.buttons.play) {\n          Array.from(elements.buttons.play).forEach(button => {\n            this.bind(button, 'click', () => {\n              silencePromise(player.togglePlay());\n            }, 'play');\n          });\n        }\n\n        // Pause\n        this.bind(elements.buttons.restart, 'click', player.restart, 'restart');\n\n        // Rewind\n        this.bind(elements.buttons.rewind, 'click', () => {\n          // Record seek time so we can prevent hiding controls for a few seconds after rewind\n          player.lastSeekTime = Date.now();\n          player.rewind();\n        }, 'rewind');\n\n        // Rewind\n        this.bind(elements.buttons.fastForward, 'click', () => {\n          // Record seek time so we can prevent hiding controls for a few seconds after fast forward\n          player.lastSeekTime = Date.now();\n          player.forward();\n        }, 'fastForward');\n\n        // Mute toggle\n        this.bind(elements.buttons.mute, 'click', () => {\n          player.muted = !player.muted;\n        }, 'mute');\n\n        // Captions toggle\n        this.bind(elements.buttons.captions, 'click', () => player.toggleCaptions());\n\n        // Download\n        this.bind(elements.buttons.download, 'click', () => {\n          triggerEvent.call(player, player.media, 'download');\n        }, 'download');\n\n        // Fullscreen toggle\n        this.bind(elements.buttons.fullscreen, 'click', () => {\n          player.fullscreen.toggle();\n        }, 'fullscreen');\n\n        // Picture-in-Picture\n        this.bind(elements.buttons.pip, 'click', () => {\n          player.pip = 'toggle';\n        }, 'pip');\n\n        // Airplay\n        this.bind(elements.buttons.airplay, 'click', player.airplay, 'airplay');\n\n        // Settings menu - click toggle\n        this.bind(elements.buttons.settings, 'click', event => {\n          // Prevent the document click listener closing the menu\n          event.stopPropagation();\n          event.preventDefault();\n          controls.toggleMenu.call(player, event);\n        }, null, false); // Can't be passive as we're preventing default\n\n        // Settings menu - keyboard toggle\n        // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n        this.bind(elements.buttons.settings, 'keyup', event => {\n          if (![' ', 'Enter'].includes(event.key)) {\n            return;\n          }\n\n          // Because return triggers a click anyway, all we need to do is set focus\n          if (event.key === 'Enter') {\n            controls.focusFirstMenuItem.call(player, null, true);\n            return;\n          }\n\n          // Prevent scroll\n          event.preventDefault();\n\n          // Prevent playing video (Firefox)\n          event.stopPropagation();\n\n          // Toggle menu\n          controls.toggleMenu.call(player, event);\n        }, null, false // Can't be passive as we're preventing default\n        );\n\n        // Escape closes menu\n        this.bind(elements.settings.menu, 'keydown', event => {\n          if (event.key === 'Escape') {\n            controls.toggleMenu.call(player, event);\n          }\n        });\n\n        // Set range input alternative \"value\", which matches the tooltip time (#954)\n        this.bind(elements.inputs.seek, 'mousedown mousemove', event => {\n          const rect = elements.progress.getBoundingClientRect();\n          const percent = 100 / rect.width * (event.pageX - rect.left);\n          event.currentTarget.setAttribute('seek-value', percent);\n        });\n\n        // Pause while seeking\n        this.bind(elements.inputs.seek, 'mousedown mouseup keydown keyup touchstart touchend', event => {\n          const seek = event.currentTarget;\n          const attribute = 'play-on-seeked';\n          if (is.keyboardEvent(event) && !['ArrowLeft', 'ArrowRight'].includes(event.key)) {\n            return;\n          }\n\n          // Record seek time so we can prevent hiding controls for a few seconds after seek\n          player.lastSeekTime = Date.now();\n\n          // Was playing before?\n          const play = seek.hasAttribute(attribute);\n          // Done seeking\n          const done = ['mouseup', 'touchend', 'keyup'].includes(event.type);\n          // Copy of code from seek input bind\n          let seekTo = seek.getAttribute('seek-value');\n          if (is.empty(seekTo)) {\n            seekTo = seek.value;\n          }\n          seek.removeAttribute('seek-value');\n          player.currentTime = seekTo / seek.max * player.duration;\n\n          // If we're done seeking and it was playing, resume playback\n          if (play && done) {\n            seek.removeAttribute(attribute);\n            silencePromise(player.play());\n          } else if (!done && player.playing) {\n            seek.setAttribute(attribute, '');\n            player.pause();\n          }\n        });\n\n        // Fix range inputs on iOS\n        // Super weird iOS bug where after you interact with an <input type=\"range\">,\n        // it takes over further interactions on the page. This is a hack\n        if (browser.isIos) {\n          const inputs = getElements.call(player, 'input[type=\"range\"]');\n          Array.from(inputs).forEach(input => this.bind(input, inputEvent, event => repaint(event.target)));\n        }\n\n        // Seek\n        this.bind(elements.inputs.seek, inputEvent, event => {\n          const seek = event.currentTarget;\n          // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\n          let seekTo = seek.getAttribute('seek-value');\n          if (is.empty(seekTo)) {\n            seekTo = seek.value;\n          }\n          seek.removeAttribute('seek-value');\n          player.currentTime = seekTo / seek.max * player.duration;\n        }, 'seek');\n\n        // Seek tooltip\n        this.bind(elements.progress, 'mouseenter mouseleave mousemove', event => controls.updateSeekTooltip.call(player, event));\n\n        // Preview thumbnails plugin\n        // TODO: Really need to work on some sort of plug-in wide event bus or pub-sub for this\n        this.bind(elements.progress, 'mousemove touchmove', event => {\n          const {\n            previewThumbnails\n          } = player;\n          if (previewThumbnails && previewThumbnails.loaded) {\n            previewThumbnails.startMove(event);\n          }\n        });\n\n        // Hide thumbnail preview - on mouse click, mouse leave, and video play/seek. All four are required, e.g., for buffering\n        this.bind(elements.progress, 'mouseleave touchend click', () => {\n          const {\n            previewThumbnails\n          } = player;\n          if (previewThumbnails && previewThumbnails.loaded) {\n            previewThumbnails.endMove(false, true);\n          }\n        });\n\n        // Show scrubbing preview\n        this.bind(elements.progress, 'mousedown touchstart', event => {\n          const {\n            previewThumbnails\n          } = player;\n          if (previewThumbnails && previewThumbnails.loaded) {\n            previewThumbnails.startScrubbing(event);\n          }\n        });\n        this.bind(elements.progress, 'mouseup touchend', event => {\n          const {\n            previewThumbnails\n          } = player;\n          if (previewThumbnails && previewThumbnails.loaded) {\n            previewThumbnails.endScrubbing(event);\n          }\n        });\n\n        // Polyfill for lower fill in <input type=\"range\"> for webkit\n        if (browser.isWebkit) {\n          Array.from(getElements.call(player, 'input[type=\"range\"]')).forEach(element => {\n            this.bind(element, 'input', event => controls.updateRangeFill.call(player, event.target));\n          });\n        }\n\n        // Current time invert\n        // Only if one time element is used for both currentTime and duration\n        if (player.config.toggleInvert && !is.element(elements.display.duration)) {\n          this.bind(elements.display.currentTime, 'click', () => {\n            // Do nothing if we're at the start\n            if (player.currentTime === 0) {\n              return;\n            }\n            player.config.invertTime = !player.config.invertTime;\n            controls.timeUpdate.call(player);\n          });\n        }\n\n        // Volume\n        this.bind(elements.inputs.volume, inputEvent, event => {\n          player.volume = event.target.value;\n        }, 'volume');\n\n        // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\n        this.bind(elements.controls, 'mouseenter mouseleave', event => {\n          elements.controls.hover = !player.touch && event.type === 'mouseenter';\n        });\n\n        // Also update controls.hover state for any non-player children of fullscreen element (as above)\n        if (elements.fullscreen) {\n          Array.from(elements.fullscreen.children).filter(c => !c.contains(elements.container)).forEach(child => {\n            this.bind(child, 'mouseenter mouseleave', event => {\n              if (elements.controls) {\n                elements.controls.hover = !player.touch && event.type === 'mouseenter';\n              }\n            });\n          });\n        }\n\n        // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\n        this.bind(elements.controls, 'mousedown mouseup touchstart touchend touchcancel', event => {\n          elements.controls.pressed = ['mousedown', 'touchstart'].includes(event.type);\n        });\n\n        // Show controls when they receive focus (e.g., when using keyboard tab key)\n        this.bind(elements.controls, 'focusin', () => {\n          const {\n            config,\n            timers\n          } = player;\n\n          // Skip transition to prevent focus from scrolling the parent element\n          toggleClass$1(elements.controls, config.classNames.noTransition, true);\n\n          // Toggle\n          ui.toggleControls.call(player, true);\n\n          // Restore transition\n          setTimeout(() => {\n            toggleClass$1(elements.controls, config.classNames.noTransition, false);\n          }, 0);\n\n          // Delay a little more for mouse users\n          const delay = this.touch ? 3000 : 4000;\n\n          // Clear timer\n          clearTimeout(timers.controls);\n\n          // Hide again after delay\n          timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\n        });\n\n        // Mouse wheel for volume\n        this.bind(elements.inputs.volume, 'wheel', event => {\n          // Detect \"natural\" scroll - supported on OS X Safari only\n          // Other browsers on OS X will be inverted until support improves\n          const inverted = event.webkitDirectionInvertedFromDevice;\n          // Get delta from event. Invert if `inverted` is true\n          const [x, y] = [event.deltaX, -event.deltaY].map(value => inverted ? -value : value);\n          // Using the biggest delta, normalize to 1 or -1 (or 0 if no delta)\n          const direction = Math.sign(Math.abs(x) > Math.abs(y) ? x : y);\n\n          // Change the volume by 2%\n          player.increaseVolume(direction / 50);\n\n          // Don't break page scrolling at max and min\n          const {\n            volume\n          } = player.media;\n          if (direction === 1 && volume < 1 || direction === -1 && volume > 0) {\n            event.preventDefault();\n          }\n        }, 'volume', false);\n      });\n      this.player = _player;\n      this.lastKey = null;\n      this.focusTimer = null;\n      this.lastKeyDown = null;\n      this.handleKey = this.handleKey.bind(this);\n      this.toggleMenu = this.toggleMenu.bind(this);\n      this.setTabFocus = this.setTabFocus.bind(this);\n      this.firstTouch = this.firstTouch.bind(this);\n    }\n\n    // Handle key presses\n    handleKey(event) {\n      const {\n        player\n      } = this;\n      const {\n        elements\n      } = player;\n      const {\n        key,\n        type,\n        altKey,\n        ctrlKey,\n        metaKey,\n        shiftKey\n      } = event;\n      const pressed = type === 'keydown';\n      const repeat = pressed && key === this.lastKey;\n\n      // Bail if a modifier key is set\n      if (altKey || ctrlKey || metaKey || shiftKey) {\n        return;\n      }\n\n      // If the event is bubbled from the media element\n      // Firefox doesn't get the key for whatever reason\n      if (!key) {\n        return;\n      }\n\n      // Seek by increment\n      const seekByIncrement = increment => {\n        // Divide the max duration into 10th's and times by the number value\n        player.currentTime = player.duration / 10 * increment;\n      };\n\n      // Handle the key on keydown\n      // Reset on keyup\n      if (pressed) {\n        // Check focused element\n        // and if the focused element is not editable (e.g. text input)\n        // and any that accept key input http://webaim.org/techniques/keyboard/\n        const focused = document.activeElement;\n        if (is.element(focused)) {\n          const {\n            editable\n          } = player.config.selectors;\n          const {\n            seek\n          } = elements.inputs;\n          if (focused !== seek && matches(focused, editable)) {\n            return;\n          }\n          if (event.key === ' ' && matches(focused, 'button, [role^=\"menuitem\"]')) {\n            return;\n          }\n        }\n\n        // Which keys should we prevent default\n        const preventDefault = [' ', 'ArrowLeft', 'ArrowUp', 'ArrowRight', 'ArrowDown', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'c', 'f', 'k', 'l', 'm'];\n\n        // If the key is found prevent default (e.g. prevent scrolling for arrows)\n        if (preventDefault.includes(key)) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        switch (key) {\n          case '0':\n          case '1':\n          case '2':\n          case '3':\n          case '4':\n          case '5':\n          case '6':\n          case '7':\n          case '8':\n          case '9':\n            if (!repeat) {\n              seekByIncrement(parseInt(key, 10));\n            }\n            break;\n          case ' ':\n          case 'k':\n            if (!repeat) {\n              silencePromise(player.togglePlay());\n            }\n            break;\n          case 'ArrowUp':\n            player.increaseVolume(0.1);\n            break;\n          case 'ArrowDown':\n            player.decreaseVolume(0.1);\n            break;\n          case 'm':\n            if (!repeat) {\n              player.muted = !player.muted;\n            }\n            break;\n          case 'ArrowRight':\n            player.forward();\n            break;\n          case 'ArrowLeft':\n            player.rewind();\n            break;\n          case 'f':\n            player.fullscreen.toggle();\n            break;\n          case 'c':\n            if (!repeat) {\n              player.toggleCaptions();\n            }\n            break;\n          case 'l':\n            player.loop = !player.loop;\n            break;\n        }\n\n        // Escape is handle natively when in full screen\n        // So we only need to worry about non native\n        if (key === 'Escape' && !player.fullscreen.usingNative && player.fullscreen.active) {\n          player.fullscreen.toggle();\n        }\n\n        // Store last key for next cycle\n        this.lastKey = key;\n      } else {\n        this.lastKey = null;\n      }\n    }\n\n    // Toggle menu\n    toggleMenu(event) {\n      controls.toggleMenu.call(this.player, event);\n    }\n\n    // Device is touch enabled\n  }\n\n  var loadjs_umd = createCommonjsModule(function (module, exports) {\n    (function (root, factory) {\n      {\n        module.exports = factory();\n      }\n    })(commonjsGlobal, function () {\n      /**\n       * Global dependencies.\n       * @global {Object} document - DOM\n       */\n\n      var devnull = function () {},\n        bundleIdCache = {},\n        bundleResultCache = {},\n        bundleCallbackQueue = {};\n\n      /**\n       * Subscribe to bundle load event.\n       * @param {string[]} bundleIds - Bundle ids\n       * @param {Function} callbackFn - The callback function\n       */\n      function subscribe(bundleIds, callbackFn) {\n        // listify\n        bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n        var depsNotFound = [],\n          i = bundleIds.length,\n          numWaiting = i,\n          fn,\n          bundleId,\n          r,\n          q;\n\n        // define callback function\n        fn = function (bundleId, pathsNotFound) {\n          if (pathsNotFound.length) depsNotFound.push(bundleId);\n          numWaiting--;\n          if (!numWaiting) callbackFn(depsNotFound);\n        };\n\n        // register callback\n        while (i--) {\n          bundleId = bundleIds[i];\n\n          // execute callback if in result cache\n          r = bundleResultCache[bundleId];\n          if (r) {\n            fn(bundleId, r);\n            continue;\n          }\n\n          // add to callback queue\n          q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n          q.push(fn);\n        }\n      }\n\n      /**\n       * Publish bundle load event.\n       * @param {string} bundleId - Bundle id\n       * @param {string[]} pathsNotFound - List of files not found\n       */\n      function publish(bundleId, pathsNotFound) {\n        // exit if id isn't defined\n        if (!bundleId) return;\n        var q = bundleCallbackQueue[bundleId];\n\n        // cache result\n        bundleResultCache[bundleId] = pathsNotFound;\n\n        // exit if queue is empty\n        if (!q) return;\n\n        // empty callback queue\n        while (q.length) {\n          q[0](bundleId, pathsNotFound);\n          q.splice(0, 1);\n        }\n      }\n\n      /**\n       * Execute callbacks.\n       * @param {Object or Function} args - The callback args\n       * @param {string[]} depsNotFound - List of dependencies not found\n       */\n      function executeCallbacks(args, depsNotFound) {\n        // accept function as argument\n        if (args.call) args = {\n          success: args\n        };\n\n        // success and error callbacks\n        if (depsNotFound.length) (args.error || devnull)(depsNotFound);else (args.success || devnull)(args);\n      }\n\n      /**\n       * Load individual file.\n       * @param {string} path - The file path\n       * @param {Function} callbackFn - The callback function\n       */\n      function loadFile(path, callbackFn, args, numTries) {\n        var doc = document,\n          async = args.async,\n          maxTries = (args.numRetries || 0) + 1,\n          beforeCallbackFn = args.before || devnull,\n          pathname = path.replace(/[\\?|#].*$/, ''),\n          pathStripped = path.replace(/^(css|img)!/, ''),\n          isLegacyIECss,\n          e;\n        numTries = numTries || 0;\n        if (/(^css!|\\.css$)/.test(pathname)) {\n          // css\n          e = doc.createElement('link');\n          e.rel = 'stylesheet';\n          e.href = pathStripped;\n\n          // tag IE9+\n          isLegacyIECss = 'hideFocus' in e;\n\n          // use preload in IE Edge (to detect load errors)\n          if (isLegacyIECss && e.relList) {\n            isLegacyIECss = 0;\n            e.rel = 'preload';\n            e.as = 'style';\n          }\n        } else if (/(^img!|\\.(png|gif|jpg|svg|webp)$)/.test(pathname)) {\n          // image\n          e = doc.createElement('img');\n          e.src = pathStripped;\n        } else {\n          // javascript\n          e = doc.createElement('script');\n          e.src = path;\n          e.async = async === undefined ? true : async;\n        }\n        e.onload = e.onerror = e.onbeforeload = function (ev) {\n          var result = ev.type[0];\n\n          // treat empty stylesheets as failures to get around lack of onerror\n          // support in IE9-11\n          if (isLegacyIECss) {\n            try {\n              if (!e.sheet.cssText.length) result = 'e';\n            } catch (x) {\n              // sheets objects created from load errors don't allow access to\n              // `cssText` (unless error is Code:18 SecurityError)\n              if (x.code != 18) result = 'e';\n            }\n          }\n\n          // handle retries in case of load failure\n          if (result == 'e') {\n            // increment counter\n            numTries += 1;\n\n            // exit function and try again\n            if (numTries < maxTries) {\n              return loadFile(path, callbackFn, args, numTries);\n            }\n          } else if (e.rel == 'preload' && e.as == 'style') {\n            // activate preloaded stylesheets\n            return e.rel = 'stylesheet'; // jshint ignore:line\n          }\n\n          // execute callback\n          callbackFn(path, result, ev.defaultPrevented);\n        };\n\n        // add to document (unless callback returns `false`)\n        if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n      }\n\n      /**\n       * Load multiple files.\n       * @param {string[]} paths - The file paths\n       * @param {Function} callbackFn - The callback function\n       */\n      function loadFiles(paths, callbackFn, args) {\n        // listify paths\n        paths = paths.push ? paths : [paths];\n        var numWaiting = paths.length,\n          x = numWaiting,\n          pathsNotFound = [],\n          fn,\n          i;\n\n        // define callback function\n        fn = function (path, result, defaultPrevented) {\n          // handle error\n          if (result == 'e') pathsNotFound.push(path);\n\n          // handle beforeload event. If defaultPrevented then that means the load\n          // will be blocked (ex. Ghostery/ABP on Safari)\n          if (result == 'b') {\n            if (defaultPrevented) pathsNotFound.push(path);else return;\n          }\n          numWaiting--;\n          if (!numWaiting) callbackFn(pathsNotFound);\n        };\n\n        // load scripts\n        for (i = 0; i < x; i++) loadFile(paths[i], fn, args);\n      }\n\n      /**\n       * Initiate script load and register bundle.\n       * @param {(string|string[])} paths - The file paths\n       * @param {(string|Function|Object)} [arg1] - The (1) bundleId or (2) success\n       *   callback or (3) object literal with success/error arguments, numRetries,\n       *   etc.\n       * @param {(Function|Object)} [arg2] - The (1) success callback or (2) object\n       *   literal with success/error arguments, numRetries, etc.\n       */\n      function loadjs(paths, arg1, arg2) {\n        var bundleId, args;\n\n        // bundleId (if string)\n        if (arg1 && arg1.trim) bundleId = arg1;\n\n        // args (default is {})\n        args = (bundleId ? arg2 : arg1) || {};\n\n        // throw error if bundle is already defined\n        if (bundleId) {\n          if (bundleId in bundleIdCache) {\n            throw \"LoadJS\";\n          } else {\n            bundleIdCache[bundleId] = true;\n          }\n        }\n        function loadFn(resolve, reject) {\n          loadFiles(paths, function (pathsNotFound) {\n            // execute callbacks\n            executeCallbacks(args, pathsNotFound);\n\n            // resolve Promise\n            if (resolve) {\n              executeCallbacks({\n                success: resolve,\n                error: reject\n              }, pathsNotFound);\n            }\n\n            // publish bundle load event\n            publish(bundleId, pathsNotFound);\n          }, args);\n        }\n        if (args.returnPromise) return new Promise(loadFn);else loadFn();\n      }\n\n      /**\n       * Execute callbacks when dependencies have been satisfied.\n       * @param {(string|string[])} deps - List of bundle ids\n       * @param {Object} args - success/error arguments\n       */\n      loadjs.ready = function ready(deps, args) {\n        // subscribe to bundle load event\n        subscribe(deps, function (depsNotFound) {\n          // execute callbacks\n          executeCallbacks(args, depsNotFound);\n        });\n        return loadjs;\n      };\n\n      /**\n       * Manually satisfy bundle dependencies.\n       * @param {string} bundleId - The bundle id\n       */\n      loadjs.done = function done(bundleId) {\n        publish(bundleId, []);\n      };\n\n      /**\n       * Reset loadjs dependencies statuses\n       */\n      loadjs.reset = function reset() {\n        bundleIdCache = {};\n        bundleResultCache = {};\n        bundleCallbackQueue = {};\n      };\n\n      /**\n       * Determine if bundle has already been defined\n       * @param String} bundleId - The bundle id\n       */\n      loadjs.isDefined = function isDefined(bundleId) {\n        return bundleId in bundleIdCache;\n      };\n\n      // export\n      return loadjs;\n    });\n  });\n\n  // ==========================================================================\n  function loadScript(url) {\n    return new Promise((resolve, reject) => {\n      loadjs_umd(url, {\n        success: resolve,\n        error: reject\n      });\n    });\n  }\n\n  // ==========================================================================\n\n  // Parse Vimeo ID from URL\n  function parseId$1(url) {\n    if (is.empty(url)) {\n      return null;\n    }\n    if (is.number(Number(url))) {\n      return url;\n    }\n    const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n  }\n\n  // Try to extract a hash for private videos from the URL\n  function parseHash(url) {\n    /* This regex matches a hexadecimal hash if given in any of these forms:\n     *  - [https://player.]vimeo.com/video/{id}/{hash}[?params]\n     *  - [https://player.]vimeo.com/video/{id}?h={hash}[&params]\n     *  - [https://player.]vimeo.com/video/{id}?[params]&h={hash}\n     *  - video/{id}/{hash}\n     * If matched, the hash is available in capture group 4\n     */\n    const regex = /^.*(vimeo.com\\/|video\\/)(\\d+)(\\?.*&*h=|\\/)+([\\d,a-f]+)/;\n    const found = url.match(regex);\n    return found && found.length === 5 ? found[4] : null;\n  }\n\n  // Set playback state and trigger change (only on actual change)\n  function assurePlaybackState$1(play) {\n    if (play && !this.embed.hasPlayed) {\n      this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n      this.media.paused = !play;\n      triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n  }\n  const vimeo = {\n    setup() {\n      const player = this;\n\n      // Add embed class for responsive\n      toggleClass$1(player.elements.wrapper, player.config.classNames.embed, true);\n\n      // Set speed options from config\n      player.options.speed = player.config.speed.options;\n\n      // Set intial ratio\n      setAspectRatio.call(player);\n\n      // Load the SDK if not already\n      if (!is.object(window.Vimeo)) {\n        loadScript(player.config.urls.vimeo.sdk).then(() => {\n          vimeo.ready.call(player);\n        }).catch(error => {\n          player.debug.warn('Vimeo SDK (player.js) failed to load', error);\n        });\n      } else {\n        vimeo.ready.call(player);\n      }\n    },\n    // API Ready\n    ready() {\n      const player = this;\n      const config = player.config.vimeo;\n      const {\n        premium,\n        referrerPolicy,\n        ...frameParams\n      } = config;\n      // Get the source URL or ID\n      let source = player.media.getAttribute('src');\n      let hash = '';\n      // Get from <div> if needed\n      if (is.empty(source)) {\n        source = player.media.getAttribute(player.config.attributes.embed.id);\n        // hash can also be set as attribute on the <div>\n        hash = player.media.getAttribute(player.config.attributes.embed.hash);\n      } else {\n        hash = parseHash(source);\n      }\n      const hashParam = hash ? {\n        h: hash\n      } : {};\n\n      // If the owner has a pro or premium account then we can hide controls etc\n      if (premium) {\n        Object.assign(frameParams, {\n          controls: false,\n          sidedock: false\n        });\n      }\n\n      // Get Vimeo params for the iframe\n      const params = buildUrlParams({\n        loop: player.config.loop.active,\n        autoplay: player.autoplay,\n        muted: player.muted,\n        gesture: 'media',\n        playsinline: !this.config.fullscreen.iosNative,\n        // hash has to be added to iframe-URL\n        ...hashParam,\n        ...frameParams\n      });\n      const id = parseId$1(source);\n      // Build an iframe\n      const iframe = createElement('iframe');\n      const src = format(player.config.urls.vimeo.iframe, id, params);\n      iframe.setAttribute('src', src);\n      iframe.setAttribute('allowfullscreen', '');\n      iframe.setAttribute('allow', ['autoplay', 'fullscreen', 'picture-in-picture', 'encrypted-media', 'accelerometer', 'gyroscope'].join('; '));\n\n      // Set the referrer policy if required\n      if (!is.empty(referrerPolicy)) {\n        iframe.setAttribute('referrerPolicy', referrerPolicy);\n      }\n\n      // Inject the package\n      if (premium || !config.customControls) {\n        iframe.setAttribute('data-poster', player.poster);\n        player.media = replaceElement(iframe, player.media);\n      } else {\n        const wrapper = createElement('div', {\n          class: player.config.classNames.embedContainer,\n          'data-poster': player.poster\n        });\n        wrapper.appendChild(iframe);\n        player.media = replaceElement(wrapper, player.media);\n      }\n\n      // Get poster image\n      if (!config.customControls) {\n        fetch(format(player.config.urls.vimeo.api, src)).then(response => {\n          if (is.empty(response) || !response.thumbnail_url) {\n            return;\n          }\n\n          // Set and show poster\n          ui.setPoster.call(player, response.thumbnail_url).catch(() => {});\n        });\n      }\n\n      // Setup instance\n      // https://github.com/vimeo/player.js\n      player.embed = new window.Vimeo.Player(iframe, {\n        autopause: player.config.autopause,\n        muted: player.muted\n      });\n      player.media.paused = true;\n      player.media.currentTime = 0;\n\n      // Disable native text track rendering\n      if (player.supported.ui) {\n        player.embed.disableTextTrack();\n      }\n\n      // Create a faux HTML5 API using the Vimeo API\n      player.media.play = () => {\n        assurePlaybackState$1.call(player, true);\n        return player.embed.play();\n      };\n      player.media.pause = () => {\n        assurePlaybackState$1.call(player, false);\n        return player.embed.pause();\n      };\n      player.media.stop = () => {\n        player.pause();\n        player.currentTime = 0;\n      };\n\n      // Seeking\n      let {\n        currentTime\n      } = player.media;\n      Object.defineProperty(player.media, 'currentTime', {\n        get() {\n          return currentTime;\n        },\n        set(time) {\n          // Vimeo will automatically play on seek if the video hasn't been played before\n\n          // Get current paused state and volume etc\n          const {\n            embed,\n            media,\n            paused,\n            volume\n          } = player;\n          const restorePause = paused && !embed.hasPlayed;\n\n          // Set seeking state and trigger event\n          media.seeking = true;\n          triggerEvent.call(player, media, 'seeking');\n\n          // If paused, mute until seek is complete\n          Promise.resolve(restorePause && embed.setVolume(0))\n          // Seek\n          .then(() => embed.setCurrentTime(time))\n          // Restore paused\n          .then(() => restorePause && embed.pause())\n          // Restore volume\n          .then(() => restorePause && embed.setVolume(volume)).catch(() => {\n            // Do nothing\n          });\n        }\n      });\n\n      // Playback speed\n      let speed = player.config.speed.selected;\n      Object.defineProperty(player.media, 'playbackRate', {\n        get() {\n          return speed;\n        },\n        set(input) {\n          player.embed.setPlaybackRate(input).then(() => {\n            speed = input;\n            triggerEvent.call(player, player.media, 'ratechange');\n          }).catch(() => {\n            // Cannot set Playback Rate, Video is probably not on Pro account\n            player.options.speed = [1];\n          });\n        }\n      });\n\n      // Volume\n      let {\n        volume\n      } = player.config;\n      Object.defineProperty(player.media, 'volume', {\n        get() {\n          return volume;\n        },\n        set(input) {\n          player.embed.setVolume(input).then(() => {\n            volume = input;\n            triggerEvent.call(player, player.media, 'volumechange');\n          });\n        }\n      });\n\n      // Muted\n      let {\n        muted\n      } = player.config;\n      Object.defineProperty(player.media, 'muted', {\n        get() {\n          return muted;\n        },\n        set(input) {\n          const toggle = is.boolean(input) ? input : false;\n          player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\n            muted = toggle;\n            triggerEvent.call(player, player.media, 'volumechange');\n          });\n        }\n      });\n\n      // Loop\n      let {\n        loop\n      } = player.config;\n      Object.defineProperty(player.media, 'loop', {\n        get() {\n          return loop;\n        },\n        set(input) {\n          const toggle = is.boolean(input) ? input : player.config.loop.active;\n          player.embed.setLoop(toggle).then(() => {\n            loop = toggle;\n          });\n        }\n      });\n\n      // Source\n      let currentSrc;\n      player.embed.getVideoUrl().then(value => {\n        currentSrc = value;\n        controls.setDownloadUrl.call(player);\n      }).catch(error => {\n        this.debug.warn(error);\n      });\n      Object.defineProperty(player.media, 'currentSrc', {\n        get() {\n          return currentSrc;\n        }\n      });\n\n      // Ended\n      Object.defineProperty(player.media, 'ended', {\n        get() {\n          return player.currentTime === player.duration;\n        }\n      });\n\n      // Set aspect ratio based on video size\n      Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then(dimensions => {\n        const [width, height] = dimensions;\n        player.embed.ratio = roundAspectRatio(width, height);\n        setAspectRatio.call(this);\n      });\n\n      // Set autopause\n      player.embed.setAutopause(player.config.autopause).then(state => {\n        player.config.autopause = state;\n      });\n\n      // Get title\n      player.embed.getVideoTitle().then(title => {\n        player.config.title = title;\n        ui.setTitle.call(this);\n      });\n\n      // Get current time\n      player.embed.getCurrentTime().then(value => {\n        currentTime = value;\n        triggerEvent.call(player, player.media, 'timeupdate');\n      });\n\n      // Get duration\n      player.embed.getDuration().then(value => {\n        player.media.duration = value;\n        triggerEvent.call(player, player.media, 'durationchange');\n      });\n\n      // Get captions\n      player.embed.getTextTracks().then(tracks => {\n        player.media.textTracks = tracks;\n        captions.setup.call(player);\n      });\n      player.embed.on('cuechange', ({\n        cues = []\n      }) => {\n        const strippedCues = cues.map(cue => stripHTML(cue.text));\n        captions.updateCues.call(player, strippedCues);\n      });\n      player.embed.on('loaded', () => {\n        // Assure state and events are updated on autoplay\n        player.embed.getPaused().then(paused => {\n          assurePlaybackState$1.call(player, !paused);\n          if (!paused) {\n            triggerEvent.call(player, player.media, 'playing');\n          }\n        });\n        if (is.element(player.embed.element) && player.supported.ui) {\n          const frame = player.embed.element;\n\n          // Fix keyboard focus issues\n          // https://github.com/sampotts/plyr/issues/317\n          frame.setAttribute('tabindex', -1);\n        }\n      });\n      player.embed.on('bufferstart', () => {\n        triggerEvent.call(player, player.media, 'waiting');\n      });\n      player.embed.on('bufferend', () => {\n        triggerEvent.call(player, player.media, 'playing');\n      });\n      player.embed.on('play', () => {\n        assurePlaybackState$1.call(player, true);\n        triggerEvent.call(player, player.media, 'playing');\n      });\n      player.embed.on('pause', () => {\n        assurePlaybackState$1.call(player, false);\n      });\n      player.embed.on('timeupdate', data => {\n        player.media.seeking = false;\n        currentTime = data.seconds;\n        triggerEvent.call(player, player.media, 'timeupdate');\n      });\n      player.embed.on('progress', data => {\n        player.media.buffered = data.percent;\n        triggerEvent.call(player, player.media, 'progress');\n\n        // Check all loaded\n        if (parseInt(data.percent, 10) === 1) {\n          triggerEvent.call(player, player.media, 'canplaythrough');\n        }\n\n        // Get duration as if we do it before load, it gives an incorrect value\n        // https://github.com/sampotts/plyr/issues/891\n        player.embed.getDuration().then(value => {\n          if (value !== player.media.duration) {\n            player.media.duration = value;\n            triggerEvent.call(player, player.media, 'durationchange');\n          }\n        });\n      });\n      player.embed.on('seeked', () => {\n        player.media.seeking = false;\n        triggerEvent.call(player, player.media, 'seeked');\n      });\n      player.embed.on('ended', () => {\n        player.media.paused = true;\n        triggerEvent.call(player, player.media, 'ended');\n      });\n      player.embed.on('error', detail => {\n        player.media.error = detail;\n        triggerEvent.call(player, player.media, 'error');\n      });\n\n      // Rebuild UI\n      if (config.customControls) {\n        setTimeout(() => ui.build.call(player), 0);\n      }\n    }\n  };\n\n  // ==========================================================================\n\n  // Parse YouTube ID from URL\n  function parseId(url) {\n    if (is.empty(url)) {\n      return null;\n    }\n    const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n  }\n\n  // Set playback state and trigger change (only on actual change)\n  function assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n      this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n      this.media.paused = !play;\n      triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n  }\n  function getHost(config) {\n    if (config.noCookie) {\n      return 'https://www.youtube-nocookie.com';\n    }\n    if (window.location.protocol === 'http:') {\n      return 'http://www.youtube.com';\n    }\n\n    // Use YouTube's default\n    return undefined;\n  }\n  const youtube = {\n    setup() {\n      // Add embed class for responsive\n      toggleClass$1(this.elements.wrapper, this.config.classNames.embed, true);\n\n      // Setup API\n      if (is.object(window.YT) && is.function(window.YT.Player)) {\n        youtube.ready.call(this);\n      } else {\n        // Reference current global callback\n        const callback = window.onYouTubeIframeAPIReady;\n\n        // Set callback to process queue\n        window.onYouTubeIframeAPIReady = () => {\n          // Call global callback if set\n          if (is.function(callback)) {\n            callback();\n          }\n          youtube.ready.call(this);\n        };\n\n        // Load the SDK\n        loadScript(this.config.urls.youtube.sdk).catch(error => {\n          this.debug.warn('YouTube API failed to load', error);\n        });\n      }\n    },\n    // Get the media title\n    getTitle(videoId) {\n      const url = format(this.config.urls.youtube.api, videoId);\n      fetch(url).then(data => {\n        if (is.object(data)) {\n          const {\n            title,\n            height,\n            width\n          } = data;\n\n          // Set title\n          this.config.title = title;\n          ui.setTitle.call(this);\n\n          // Set aspect ratio\n          this.embed.ratio = roundAspectRatio(width, height);\n        }\n        setAspectRatio.call(this);\n      }).catch(() => {\n        // Set aspect ratio\n        setAspectRatio.call(this);\n      });\n    },\n    // API ready\n    ready() {\n      const player = this;\n      const config = player.config.youtube;\n      // Ignore already setup (race condition)\n      const currentId = player.media && player.media.getAttribute('id');\n      if (!is.empty(currentId) && currentId.startsWith('youtube-')) {\n        return;\n      }\n\n      // Get the source URL or ID\n      let source = player.media.getAttribute('src');\n\n      // Get from <div> if needed\n      if (is.empty(source)) {\n        source = player.media.getAttribute(this.config.attributes.embed.id);\n      }\n\n      // Replace the <iframe> with a <div> due to YouTube API issues\n      const videoId = parseId(source);\n      const id = generateId(player.provider);\n      // Replace media element\n      const container = createElement('div', {\n        id,\n        'data-poster': config.customControls ? player.poster : undefined\n      });\n      player.media = replaceElement(container, player.media);\n\n      // Only load the poster when using custom controls\n      if (config.customControls) {\n        const posterSrc = s => `https://i.ytimg.com/vi/${videoId}/${s}default.jpg`;\n\n        // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\n        loadImage(posterSrc('maxres'), 121) // Higest quality and unpadded\n        .catch(() => loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\n        .catch(() => loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\n        .then(image => ui.setPoster.call(player, image.src)).then(src => {\n          // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\n          if (!src.includes('maxres')) {\n            player.elements.poster.style.backgroundSize = 'cover';\n          }\n        }).catch(() => {});\n      }\n\n      // Setup instance\n      // https://developers.google.com/youtube/iframe_api_reference\n      player.embed = new window.YT.Player(player.media, {\n        videoId,\n        host: getHost(config),\n        playerVars: extend({}, {\n          // Autoplay\n          autoplay: player.config.autoplay ? 1 : 0,\n          // iframe interface language\n          hl: player.config.hl,\n          // Only show controls if not fully supported or opted out\n          controls: player.supported.ui && config.customControls ? 0 : 1,\n          // Disable keyboard as we handle it\n          disablekb: 1,\n          // Allow iOS inline playback\n          playsinline: !player.config.fullscreen.iosNative ? 1 : 0,\n          // Captions are flaky on YouTube\n          cc_load_policy: player.captions.active ? 1 : 0,\n          cc_lang_pref: player.config.captions.language,\n          // Tracking for stats\n          widget_referrer: window ? window.location.href : null\n        }, config),\n        events: {\n          onError(event) {\n            // YouTube may fire onError twice, so only handle it once\n            if (!player.media.error) {\n              const code = event.data;\n              // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n              const message = {\n                2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\n                5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\n                100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\n                101: 'The owner of the requested video does not allow it to be played in embedded players.',\n                150: 'The owner of the requested video does not allow it to be played in embedded players.'\n              }[code] || 'An unknown error occured';\n              player.media.error = {\n                code,\n                message\n              };\n              triggerEvent.call(player, player.media, 'error');\n            }\n          },\n          onPlaybackRateChange(event) {\n            // Get the instance\n            const instance = event.target;\n\n            // Get current speed\n            player.media.playbackRate = instance.getPlaybackRate();\n            triggerEvent.call(player, player.media, 'ratechange');\n          },\n          onReady(event) {\n            // Bail if onReady has already been called. See issue #1108\n            if (is.function(player.media.play)) {\n              return;\n            }\n            // Get the instance\n            const instance = event.target;\n\n            // Get the title\n            youtube.getTitle.call(player, videoId);\n\n            // Create a faux HTML5 API using the YouTube API\n            player.media.play = () => {\n              assurePlaybackState.call(player, true);\n              instance.playVideo();\n            };\n            player.media.pause = () => {\n              assurePlaybackState.call(player, false);\n              instance.pauseVideo();\n            };\n            player.media.stop = () => {\n              instance.stopVideo();\n            };\n            player.media.duration = instance.getDuration();\n            player.media.paused = true;\n\n            // Seeking\n            player.media.currentTime = 0;\n            Object.defineProperty(player.media, 'currentTime', {\n              get() {\n                return Number(instance.getCurrentTime());\n              },\n              set(time) {\n                // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\n                if (player.paused && !player.embed.hasPlayed) {\n                  player.embed.mute();\n                }\n\n                // Set seeking state and trigger event\n                player.media.seeking = true;\n                triggerEvent.call(player, player.media, 'seeking');\n\n                // Seek after events sent\n                instance.seekTo(time);\n              }\n            });\n\n            // Playback speed\n            Object.defineProperty(player.media, 'playbackRate', {\n              get() {\n                return instance.getPlaybackRate();\n              },\n              set(input) {\n                instance.setPlaybackRate(input);\n              }\n            });\n\n            // Volume\n            let {\n              volume\n            } = player.config;\n            Object.defineProperty(player.media, 'volume', {\n              get() {\n                return volume;\n              },\n              set(input) {\n                volume = input;\n                instance.setVolume(volume * 100);\n                triggerEvent.call(player, player.media, 'volumechange');\n              }\n            });\n\n            // Muted\n            let {\n              muted\n            } = player.config;\n            Object.defineProperty(player.media, 'muted', {\n              get() {\n                return muted;\n              },\n              set(input) {\n                const toggle = is.boolean(input) ? input : muted;\n                muted = toggle;\n                instance[toggle ? 'mute' : 'unMute']();\n                instance.setVolume(volume * 100);\n                triggerEvent.call(player, player.media, 'volumechange');\n              }\n            });\n\n            // Source\n            Object.defineProperty(player.media, 'currentSrc', {\n              get() {\n                return instance.getVideoUrl();\n              }\n            });\n\n            // Ended\n            Object.defineProperty(player.media, 'ended', {\n              get() {\n                return player.currentTime === player.duration;\n              }\n            });\n\n            // Get available speeds\n            const speeds = instance.getAvailablePlaybackRates();\n            // Filter based on config\n            player.options.speed = speeds.filter(s => player.config.speed.options.includes(s));\n\n            // Set the tabindex to avoid focus entering iframe\n            if (player.supported.ui && config.customControls) {\n              player.media.setAttribute('tabindex', -1);\n            }\n            triggerEvent.call(player, player.media, 'timeupdate');\n            triggerEvent.call(player, player.media, 'durationchange');\n\n            // Reset timer\n            clearInterval(player.timers.buffering);\n\n            // Setup buffering\n            player.timers.buffering = setInterval(() => {\n              // Get loaded % from YouTube\n              player.media.buffered = instance.getVideoLoadedFraction();\n\n              // Trigger progress only when we actually buffer something\n              if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n                triggerEvent.call(player, player.media, 'progress');\n              }\n\n              // Set last buffer point\n              player.media.lastBuffered = player.media.buffered;\n\n              // Bail if we're at 100%\n              if (player.media.buffered === 1) {\n                clearInterval(player.timers.buffering);\n\n                // Trigger event\n                triggerEvent.call(player, player.media, 'canplaythrough');\n              }\n            }, 200);\n\n            // Rebuild UI\n            if (config.customControls) {\n              setTimeout(() => ui.build.call(player), 50);\n            }\n          },\n          onStateChange(event) {\n            // Get the instance\n            const instance = event.target;\n\n            // Reset timer\n            clearInterval(player.timers.playing);\n            const seeked = player.media.seeking && [1, 2].includes(event.data);\n            if (seeked) {\n              // Unset seeking and fire seeked event\n              player.media.seeking = false;\n              triggerEvent.call(player, player.media, 'seeked');\n            }\n\n            // Handle events\n            // -1   Unstarted\n            // 0    Ended\n            // 1    Playing\n            // 2    Paused\n            // 3    Buffering\n            // 5    Video cued\n            switch (event.data) {\n              case -1:\n                // Update scrubber\n                triggerEvent.call(player, player.media, 'timeupdate');\n\n                // Get loaded % from YouTube\n                player.media.buffered = instance.getVideoLoadedFraction();\n                triggerEvent.call(player, player.media, 'progress');\n                break;\n              case 0:\n                assurePlaybackState.call(player, false);\n\n                // YouTube doesn't support loop for a single video, so mimick it.\n                if (player.media.loop) {\n                  // YouTube needs a call to `stopVideo` before playing again\n                  instance.stopVideo();\n                  instance.playVideo();\n                } else {\n                  triggerEvent.call(player, player.media, 'ended');\n                }\n                break;\n              case 1:\n                // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\n                if (config.customControls && !player.config.autoplay && player.media.paused && !player.embed.hasPlayed) {\n                  player.media.pause();\n                } else {\n                  assurePlaybackState.call(player, true);\n                  triggerEvent.call(player, player.media, 'playing');\n\n                  // Poll to get playback progress\n                  player.timers.playing = setInterval(() => {\n                    triggerEvent.call(player, player.media, 'timeupdate');\n                  }, 50);\n\n                  // Check duration again due to YouTube bug\n                  // https://github.com/sampotts/plyr/issues/374\n                  // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                  if (player.media.duration !== instance.getDuration()) {\n                    player.media.duration = instance.getDuration();\n                    triggerEvent.call(player, player.media, 'durationchange');\n                  }\n                }\n                break;\n              case 2:\n                // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\n                if (!player.muted) {\n                  player.embed.unMute();\n                }\n                assurePlaybackState.call(player, false);\n                break;\n              case 3:\n                // Trigger waiting event to add loading classes to container as the video buffers.\n                triggerEvent.call(player, player.media, 'waiting');\n                break;\n            }\n            triggerEvent.call(player, player.elements.container, 'statechange', false, {\n              code: event.data\n            });\n          }\n        }\n      });\n    }\n  };\n\n  // ==========================================================================\n  const media = {\n    // Setup media\n    setup() {\n      // If there's no media, bail\n      if (!this.media) {\n        this.debug.warn('No media element found!');\n        return;\n      }\n\n      // Add type class\n      toggleClass$1(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n      // Add provider class\n      toggleClass$1(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n      // Add video class for embeds\n      // This will require changes if audio embeds are added\n      if (this.isEmbed) {\n        toggleClass$1(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n      }\n\n      // Inject the player wrapper\n      if (this.isVideo) {\n        // Create the wrapper div\n        this.elements.wrapper = createElement('div', {\n          class: this.config.classNames.video\n        });\n\n        // Wrap the video in a container\n        wrap(this.media, this.elements.wrapper);\n\n        // Poster image container\n        this.elements.poster = createElement('div', {\n          class: this.config.classNames.poster\n        });\n        this.elements.wrapper.appendChild(this.elements.poster);\n      }\n      if (this.isHTML5) {\n        html5.setup.call(this);\n      } else if (this.isYouTube) {\n        youtube.setup.call(this);\n      } else if (this.isVimeo) {\n        vimeo.setup.call(this);\n      }\n    }\n  };\n\n  const destroy = instance => {\n    // Destroy our adsManager\n    if (instance.manager) {\n      instance.manager.destroy();\n    }\n\n    // Destroy our adsManager\n    if (instance.elements.displayContainer) {\n      instance.elements.displayContainer.destroy();\n    }\n    instance.elements.container.remove();\n  };\n  class Ads {\n    /**\n     * Ads constructor.\n     * @param {Object} player\n     * @return {Ads}\n     */\n    constructor(player) {\n      _defineProperty$1(this, \"load\", () => {\n        if (!this.enabled) {\n          return;\n        }\n\n        // Check if the Google IMA3 SDK is loaded or load it ourselves\n        if (!is.object(window.google) || !is.object(window.google.ima)) {\n          loadScript(this.player.config.urls.googleIMA.sdk).then(() => {\n            this.ready();\n          }).catch(() => {\n            // Script failed to load or is blocked\n            this.trigger('error', new Error('Google IMA SDK failed to load'));\n          });\n        } else {\n          this.ready();\n        }\n      });\n      _defineProperty$1(this, \"ready\", () => {\n        // Double check we're enabled\n        if (!this.enabled) {\n          destroy(this);\n        }\n\n        // Start ticking our safety timer. If the whole advertisement\n        // thing doesn't resolve within our set time; we bail\n        this.startSafetyTimer(12000, 'ready()');\n\n        // Clear the safety timer\n        this.managerPromise.then(() => {\n          this.clearSafetyTimer('onAdsManagerLoaded()');\n        });\n\n        // Set listeners on the Plyr instance\n        this.listeners();\n\n        // Setup the IMA SDK\n        this.setupIMA();\n      });\n      _defineProperty$1(this, \"setupIMA\", () => {\n        // Create the container for our advertisements\n        this.elements.container = createElement('div', {\n          class: this.player.config.classNames.ads\n        });\n        this.player.elements.container.appendChild(this.elements.container);\n\n        // So we can run VPAID2\n        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n        // Set language\n        google.ima.settings.setLocale(this.player.config.ads.language);\n\n        // Set playback for iOS10+\n        google.ima.settings.setDisableCustomPlaybackForIOS10Plus(this.player.config.playsinline);\n\n        // We assume the adContainer is the video container of the plyr element that will house the ads\n        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container, this.player.media);\n\n        // Create ads loader\n        this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n        // Listen and respond to ads loaded and error events\n        this.loader.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, event => this.onAdsManagerLoaded(event), false);\n        this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error), false);\n\n        // Request video ads to be pre-loaded\n        this.requestAds();\n      });\n      _defineProperty$1(this, \"requestAds\", () => {\n        const {\n          container\n        } = this.player.elements;\n        try {\n          // Request video ads\n          const request = new google.ima.AdsRequest();\n          request.adTagUrl = this.tagUrl;\n\n          // Specify the linear and nonlinear slot sizes. This helps the SDK\n          // to select the correct creative if multiple are returned\n          request.linearAdSlotWidth = container.offsetWidth;\n          request.linearAdSlotHeight = container.offsetHeight;\n          request.nonLinearAdSlotWidth = container.offsetWidth;\n          request.nonLinearAdSlotHeight = container.offsetHeight;\n\n          // We only overlay ads as we only support video.\n          request.forceNonLinearFullSlot = false;\n\n          // Mute based on current state\n          request.setAdWillPlayMuted(!this.player.muted);\n          this.loader.requestAds(request);\n        } catch (error) {\n          this.onAdError(error);\n        }\n      });\n      _defineProperty$1(this, \"pollCountdown\", (start = false) => {\n        if (!start) {\n          clearInterval(this.countdownTimer);\n          this.elements.container.removeAttribute('data-badge-text');\n          return;\n        }\n        const update = () => {\n          const time = formatTime(Math.max(this.manager.getRemainingTime(), 0));\n          const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n          this.elements.container.setAttribute('data-badge-text', label);\n        };\n        this.countdownTimer = setInterval(update, 100);\n      });\n      _defineProperty$1(this, \"onAdsManagerLoaded\", event => {\n        // Load could occur after a source change (race condition)\n        if (!this.enabled) {\n          return;\n        }\n\n        // Get the ads manager\n        const settings = new google.ima.AdsRenderingSettings();\n\n        // Tell the SDK to save and restore content video state on our behalf\n        settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n        settings.enablePreloading = true;\n\n        // The SDK is polling currentTime on the contentPlayback. And needs a duration\n        // so it can determine when to start the mid- and post-roll\n        this.manager = event.getAdsManager(this.player, settings);\n\n        // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n        this.cuePoints = this.manager.getCuePoints();\n\n        // Add listeners to the required events\n        // Advertisement error events\n        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error));\n\n        // Advertisement regular events\n        Object.keys(google.ima.AdEvent.Type).forEach(type => {\n          this.manager.addEventListener(google.ima.AdEvent.Type[type], e => this.onAdEvent(e));\n        });\n\n        // Resolve our adsManager\n        this.trigger('loaded');\n      });\n      _defineProperty$1(this, \"addCuePoints\", () => {\n        // Add advertisement cue's within the time line if available\n        if (!is.empty(this.cuePoints)) {\n          this.cuePoints.forEach(cuePoint => {\n            if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n              const seekElement = this.player.elements.progress;\n              if (is.element(seekElement)) {\n                const cuePercentage = 100 / this.player.duration * cuePoint;\n                const cue = createElement('span', {\n                  class: this.player.config.classNames.cues\n                });\n                cue.style.left = `${cuePercentage.toString()}%`;\n                seekElement.appendChild(cue);\n              }\n            }\n          });\n        }\n      });\n      _defineProperty$1(this, \"onAdEvent\", event => {\n        const {\n          container\n        } = this.player.elements;\n        // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n        // don't have ad object associated\n        const ad = event.getAd();\n        const adData = event.getAdData();\n\n        // Proxy event\n        const dispatchEvent = type => {\n          triggerEvent.call(this.player, this.player.media, `ads${type.replace(/_/g, '').toLowerCase()}`);\n        };\n\n        // Bubble the event\n        dispatchEvent(event.type);\n        switch (event.type) {\n          case google.ima.AdEvent.Type.LOADED:\n            // This is the first event sent for an ad - it is possible to determine whether the\n            // ad is a video ad or an overlay\n            this.trigger('loaded');\n\n            // Start countdown\n            this.pollCountdown(true);\n            if (!ad.isLinear()) {\n              // Position AdDisplayContainer correctly for overlay\n              ad.width = container.offsetWidth;\n              ad.height = container.offsetHeight;\n            }\n\n            // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n            // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n\n            break;\n          case google.ima.AdEvent.Type.STARTED:\n            // Set volume to match player\n            this.manager.setVolume(this.player.volume);\n            break;\n          case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n            // All ads for the current videos are done. We can now request new advertisements\n            // in case the video is re-played\n\n            // TODO: Example for what happens when a next video in a playlist would be loaded.\n            // So here we load a new video when all ads are done.\n            // Then we load new ads within a new adsManager. When the video\n            // Is started - after - the ads are loaded, then we get ads.\n            // You can also easily test cancelling and reloading by running\n            // player.ads.cancel() and player.ads.play from the console I guess.\n            // this.player.source = {\n            //     type: 'video',\n            //     title: 'View From A Blue Moon',\n            //     sources: [{\n            //         src:\n            // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n            // 'video/mp4', }], poster:\n            // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n            // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n            // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n            // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n            // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n            // };\n\n            // TODO: So there is still this thing where a video should only be allowed to start\n            // playing when the IMA SDK is ready or has failed\n\n            if (this.player.ended) {\n              this.loadAds();\n            } else {\n              // The SDK won't allow new ads to be called without receiving a contentComplete()\n              this.loader.contentComplete();\n            }\n            break;\n          case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n            // This event indicates the ad has started - the video player can adjust the UI,\n            // for example display a pause button and remaining time. Fired when content should\n            // be paused. This usually happens right before an ad is about to cover the content\n\n            this.pauseContent();\n            break;\n          case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n            // This event indicates the ad has finished - the video player can perform\n            // appropriate UI actions, such as removing the timer for remaining time detection.\n            // Fired when content should be resumed. This usually happens when an ad finishes\n            // or collapses\n\n            this.pollCountdown();\n            this.resumeContent();\n            break;\n          case google.ima.AdEvent.Type.LOG:\n            if (adData.adError) {\n              this.player.debug.warn(`Non-fatal ad error: ${adData.adError.getMessage()}`);\n            }\n            break;\n        }\n      });\n      _defineProperty$1(this, \"onAdError\", event => {\n        this.cancel();\n        this.player.debug.warn('Ads error', event);\n      });\n      _defineProperty$1(this, \"listeners\", () => {\n        const {\n          container\n        } = this.player.elements;\n        let time;\n        this.player.on('canplay', () => {\n          this.addCuePoints();\n        });\n        this.player.on('ended', () => {\n          this.loader.contentComplete();\n        });\n        this.player.on('timeupdate', () => {\n          time = this.player.currentTime;\n        });\n        this.player.on('seeked', () => {\n          const seekedTime = this.player.currentTime;\n          if (is.empty(this.cuePoints)) {\n            return;\n          }\n          this.cuePoints.forEach((cuePoint, index) => {\n            if (time < cuePoint && cuePoint < seekedTime) {\n              this.manager.discardAdBreak();\n              this.cuePoints.splice(index, 1);\n            }\n          });\n        });\n\n        // Listen to the resizing of the window. And resize ad accordingly\n        // TODO: eventually implement ResizeObserver\n        window.addEventListener('resize', () => {\n          if (this.manager) {\n            this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n          }\n        });\n      });\n      _defineProperty$1(this, \"play\", () => {\n        const {\n          container\n        } = this.player.elements;\n        if (!this.managerPromise) {\n          this.resumeContent();\n        }\n\n        // Play the requested advertisement whenever the adsManager is ready\n        this.managerPromise.then(() => {\n          // Set volume to match player\n          this.manager.setVolume(this.player.volume);\n\n          // Initialize the container. Must be done via a user action on mobile devices\n          this.elements.displayContainer.initialize();\n          try {\n            if (!this.initialized) {\n              // Initialize the ads manager. Ad rules playlist will start at this time\n              this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n              // Call play to start showing the ad. Single video and overlay ads will\n              // start at this time; the call will be ignored for ad rules\n              this.manager.start();\n            }\n            this.initialized = true;\n          } catch (adError) {\n            // An error may be thrown if there was a problem with the\n            // VAST response\n            this.onAdError(adError);\n          }\n        }).catch(() => {});\n      });\n      _defineProperty$1(this, \"resumeContent\", () => {\n        // Hide the advertisement container\n        this.elements.container.style.zIndex = '';\n\n        // Ad is stopped\n        this.playing = false;\n\n        // Play video\n        silencePromise(this.player.media.play());\n      });\n      _defineProperty$1(this, \"pauseContent\", () => {\n        // Show the advertisement container\n        this.elements.container.style.zIndex = 3;\n\n        // Ad is playing\n        this.playing = true;\n\n        // Pause our video.\n        this.player.media.pause();\n      });\n      _defineProperty$1(this, \"cancel\", () => {\n        // Pause our video\n        if (this.initialized) {\n          this.resumeContent();\n        }\n\n        // Tell our instance that we're done for now\n        this.trigger('error');\n\n        // Re-create our adsManager\n        this.loadAds();\n      });\n      _defineProperty$1(this, \"loadAds\", () => {\n        // Tell our adsManager to go bye bye\n        this.managerPromise.then(() => {\n          // Destroy our adsManager\n          if (this.manager) {\n            this.manager.destroy();\n          }\n\n          // Re-set our adsManager promises\n          this.managerPromise = new Promise(resolve => {\n            this.on('loaded', resolve);\n            this.player.debug.log(this.manager);\n          });\n          // Now that the manager has been destroyed set it to also be un-initialized\n          this.initialized = false;\n\n          // Now request some new advertisements\n          this.requestAds();\n        }).catch(() => {});\n      });\n      _defineProperty$1(this, \"trigger\", (event, ...args) => {\n        const handlers = this.events[event];\n        if (is.array(handlers)) {\n          handlers.forEach(handler => {\n            if (is.function(handler)) {\n              handler.apply(this, args);\n            }\n          });\n        }\n      });\n      _defineProperty$1(this, \"on\", (event, callback) => {\n        if (!is.array(this.events[event])) {\n          this.events[event] = [];\n        }\n        this.events[event].push(callback);\n        return this;\n      });\n      _defineProperty$1(this, \"startSafetyTimer\", (time, from) => {\n        this.player.debug.log(`Safety timer invoked from: ${from}`);\n        this.safetyTimer = setTimeout(() => {\n          this.cancel();\n          this.clearSafetyTimer('startSafetyTimer()');\n        }, time);\n      });\n      _defineProperty$1(this, \"clearSafetyTimer\", from => {\n        if (!is.nullOrUndefined(this.safetyTimer)) {\n          this.player.debug.log(`Safety timer cleared from: ${from}`);\n          clearTimeout(this.safetyTimer);\n          this.safetyTimer = null;\n        }\n      });\n      this.player = player;\n      this.config = player.config.ads;\n      this.playing = false;\n      this.initialized = false;\n      this.elements = {\n        container: null,\n        displayContainer: null\n      };\n      this.manager = null;\n      this.loader = null;\n      this.cuePoints = null;\n      this.events = {};\n      this.safetyTimer = null;\n      this.countdownTimer = null;\n\n      // Setup a promise to resolve when the IMA manager is ready\n      this.managerPromise = new Promise((resolve, reject) => {\n        // The ad is loaded and ready\n        this.on('loaded', resolve);\n\n        // Ads failed\n        this.on('error', reject);\n      });\n      this.load();\n    }\n    get enabled() {\n      const {\n        config\n      } = this;\n      return this.player.isHTML5 && this.player.isVideo && config.enabled && (!is.empty(config.publisherId) || is.url(config.tagUrl));\n    }\n\n    /**\n     * Load the IMA SDK\n     */\n\n    // Build the tag URL\n    get tagUrl() {\n      const {\n        config\n      } = this;\n      if (is.url(config.tagUrl)) {\n        return config.tagUrl;\n      }\n      const params = {\n        AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n        AV_CHANNELID: '5a0458dc28a06145e4519d21',\n        AV_URL: window.location.hostname,\n        cb: Date.now(),\n        AV_WIDTH: 640,\n        AV_HEIGHT: 480,\n        AV_CDIM2: config.publisherId\n      };\n      const base = 'https://go.aniview.com/api/adserver6/vast/';\n      return `${base}?${buildUrlParams(params)}`;\n    }\n\n    /**\n     * In order for the SDK to display ads for our video, we need to tell it where to put them,\n     * so here we define our ad container. This div is set up to render on top of the video player.\n     * Using the code below, we tell the SDK to render ads within that div. We also provide a\n     * handle to the content video player - the SDK will poll the current time of our player to\n     * properly place mid-rolls. After we create the ad display container, we initialize it. On\n     * mobile devices, this initialization is done as the result of a user action.\n     */\n  }\n\n  /**\n   * Returns a number whose value is limited to the given range.\n   *\n   * Example: limit the output of this computation to between 0 and 255\n   * (x * 255).clamp(0, 255)\n   *\n   * @param {Number} input\n   * @param {Number} min The lower boundary of the output range\n   * @param {Number} max The upper boundary of the output range\n   * @returns A number within the bounds of min and max\n   * @type Number\n   */\n  function clamp(input = 0, min = 0, max = 255) {\n    return Math.min(Math.max(input, min), max);\n  }\n\n  // Arg: vttDataString example: \"WEBVTT\\n\\n1\\n00:00:05.000 --> 00:00:10.000\\n1080p-00001.jpg\"\n  const parseVtt = vttDataString => {\n    const processedList = [];\n    const frames = vttDataString.split(/\\r\\n\\r\\n|\\n\\n|\\r\\r/);\n    frames.forEach(frame => {\n      const result = {};\n      const lines = frame.split(/\\r\\n|\\n|\\r/);\n      lines.forEach(line => {\n        if (!is.number(result.startTime)) {\n          // The line with start and end times on it is the first line of interest\n          const matchTimes = line.match(/([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})( ?--> ?)([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})/); // Note that this currently ignores caption formatting directives that are optionally on the end of this line - fine for non-captions VTT\n\n          if (matchTimes) {\n            result.startTime = Number(matchTimes[1] || 0) * 60 * 60 + Number(matchTimes[2]) * 60 + Number(matchTimes[3]) + Number(`0.${matchTimes[4]}`);\n            result.endTime = Number(matchTimes[6] || 0) * 60 * 60 + Number(matchTimes[7]) * 60 + Number(matchTimes[8]) + Number(`0.${matchTimes[9]}`);\n          }\n        } else if (!is.empty(line.trim()) && is.empty(result.text)) {\n          // If we already have the startTime, then we're definitely up to the text line(s)\n          const lineSplit = line.trim().split('#xywh=');\n          [result.text] = lineSplit;\n\n          // If there's content in lineSplit[1], then we have sprites. If not, then it's just one frame per image\n          if (lineSplit[1]) {\n            [result.x, result.y, result.w, result.h] = lineSplit[1].split(',');\n          }\n        }\n      });\n      if (result.text) {\n        processedList.push(result);\n      }\n    });\n    return processedList;\n  };\n\n  /**\n   * Preview thumbnails for seek hover and scrubbing\n   * Seeking: Hover over the seek bar (desktop only): shows a small preview container above the seek bar\n   * Scrubbing: Click and drag the seek bar (desktop and mobile): shows the preview image over the entire video, as if the video is scrubbing at very high speed\n   *\n   * Notes:\n   * - Thumbs are set via JS settings on Plyr init, not HTML5 'track' property. Using the track property would be a bit gross, because it doesn't support custom 'kinds'. kind=metadata might be used for something else, and we want to allow multiple thumbnails tracks. Tracks must have a unique combination of 'kind' and 'label'. We would have to do something like kind=metadata,label=thumbnails1 / kind=metadata,label=thumbnails2. Square peg, round hole\n   * - VTT info: the image URL is relative to the VTT, not the current document. But if the url starts with a slash, it will naturally be relative to the current domain. https://support.jwplayer.com/articles/how-to-add-preview-thumbnails\n   * - This implementation uses multiple separate img elements. Other implementations use background-image on one element. This would be nice and simple, but Firefox and Safari have flickering issues with replacing backgrounds of larger images. It seems that YouTube perhaps only avoids this because they don't have the option for high-res previews (even the fullscreen ones, when mousedown/seeking). Images appear over the top of each other, and previous ones are discarded once the new ones have been rendered\n   */\n\n  const fitRatio = (ratio, outer) => {\n    const targetRatio = outer.width / outer.height;\n    const result = {};\n    if (ratio > targetRatio) {\n      result.width = outer.width;\n      result.height = 1 / ratio * outer.width;\n    } else {\n      result.height = outer.height;\n      result.width = ratio * outer.height;\n    }\n    return result;\n  };\n  class PreviewThumbnails {\n    /**\n     * PreviewThumbnails constructor.\n     * @param {Plyr} player\n     * @return {PreviewThumbnails}\n     */\n    constructor(player) {\n      _defineProperty$1(this, \"load\", () => {\n        // Toggle the regular seek tooltip\n        if (this.player.elements.display.seekTooltip) {\n          this.player.elements.display.seekTooltip.hidden = this.enabled;\n        }\n        if (!this.enabled) return;\n        this.getThumbnails().then(() => {\n          if (!this.enabled) {\n            return;\n          }\n\n          // Render DOM elements\n          this.render();\n\n          // Check to see if thumb container size was specified manually in CSS\n          this.determineContainerAutoSizing();\n          this.loaded = true;\n        });\n      });\n      _defineProperty$1(this, \"getThumbnails\", () => {\n        return new Promise(resolve => {\n          const {\n            src\n          } = this.player.config.previewThumbnails;\n          if (is.empty(src)) {\n            throw new Error('Missing previewThumbnails.src config attribute');\n          }\n\n          // Resolve promise\n          const sortAndResolve = () => {\n            // Sort smallest to biggest (e.g., [120p, 480p, 1080p])\n            this.thumbnails.sort((x, y) => x.height - y.height);\n            this.player.debug.log('Preview thumbnails', this.thumbnails);\n            resolve();\n          };\n\n          // Via callback()\n          if (is.function(src)) {\n            src(thumbnails => {\n              this.thumbnails = thumbnails;\n              sortAndResolve();\n            });\n          }\n          // VTT urls\n          else {\n            // If string, convert into single-element list\n            const urls = is.string(src) ? [src] : src;\n            // Loop through each src URL. Download and process the VTT file, storing the resulting data in this.thumbnails\n            const promises = urls.map(u => this.getThumbnail(u));\n            // Resolve\n            Promise.all(promises).then(sortAndResolve);\n          }\n        });\n      });\n      _defineProperty$1(this, \"getThumbnail\", url => {\n        return new Promise(resolve => {\n          fetch(url).then(response => {\n            const thumbnail = {\n              frames: parseVtt(response),\n              height: null,\n              urlPrefix: ''\n            };\n\n            // If the URLs don't start with '/', then we need to set their relative path to be the location of the VTT file\n            // If the URLs do start with '/', then they obviously don't need a prefix, so it will remain blank\n            // If the thumbnail URLs start with with none of '/', 'http://' or 'https://', then we need to set their relative path to be the location of the VTT file\n            if (!thumbnail.frames[0].text.startsWith('/') && !thumbnail.frames[0].text.startsWith('http://') && !thumbnail.frames[0].text.startsWith('https://')) {\n              thumbnail.urlPrefix = url.substring(0, url.lastIndexOf('/') + 1);\n            }\n\n            // Download the first frame, so that we can determine/set the height of this thumbnailsDef\n            const tempImage = new Image();\n            tempImage.onload = () => {\n              thumbnail.height = tempImage.naturalHeight;\n              thumbnail.width = tempImage.naturalWidth;\n              this.thumbnails.push(thumbnail);\n              resolve();\n            };\n            tempImage.src = thumbnail.urlPrefix + thumbnail.frames[0].text;\n          });\n        });\n      });\n      _defineProperty$1(this, \"startMove\", event => {\n        if (!this.loaded) return;\n        if (!is.event(event) || !['touchmove', 'mousemove'].includes(event.type)) return;\n\n        // Wait until media has a duration\n        if (!this.player.media.duration) return;\n        if (event.type === 'touchmove') {\n          // Calculate seek hover position as approx video seconds\n          this.seekTime = this.player.media.duration * (this.player.elements.inputs.seek.value / 100);\n        } else {\n          var _this$player$config$m, _this$player$config$m2;\n          // Calculate seek hover position as approx video seconds\n          const clientRect = this.player.elements.progress.getBoundingClientRect();\n          const percentage = 100 / clientRect.width * (event.pageX - clientRect.left);\n          this.seekTime = this.player.media.duration * (percentage / 100);\n          if (this.seekTime < 0) {\n            // The mousemove fires for 10+px out to the left\n            this.seekTime = 0;\n          }\n          if (this.seekTime > this.player.media.duration - 1) {\n            // Took 1 second off the duration for safety, because different players can disagree on the real duration of a video\n            this.seekTime = this.player.media.duration - 1;\n          }\n          this.mousePosX = event.pageX;\n\n          // Set time text inside image container\n          this.elements.thumb.time.innerText = formatTime(this.seekTime);\n\n          // Get marker point for time\n          const point = (_this$player$config$m = this.player.config.markers) === null || _this$player$config$m === void 0 ? void 0 : (_this$player$config$m2 = _this$player$config$m.points) === null || _this$player$config$m2 === void 0 ? void 0 : _this$player$config$m2.find(({\n            time: t\n          }) => t === Math.round(this.seekTime));\n\n          // Append the point label to the tooltip\n          if (point) {\n            // this.elements.thumb.time.innerText.concat('\\n');\n            this.elements.thumb.time.insertAdjacentHTML('afterbegin', `${point.label}<br>`);\n          }\n        }\n\n        // Download and show image\n        this.showImageAtCurrentTime();\n      });\n      _defineProperty$1(this, \"endMove\", () => {\n        this.toggleThumbContainer(false, true);\n      });\n      _defineProperty$1(this, \"startScrubbing\", event => {\n        // Only act on left mouse button (0), or touch device (event.button does not exist or is false)\n        if (is.nullOrUndefined(event.button) || event.button === false || event.button === 0) {\n          this.mouseDown = true;\n\n          // Wait until media has a duration\n          if (this.player.media.duration) {\n            this.toggleScrubbingContainer(true);\n            this.toggleThumbContainer(false, true);\n\n            // Download and show image\n            this.showImageAtCurrentTime();\n          }\n        }\n      });\n      _defineProperty$1(this, \"endScrubbing\", () => {\n        this.mouseDown = false;\n\n        // Hide scrubbing preview. But wait until the video has successfully seeked before hiding the scrubbing preview\n        if (Math.ceil(this.lastTime) === Math.ceil(this.player.media.currentTime)) {\n          // The video was already seeked/loaded at the chosen time - hide immediately\n          this.toggleScrubbingContainer(false);\n        } else {\n          // The video hasn't seeked yet. Wait for that\n          once.call(this.player, this.player.media, 'timeupdate', () => {\n            // Re-check mousedown - we might have already started scrubbing again\n            if (!this.mouseDown) {\n              this.toggleScrubbingContainer(false);\n            }\n          });\n        }\n      });\n      _defineProperty$1(this, \"listeners\", () => {\n        // Hide thumbnail preview - on mouse click, mouse leave (in listeners.js for now), and video play/seek. All four are required, e.g., for buffering\n        this.player.on('play', () => {\n          this.toggleThumbContainer(false, true);\n        });\n        this.player.on('seeked', () => {\n          this.toggleThumbContainer(false);\n        });\n        this.player.on('timeupdate', () => {\n          this.lastTime = this.player.media.currentTime;\n        });\n      });\n      _defineProperty$1(this, \"render\", () => {\n        // Create HTML element: plyr__preview-thumbnail-container\n        this.elements.thumb.container = createElement('div', {\n          class: this.player.config.classNames.previewThumbnails.thumbContainer\n        });\n\n        // Wrapper for the image for styling\n        this.elements.thumb.imageContainer = createElement('div', {\n          class: this.player.config.classNames.previewThumbnails.imageContainer\n        });\n        this.elements.thumb.container.appendChild(this.elements.thumb.imageContainer);\n\n        // Create HTML element, parent+span: time text (e.g., 01:32:00)\n        const timeContainer = createElement('div', {\n          class: this.player.config.classNames.previewThumbnails.timeContainer\n        });\n        this.elements.thumb.time = createElement('span', {}, '00:00');\n        timeContainer.appendChild(this.elements.thumb.time);\n        this.elements.thumb.imageContainer.appendChild(timeContainer);\n\n        // Inject the whole thumb\n        if (is.element(this.player.elements.progress)) {\n          this.player.elements.progress.appendChild(this.elements.thumb.container);\n        }\n\n        // Create HTML element: plyr__preview-scrubbing-container\n        this.elements.scrubbing.container = createElement('div', {\n          class: this.player.config.classNames.previewThumbnails.scrubbingContainer\n        });\n        this.player.elements.wrapper.appendChild(this.elements.scrubbing.container);\n      });\n      _defineProperty$1(this, \"destroy\", () => {\n        if (this.elements.thumb.container) {\n          this.elements.thumb.container.remove();\n        }\n        if (this.elements.scrubbing.container) {\n          this.elements.scrubbing.container.remove();\n        }\n      });\n      _defineProperty$1(this, \"showImageAtCurrentTime\", () => {\n        if (this.mouseDown) {\n          this.setScrubbingContainerSize();\n        } else {\n          this.setThumbContainerSizeAndPos();\n        }\n\n        // Find the desired thumbnail index\n        // TODO: Handle a video longer than the thumbs where thumbNum is null\n        const thumbNum = this.thumbnails[0].frames.findIndex(frame => this.seekTime >= frame.startTime && this.seekTime <= frame.endTime);\n        const hasThumb = thumbNum >= 0;\n        let qualityIndex = 0;\n\n        // Show the thumb container if we're not scrubbing\n        if (!this.mouseDown) {\n          this.toggleThumbContainer(hasThumb);\n        }\n\n        // No matching thumb found\n        if (!hasThumb) {\n          return;\n        }\n\n        // Check to see if we've already downloaded higher quality versions of this image\n        this.thumbnails.forEach((thumbnail, index) => {\n          if (this.loadedImages.includes(thumbnail.frames[thumbNum].text)) {\n            qualityIndex = index;\n          }\n        });\n\n        // Only proceed if either thumb num or thumbfilename has changed\n        if (thumbNum !== this.showingThumb) {\n          this.showingThumb = thumbNum;\n          this.loadImage(qualityIndex);\n        }\n      });\n      _defineProperty$1(this, \"loadImage\", (qualityIndex = 0) => {\n        const thumbNum = this.showingThumb;\n        const thumbnail = this.thumbnails[qualityIndex];\n        const {\n          urlPrefix\n        } = thumbnail;\n        const frame = thumbnail.frames[thumbNum];\n        const thumbFilename = thumbnail.frames[thumbNum].text;\n        const thumbUrl = urlPrefix + thumbFilename;\n        if (!this.currentImageElement || this.currentImageElement.dataset.filename !== thumbFilename) {\n          // If we're already loading a previous image, remove its onload handler - we don't want it to load after this one\n          // Only do this if not using sprites. Without sprites we really want to show as many images as possible, as a best-effort\n          if (this.loadingImage && this.usingSprites) {\n            this.loadingImage.onload = null;\n          }\n\n          // We're building and adding a new image. In other implementations of similar functionality (YouTube), background image\n          // is instead used. But this causes issues with larger images in Firefox and Safari - switching between background\n          // images causes a flicker. Putting a new image over the top does not\n          const previewImage = new Image();\n          previewImage.src = thumbUrl;\n          previewImage.dataset.index = thumbNum;\n          previewImage.dataset.filename = thumbFilename;\n          this.showingThumbFilename = thumbFilename;\n          this.player.debug.log(`Loading image: ${thumbUrl}`);\n\n          // For some reason, passing the named function directly causes it to execute immediately. So I've wrapped it in an anonymous function...\n          previewImage.onload = () => this.showImage(previewImage, frame, qualityIndex, thumbNum, thumbFilename, true);\n          this.loadingImage = previewImage;\n          this.removeOldImages(previewImage);\n        } else {\n          // Update the existing image\n          this.showImage(this.currentImageElement, frame, qualityIndex, thumbNum, thumbFilename, false);\n          this.currentImageElement.dataset.index = thumbNum;\n          this.removeOldImages(this.currentImageElement);\n        }\n      });\n      _defineProperty$1(this, \"showImage\", (previewImage, frame, qualityIndex, thumbNum, thumbFilename, newImage = true) => {\n        this.player.debug.log(`Showing thumb: ${thumbFilename}. num: ${thumbNum}. qual: ${qualityIndex}. newimg: ${newImage}`);\n        this.setImageSizeAndOffset(previewImage, frame);\n        if (newImage) {\n          this.currentImageContainer.appendChild(previewImage);\n          this.currentImageElement = previewImage;\n          if (!this.loadedImages.includes(thumbFilename)) {\n            this.loadedImages.push(thumbFilename);\n          }\n        }\n\n        // Preload images before and after the current one\n        // Show higher quality of the same frame\n        // Each step here has a short time delay, and only continues if still hovering/seeking the same spot. This is to protect slow connections from overloading\n        this.preloadNearby(thumbNum, true).then(this.preloadNearby(thumbNum, false)).then(this.getHigherQuality(qualityIndex, previewImage, frame, thumbFilename));\n      });\n      _defineProperty$1(this, \"removeOldImages\", currentImage => {\n        // Get a list of all images, convert it from a DOM list to an array\n        Array.from(this.currentImageContainer.children).forEach(image => {\n          if (image.tagName.toLowerCase() !== 'img') {\n            return;\n          }\n          const removeDelay = this.usingSprites ? 500 : 1000;\n          if (image.dataset.index !== currentImage.dataset.index && !image.dataset.deleting) {\n            // Wait 200ms, as the new image can take some time to show on certain browsers (even though it was downloaded before showing). This will prevent flicker, and show some generosity towards slower clients\n            // First set attribute 'deleting' to prevent multi-handling of this on repeat firing of this function\n            // eslint-disable-next-line no-param-reassign\n            image.dataset.deleting = true;\n\n            // This has to be set before the timeout - to prevent issues switching between hover and scrub\n            const {\n              currentImageContainer\n            } = this;\n            setTimeout(() => {\n              currentImageContainer.removeChild(image);\n              this.player.debug.log(`Removing thumb: ${image.dataset.filename}`);\n            }, removeDelay);\n          }\n        });\n      });\n      _defineProperty$1(this, \"preloadNearby\", (thumbNum, forward = true) => {\n        return new Promise(resolve => {\n          setTimeout(() => {\n            const oldThumbFilename = this.thumbnails[0].frames[thumbNum].text;\n            if (this.showingThumbFilename === oldThumbFilename) {\n              // Find the nearest thumbs with different filenames. Sometimes it'll be the next index, but in the case of sprites, it might be 100+ away\n              let thumbnailsClone;\n              if (forward) {\n                thumbnailsClone = this.thumbnails[0].frames.slice(thumbNum);\n              } else {\n                thumbnailsClone = this.thumbnails[0].frames.slice(0, thumbNum).reverse();\n              }\n              let foundOne = false;\n              thumbnailsClone.forEach(frame => {\n                const newThumbFilename = frame.text;\n                if (newThumbFilename !== oldThumbFilename) {\n                  // Found one with a different filename. Make sure it hasn't already been loaded on this page visit\n                  if (!this.loadedImages.includes(newThumbFilename)) {\n                    foundOne = true;\n                    this.player.debug.log(`Preloading thumb filename: ${newThumbFilename}`);\n                    const {\n                      urlPrefix\n                    } = this.thumbnails[0];\n                    const thumbURL = urlPrefix + newThumbFilename;\n                    const previewImage = new Image();\n                    previewImage.src = thumbURL;\n                    previewImage.onload = () => {\n                      this.player.debug.log(`Preloaded thumb filename: ${newThumbFilename}`);\n                      if (!this.loadedImages.includes(newThumbFilename)) this.loadedImages.push(newThumbFilename);\n\n                      // We don't resolve until the thumb is loaded\n                      resolve();\n                    };\n                  }\n                }\n              });\n\n              // If there are none to preload then we want to resolve immediately\n              if (!foundOne) {\n                resolve();\n              }\n            }\n          }, 300);\n        });\n      });\n      _defineProperty$1(this, \"getHigherQuality\", (currentQualityIndex, previewImage, frame, thumbFilename) => {\n        if (currentQualityIndex < this.thumbnails.length - 1) {\n          // Only use the higher quality version if it's going to look any better - if the current thumb is of a lower pixel density than the thumbnail container\n          let previewImageHeight = previewImage.naturalHeight;\n          if (this.usingSprites) {\n            previewImageHeight = frame.h;\n          }\n          if (previewImageHeight < this.thumbContainerHeight) {\n            // Recurse back to the loadImage function - show a higher quality one, but only if the viewer is on this frame for a while\n            setTimeout(() => {\n              // Make sure the mouse hasn't already moved on and started hovering at another image\n              if (this.showingThumbFilename === thumbFilename) {\n                this.player.debug.log(`Showing higher quality thumb for: ${thumbFilename}`);\n                this.loadImage(currentQualityIndex + 1);\n              }\n            }, 300);\n          }\n        }\n      });\n      _defineProperty$1(this, \"toggleThumbContainer\", (toggle = false, clearShowing = false) => {\n        const className = this.player.config.classNames.previewThumbnails.thumbContainerShown;\n        this.elements.thumb.container.classList.toggle(className, toggle);\n        if (!toggle && clearShowing) {\n          this.showingThumb = null;\n          this.showingThumbFilename = null;\n        }\n      });\n      _defineProperty$1(this, \"toggleScrubbingContainer\", (toggle = false) => {\n        const className = this.player.config.classNames.previewThumbnails.scrubbingContainerShown;\n        this.elements.scrubbing.container.classList.toggle(className, toggle);\n        if (!toggle) {\n          this.showingThumb = null;\n          this.showingThumbFilename = null;\n        }\n      });\n      _defineProperty$1(this, \"determineContainerAutoSizing\", () => {\n        if (this.elements.thumb.imageContainer.clientHeight > 20 || this.elements.thumb.imageContainer.clientWidth > 20) {\n          // This will prevent auto sizing in this.setThumbContainerSizeAndPos()\n          this.sizeSpecifiedInCSS = true;\n        }\n      });\n      _defineProperty$1(this, \"setThumbContainerSizeAndPos\", () => {\n        const {\n          imageContainer\n        } = this.elements.thumb;\n        if (!this.sizeSpecifiedInCSS) {\n          const thumbWidth = Math.floor(this.thumbContainerHeight * this.thumbAspectRatio);\n          imageContainer.style.height = `${this.thumbContainerHeight}px`;\n          imageContainer.style.width = `${thumbWidth}px`;\n        } else if (imageContainer.clientHeight > 20 && imageContainer.clientWidth < 20) {\n          const thumbWidth = Math.floor(imageContainer.clientHeight * this.thumbAspectRatio);\n          imageContainer.style.width = `${thumbWidth}px`;\n        } else if (imageContainer.clientHeight < 20 && imageContainer.clientWidth > 20) {\n          const thumbHeight = Math.floor(imageContainer.clientWidth / this.thumbAspectRatio);\n          imageContainer.style.height = `${thumbHeight}px`;\n        }\n        this.setThumbContainerPos();\n      });\n      _defineProperty$1(this, \"setThumbContainerPos\", () => {\n        const scrubberRect = this.player.elements.progress.getBoundingClientRect();\n        const containerRect = this.player.elements.container.getBoundingClientRect();\n        const {\n          container\n        } = this.elements.thumb;\n        // Find the lowest and highest desired left-position, so we don't slide out the side of the video container\n        const min = containerRect.left - scrubberRect.left + 10;\n        const max = containerRect.right - scrubberRect.left - container.clientWidth - 10;\n        // Set preview container position to: mousepos, minus seekbar.left, minus half of previewContainer.clientWidth\n        const position = this.mousePosX - scrubberRect.left - container.clientWidth / 2;\n        const clamped = clamp(position, min, max);\n\n        // Move the popover position\n        container.style.left = `${clamped}px`;\n\n        // The arrow can follow the cursor\n        container.style.setProperty('--preview-arrow-offset', `${position - clamped}px`);\n      });\n      _defineProperty$1(this, \"setScrubbingContainerSize\", () => {\n        const {\n          width,\n          height\n        } = fitRatio(this.thumbAspectRatio, {\n          width: this.player.media.clientWidth,\n          height: this.player.media.clientHeight\n        });\n        this.elements.scrubbing.container.style.width = `${width}px`;\n        this.elements.scrubbing.container.style.height = `${height}px`;\n      });\n      _defineProperty$1(this, \"setImageSizeAndOffset\", (previewImage, frame) => {\n        if (!this.usingSprites) return;\n\n        // Find difference between height and preview container height\n        const multiplier = this.thumbContainerHeight / frame.h;\n\n        // eslint-disable-next-line no-param-reassign\n        previewImage.style.height = `${previewImage.naturalHeight * multiplier}px`;\n        // eslint-disable-next-line no-param-reassign\n        previewImage.style.width = `${previewImage.naturalWidth * multiplier}px`;\n        // eslint-disable-next-line no-param-reassign\n        previewImage.style.left = `-${frame.x * multiplier}px`;\n        // eslint-disable-next-line no-param-reassign\n        previewImage.style.top = `-${frame.y * multiplier}px`;\n      });\n      this.player = player;\n      this.thumbnails = [];\n      this.loaded = false;\n      this.lastMouseMoveTime = Date.now();\n      this.mouseDown = false;\n      this.loadedImages = [];\n      this.elements = {\n        thumb: {},\n        scrubbing: {}\n      };\n      this.load();\n    }\n    get enabled() {\n      return this.player.isHTML5 && this.player.isVideo && this.player.config.previewThumbnails.enabled;\n    }\n    get currentImageContainer() {\n      return this.mouseDown ? this.elements.scrubbing.container : this.elements.thumb.imageContainer;\n    }\n    get usingSprites() {\n      return Object.keys(this.thumbnails[0].frames[0]).includes('w');\n    }\n    get thumbAspectRatio() {\n      if (this.usingSprites) {\n        return this.thumbnails[0].frames[0].w / this.thumbnails[0].frames[0].h;\n      }\n      return this.thumbnails[0].width / this.thumbnails[0].height;\n    }\n    get thumbContainerHeight() {\n      if (this.mouseDown) {\n        const {\n          height\n        } = fitRatio(this.thumbAspectRatio, {\n          width: this.player.media.clientWidth,\n          height: this.player.media.clientHeight\n        });\n        return height;\n      }\n\n      // If css is used this needs to return the css height for sprites to work (see setImageSizeAndOffset)\n      if (this.sizeSpecifiedInCSS) {\n        return this.elements.thumb.imageContainer.clientHeight;\n      }\n      return Math.floor(this.player.media.clientWidth / this.thumbAspectRatio / 4);\n    }\n    get currentImageElement() {\n      return this.mouseDown ? this.currentScrubbingImageElement : this.currentThumbnailImageElement;\n    }\n    set currentImageElement(element) {\n      if (this.mouseDown) {\n        this.currentScrubbingImageElement = element;\n      } else {\n        this.currentThumbnailImageElement = element;\n      }\n    }\n  }\n\n  // ==========================================================================\n  const source = {\n    // Add elements to HTML5 media (source, tracks, etc)\n    insertElements(type, attributes) {\n      if (is.string(attributes)) {\n        insertElement(type, this.media, {\n          src: attributes\n        });\n      } else if (is.array(attributes)) {\n        attributes.forEach(attribute => {\n          insertElement(type, this.media, attribute);\n        });\n      }\n    },\n    // Update source\n    // Sources are not checked for support so be careful\n    change(input) {\n      if (!getDeep(input, 'sources.length')) {\n        this.debug.warn('Invalid source format');\n        return;\n      }\n\n      // Cancel current network requests\n      html5.cancelRequests.call(this);\n\n      // Destroy instance and re-setup\n      this.destroy.call(this, () => {\n        // Reset quality options\n        this.options.quality = [];\n\n        // Remove elements\n        removeElement(this.media);\n        this.media = null;\n\n        // Reset class name\n        if (is.element(this.elements.container)) {\n          this.elements.container.removeAttribute('class');\n        }\n\n        // Set the type and provider\n        const {\n          sources,\n          type\n        } = input;\n        const [{\n          provider = providers.html5,\n          src\n        }] = sources;\n        const tagName = provider === 'html5' ? type : 'div';\n        const attributes = provider === 'html5' ? {} : {\n          src\n        };\n        Object.assign(this, {\n          provider,\n          type,\n          // Check for support\n          supported: support.check(type, provider, this.config.playsinline),\n          // Create new element\n          media: createElement(tagName, attributes)\n        });\n\n        // Inject the new element\n        this.elements.container.appendChild(this.media);\n\n        // Autoplay the new source?\n        if (is.boolean(input.autoplay)) {\n          this.config.autoplay = input.autoplay;\n        }\n\n        // Set attributes for audio and video\n        if (this.isHTML5) {\n          if (this.config.crossorigin) {\n            this.media.setAttribute('crossorigin', '');\n          }\n          if (this.config.autoplay) {\n            this.media.setAttribute('autoplay', '');\n          }\n          if (!is.empty(input.poster)) {\n            this.poster = input.poster;\n          }\n          if (this.config.loop.active) {\n            this.media.setAttribute('loop', '');\n          }\n          if (this.config.muted) {\n            this.media.setAttribute('muted', '');\n          }\n          if (this.config.playsinline) {\n            this.media.setAttribute('playsinline', '');\n          }\n        }\n\n        // Restore class hook\n        ui.addStyleHook.call(this);\n\n        // Set new sources for html5\n        if (this.isHTML5) {\n          source.insertElements.call(this, 'source', sources);\n        }\n\n        // Set video title\n        this.config.title = input.title;\n\n        // Set up from scratch\n        media.setup.call(this);\n\n        // HTML5 stuff\n        if (this.isHTML5) {\n          // Setup captions\n          if (Object.keys(input).includes('tracks')) {\n            source.insertElements.call(this, 'track', input.tracks);\n          }\n        }\n\n        // If HTML5 or embed but not fully supported, setupInterface and call ready now\n        if (this.isHTML5 || this.isEmbed && !this.supported.ui) {\n          // Setup interface\n          ui.build.call(this);\n        }\n\n        // Load HTML5 sources\n        if (this.isHTML5) {\n          this.media.load();\n        }\n\n        // Update previewThumbnails config & reload plugin\n        if (!is.empty(input.previewThumbnails)) {\n          Object.assign(this.config.previewThumbnails, input.previewThumbnails);\n\n          // Cleanup previewThumbnails plugin if it was loaded\n          if (this.previewThumbnails && this.previewThumbnails.loaded) {\n            this.previewThumbnails.destroy();\n            this.previewThumbnails = null;\n          }\n\n          // Create new instance if it is still enabled\n          if (this.config.previewThumbnails.enabled) {\n            this.previewThumbnails = new PreviewThumbnails(this);\n          }\n        }\n\n        // Update the fullscreen support\n        this.fullscreen.update();\n      }, true);\n    }\n  };\n\n  // Private properties\n  // TODO: Use a WeakMap for private globals\n  // const globals = new WeakMap();\n\n  // Plyr instance\n  class Plyr {\n    constructor(target, options) {\n      _defineProperty$1(this, \"play\", () => {\n        if (!is.function(this.media.play)) {\n          return null;\n        }\n\n        // Intecept play with ads\n        if (this.ads && this.ads.enabled) {\n          this.ads.managerPromise.then(() => this.ads.play()).catch(() => silencePromise(this.media.play()));\n        }\n\n        // Return the promise (for HTML5)\n        return this.media.play();\n      });\n      _defineProperty$1(this, \"pause\", () => {\n        if (!this.playing || !is.function(this.media.pause)) {\n          return null;\n        }\n        return this.media.pause();\n      });\n      _defineProperty$1(this, \"togglePlay\", input => {\n        // Toggle based on current state if nothing passed\n        const toggle = is.boolean(input) ? input : !this.playing;\n        if (toggle) {\n          return this.play();\n        }\n        return this.pause();\n      });\n      _defineProperty$1(this, \"stop\", () => {\n        if (this.isHTML5) {\n          this.pause();\n          this.restart();\n        } else if (is.function(this.media.stop)) {\n          this.media.stop();\n        }\n      });\n      _defineProperty$1(this, \"restart\", () => {\n        this.currentTime = 0;\n      });\n      _defineProperty$1(this, \"rewind\", seekTime => {\n        this.currentTime -= is.number(seekTime) ? seekTime : this.config.seekTime;\n      });\n      _defineProperty$1(this, \"forward\", seekTime => {\n        this.currentTime += is.number(seekTime) ? seekTime : this.config.seekTime;\n      });\n      _defineProperty$1(this, \"increaseVolume\", step => {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume + (is.number(step) ? step : 0);\n      });\n      _defineProperty$1(this, \"decreaseVolume\", step => {\n        this.increaseVolume(-step);\n      });\n      _defineProperty$1(this, \"airplay\", () => {\n        // Show dialog if supported\n        if (support.airplay) {\n          this.media.webkitShowPlaybackTargetPicker();\n        }\n      });\n      _defineProperty$1(this, \"toggleControls\", toggle => {\n        // Don't toggle if missing UI support or if it's audio\n        if (this.supported.ui && !this.isAudio) {\n          // Get state before change\n          const isHidden = hasClass(this.elements.container, this.config.classNames.hideControls);\n          // Negate the argument if not undefined since adding the class to hides the controls\n          const force = typeof toggle === 'undefined' ? undefined : !toggle;\n          // Apply and get updated state\n          const hiding = toggleClass$1(this.elements.container, this.config.classNames.hideControls, force);\n\n          // Close menu\n          if (hiding && is.array(this.config.controls) && this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n            controls.toggleMenu.call(this, false);\n          }\n\n          // Trigger event on change\n          if (hiding !== isHidden) {\n            const eventName = hiding ? 'controlshidden' : 'controlsshown';\n            triggerEvent.call(this, this.media, eventName);\n          }\n          return !hiding;\n        }\n        return false;\n      });\n      _defineProperty$1(this, \"on\", (event, callback) => {\n        on.call(this, this.elements.container, event, callback);\n      });\n      _defineProperty$1(this, \"once\", (event, callback) => {\n        once.call(this, this.elements.container, event, callback);\n      });\n      _defineProperty$1(this, \"off\", (event, callback) => {\n        off(this.elements.container, event, callback);\n      });\n      _defineProperty$1(this, \"destroy\", (callback, soft = false) => {\n        if (!this.ready) {\n          return;\n        }\n        const done = () => {\n          // Reset overflow (incase destroyed while in fullscreen)\n          document.body.style.overflow = '';\n\n          // GC for embed\n          this.embed = null;\n\n          // If it's a soft destroy, make minimal changes\n          if (soft) {\n            if (Object.keys(this.elements).length) {\n              // Remove elements\n              removeElement(this.elements.buttons.play);\n              removeElement(this.elements.captions);\n              removeElement(this.elements.controls);\n              removeElement(this.elements.wrapper);\n\n              // Clear for GC\n              this.elements.buttons.play = null;\n              this.elements.captions = null;\n              this.elements.controls = null;\n              this.elements.wrapper = null;\n            }\n\n            // Callback\n            if (is.function(callback)) {\n              callback();\n            }\n          } else {\n            // Unbind listeners\n            unbindListeners.call(this);\n\n            // Cancel current network requests\n            html5.cancelRequests.call(this);\n\n            // Replace the container with the original element provided\n            replaceElement(this.elements.original, this.elements.container);\n\n            // Event\n            triggerEvent.call(this, this.elements.original, 'destroyed', true);\n\n            // Callback\n            if (is.function(callback)) {\n              callback.call(this.elements.original);\n            }\n\n            // Reset state\n            this.ready = false;\n\n            // Clear for garbage collection\n            setTimeout(() => {\n              this.elements = null;\n              this.media = null;\n            }, 200);\n          }\n        };\n\n        // Stop playback\n        this.stop();\n\n        // Clear timeouts\n        clearTimeout(this.timers.loading);\n        clearTimeout(this.timers.controls);\n        clearTimeout(this.timers.resized);\n\n        // Provider specific stuff\n        if (this.isHTML5) {\n          // Restore native video controls\n          ui.toggleNativeControls.call(this, true);\n\n          // Clean up\n          done();\n        } else if (this.isYouTube) {\n          // Clear timers\n          clearInterval(this.timers.buffering);\n          clearInterval(this.timers.playing);\n\n          // Destroy YouTube API\n          if (this.embed !== null && is.function(this.embed.destroy)) {\n            this.embed.destroy();\n          }\n\n          // Clean up\n          done();\n        } else if (this.isVimeo) {\n          // Destroy Vimeo API\n          // then clean up (wait, to prevent postmessage errors)\n          if (this.embed !== null) {\n            this.embed.unload().then(done);\n          }\n\n          // Vimeo does not always return\n          setTimeout(done, 200);\n        }\n      });\n      _defineProperty$1(this, \"supports\", type => support.mime.call(this, type));\n      this.timers = {};\n\n      // State\n      this.ready = false;\n      this.loading = false;\n      this.failed = false;\n\n      // Touch device\n      this.touch = support.touch;\n\n      // Set the media element\n      this.media = target;\n\n      // String selector passed\n      if (is.string(this.media)) {\n        this.media = document.querySelectorAll(this.media);\n      }\n\n      // jQuery, NodeList or Array passed, use first element\n      if (window.jQuery && this.media instanceof jQuery || is.nodeList(this.media) || is.array(this.media)) {\n        // eslint-disable-next-line\n        this.media = this.media[0];\n      }\n\n      // Set config\n      this.config = extend({}, defaults, Plyr.defaults, options || {}, (() => {\n        try {\n          return JSON.parse(this.media.getAttribute('data-plyr-config'));\n        } catch (_) {\n          return {};\n        }\n      })());\n\n      // Elements cache\n      this.elements = {\n        container: null,\n        fullscreen: null,\n        captions: null,\n        buttons: {},\n        display: {},\n        progress: {},\n        inputs: {},\n        settings: {\n          popup: null,\n          menu: null,\n          panels: {},\n          buttons: {}\n        }\n      };\n\n      // Captions\n      this.captions = {\n        active: null,\n        currentTrack: -1,\n        meta: new WeakMap()\n      };\n\n      // Fullscreen\n      this.fullscreen = {\n        active: false\n      };\n\n      // Options\n      this.options = {\n        speed: [],\n        quality: []\n      };\n\n      // Debugging\n      // TODO: move to globals\n      this.debug = new Console(this.config.debug);\n\n      // Log config options and support\n      this.debug.log('Config', this.config);\n      this.debug.log('Support', support);\n\n      // We need an element to setup\n      if (is.nullOrUndefined(this.media) || !is.element(this.media)) {\n        this.debug.error('Setup failed: no suitable element passed');\n        return;\n      }\n\n      // Bail if the element is initialized\n      if (this.media.plyr) {\n        this.debug.warn('Target already setup');\n        return;\n      }\n\n      // Bail if not enabled\n      if (!this.config.enabled) {\n        this.debug.error('Setup failed: disabled by config');\n        return;\n      }\n\n      // Bail if disabled or no basic support\n      // You may want to disable certain UAs etc\n      if (!support.check().api) {\n        this.debug.error('Setup failed: no support');\n        return;\n      }\n\n      // Cache original element state for .destroy()\n      const clone = this.media.cloneNode(true);\n      clone.autoplay = false;\n      this.elements.original = clone;\n\n      // Set media type based on tag or data attribute\n      // Supported: video, audio, vimeo, youtube\n      const _type = this.media.tagName.toLowerCase();\n      // Embed properties\n      let iframe = null;\n      let url = null;\n\n      // Different setup based on type\n      switch (_type) {\n        case 'div':\n          // Find the frame\n          iframe = this.media.querySelector('iframe');\n\n          // <iframe> type\n          if (is.element(iframe)) {\n            // Detect provider\n            url = parseUrl(iframe.getAttribute('src'));\n            this.provider = getProviderByUrl(url.toString());\n\n            // Rework elements\n            this.elements.container = this.media;\n            this.media = iframe;\n\n            // Reset classname\n            this.elements.container.className = '';\n\n            // Get attributes from URL and set config\n            if (url.search.length) {\n              const truthy = ['1', 'true'];\n              if (truthy.includes(url.searchParams.get('autoplay'))) {\n                this.config.autoplay = true;\n              }\n              if (truthy.includes(url.searchParams.get('loop'))) {\n                this.config.loop.active = true;\n              }\n\n              // TODO: replace fullscreen.iosNative with this playsinline config option\n              // YouTube requires the playsinline in the URL\n              if (this.isYouTube) {\n                this.config.playsinline = truthy.includes(url.searchParams.get('playsinline'));\n                this.config.youtube.hl = url.searchParams.get('hl'); // TODO: Should this be setting language?\n              } else {\n                this.config.playsinline = true;\n              }\n            }\n          } else {\n            // <div> with attributes\n            this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\n\n            // Remove attribute\n            this.media.removeAttribute(this.config.attributes.embed.provider);\n          }\n\n          // Unsupported or missing provider\n          if (is.empty(this.provider) || !Object.values(providers).includes(this.provider)) {\n            this.debug.error('Setup failed: Invalid provider');\n            return;\n          }\n\n          // Audio will come later for external providers\n          this.type = types.video;\n          break;\n        case 'video':\n        case 'audio':\n          this.type = _type;\n          this.provider = providers.html5;\n\n          // Get config from attributes\n          if (this.media.hasAttribute('crossorigin')) {\n            this.config.crossorigin = true;\n          }\n          if (this.media.hasAttribute('autoplay')) {\n            this.config.autoplay = true;\n          }\n          if (this.media.hasAttribute('playsinline') || this.media.hasAttribute('webkit-playsinline')) {\n            this.config.playsinline = true;\n          }\n          if (this.media.hasAttribute('muted')) {\n            this.config.muted = true;\n          }\n          if (this.media.hasAttribute('loop')) {\n            this.config.loop.active = true;\n          }\n          break;\n        default:\n          this.debug.error('Setup failed: unsupported type');\n          return;\n      }\n\n      // Check for support again but with type\n      this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n      // If no support for even API, bail\n      if (!this.supported.api) {\n        this.debug.error('Setup failed: no support');\n        return;\n      }\n      this.eventListeners = [];\n\n      // Create listeners\n      this.listeners = new Listeners(this);\n\n      // Setup local storage for user settings\n      this.storage = new Storage(this);\n\n      // Store reference\n      this.media.plyr = this;\n\n      // Wrap media\n      if (!is.element(this.elements.container)) {\n        this.elements.container = createElement('div', {\n          tabindex: 0\n        });\n        wrap(this.media, this.elements.container);\n      }\n\n      // Migrate custom properties from media to container (so they work 😉)\n      ui.migrateStyles.call(this);\n\n      // Add style hook\n      ui.addStyleHook.call(this);\n\n      // Setup media\n      media.setup.call(this);\n\n      // Listen for events if debugging\n      if (this.config.debug) {\n        on.call(this, this.elements.container, this.config.events.join(' '), event => {\n          this.debug.log(`event: ${event.type}`);\n        });\n      }\n\n      // Setup fullscreen\n      this.fullscreen = new Fullscreen(this);\n\n      // Setup interface\n      // If embed but not fully supported, build interface now to avoid flash of controls\n      if (this.isHTML5 || this.isEmbed && !this.supported.ui) {\n        ui.build.call(this);\n      }\n\n      // Container listeners\n      this.listeners.container();\n\n      // Global listeners\n      this.listeners.global();\n\n      // Setup ads if provided\n      if (this.config.ads.enabled) {\n        this.ads = new Ads(this);\n      }\n\n      // Autoplay if required\n      if (this.isHTML5 && this.config.autoplay) {\n        this.once('canplay', () => silencePromise(this.play()));\n      }\n\n      // Seek time will be recorded (in listeners.js) so we can prevent hiding controls for a few seconds after seek\n      this.lastSeekTime = 0;\n\n      // Setup preview thumbnails if enabled\n      if (this.config.previewThumbnails.enabled) {\n        this.previewThumbnails = new PreviewThumbnails(this);\n      }\n    }\n\n    // ---------------------------------------\n    // API\n    // ---------------------------------------\n\n    /**\n     * Types and provider helpers\n     */\n    get isHTML5() {\n      return this.provider === providers.html5;\n    }\n    get isEmbed() {\n      return this.isYouTube || this.isVimeo;\n    }\n    get isYouTube() {\n      return this.provider === providers.youtube;\n    }\n    get isVimeo() {\n      return this.provider === providers.vimeo;\n    }\n    get isVideo() {\n      return this.type === types.video;\n    }\n    get isAudio() {\n      return this.type === types.audio;\n    }\n\n    /**\n     * Play the media, or play the advertisement (if they are not blocked)\n     */\n\n    /**\n     * Get playing state\n     */\n    get playing() {\n      return Boolean(this.ready && !this.paused && !this.ended);\n    }\n\n    /**\n     * Get paused state\n     */\n    get paused() {\n      return Boolean(this.media.paused);\n    }\n\n    /**\n     * Get stopped state\n     */\n    get stopped() {\n      return Boolean(this.paused && this.currentTime === 0);\n    }\n\n    /**\n     * Get ended state\n     */\n    get ended() {\n      return Boolean(this.media.ended);\n    }\n\n    /**\n     * Toggle playback based on current status\n     * @param {Boolean} input\n     */\n\n    /**\n     * Seek to a time\n     * @param {Number} input - where to seek to in seconds. Defaults to 0 (the start)\n     */\n    set currentTime(input) {\n      // Bail if media duration isn't available yet\n      if (!this.duration) {\n        return;\n      }\n\n      // Validate input\n      const inputIsValid = is.number(input) && input > 0;\n\n      // Set\n      this.media.currentTime = inputIsValid ? Math.min(input, this.duration) : 0;\n\n      // Logging\n      this.debug.log(`Seeking to ${this.currentTime} seconds`);\n    }\n\n    /**\n     * Get current time\n     */\n    get currentTime() {\n      return Number(this.media.currentTime);\n    }\n\n    /**\n     * Get buffered\n     */\n    get buffered() {\n      const {\n        buffered\n      } = this.media;\n\n      // YouTube / Vimeo return a float between 0-1\n      if (is.number(buffered)) {\n        return buffered;\n      }\n\n      // HTML5\n      // TODO: Handle buffered chunks of the media\n      // (i.e. seek to another section buffers only that section)\n      if (buffered && buffered.length && this.duration > 0) {\n        return buffered.end(0) / this.duration;\n      }\n      return 0;\n    }\n\n    /**\n     * Get seeking status\n     */\n    get seeking() {\n      return Boolean(this.media.seeking);\n    }\n\n    /**\n     * Get the duration of the current media\n     */\n    get duration() {\n      // Faux duration set via config\n      const fauxDuration = parseFloat(this.config.duration);\n      // Media duration can be NaN or Infinity before the media has loaded\n      const realDuration = (this.media || {}).duration;\n      const duration = !is.number(realDuration) || realDuration === Infinity ? 0 : realDuration;\n\n      // If config duration is funky, use regular duration\n      return fauxDuration || duration;\n    }\n\n    /**\n     * Set the player volume\n     * @param {Number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n     */\n    set volume(value) {\n      let volume = value;\n      const max = 1;\n      const min = 0;\n      if (is.string(volume)) {\n        volume = Number(volume);\n      }\n\n      // Load volume from storage if no value specified\n      if (!is.number(volume)) {\n        volume = this.storage.get('volume');\n      }\n\n      // Use config if all else fails\n      if (!is.number(volume)) {\n        ({\n          volume\n        } = this.config);\n      }\n\n      // Maximum is volumeMax\n      if (volume > max) {\n        volume = max;\n      }\n      // Minimum is volumeMin\n      if (volume < min) {\n        volume = min;\n      }\n\n      // Update config\n      this.config.volume = volume;\n\n      // Set the player volume\n      this.media.volume = volume;\n\n      // If muted, and we're increasing volume manually, reset muted state\n      if (!is.empty(value) && this.muted && volume > 0) {\n        this.muted = false;\n      }\n    }\n\n    /**\n     * Get the current player volume\n     */\n    get volume() {\n      return Number(this.media.volume);\n    }\n\n    /**\n     * Increase volume\n     * @param {Boolean} step - How much to decrease by (between 0 and 1)\n     */\n\n    /**\n     * Set muted state\n     * @param {Boolean} mute\n     */\n    set muted(mute) {\n      let toggle = mute;\n\n      // Load muted state from storage\n      if (!is.boolean(toggle)) {\n        toggle = this.storage.get('muted');\n      }\n\n      // Use config if all else fails\n      if (!is.boolean(toggle)) {\n        toggle = this.config.muted;\n      }\n\n      // Update config\n      this.config.muted = toggle;\n\n      // Set mute on the player\n      this.media.muted = toggle;\n    }\n\n    /**\n     * Get current muted state\n     */\n    get muted() {\n      return Boolean(this.media.muted);\n    }\n\n    /**\n     * Check if the media has audio\n     */\n    get hasAudio() {\n      // Assume yes for all non HTML5 (as we can't tell...)\n      if (!this.isHTML5) {\n        return true;\n      }\n      if (this.isAudio) {\n        return true;\n      }\n\n      // Get audio tracks\n      return Boolean(this.media.mozHasAudio) || Boolean(this.media.webkitAudioDecodedByteCount) || Boolean(this.media.audioTracks && this.media.audioTracks.length);\n    }\n\n    /**\n     * Set playback speed\n     * @param {Number} input - the speed of playback (0.5-2.0)\n     */\n    set speed(input) {\n      let speed = null;\n      if (is.number(input)) {\n        speed = input;\n      }\n      if (!is.number(speed)) {\n        speed = this.storage.get('speed');\n      }\n      if (!is.number(speed)) {\n        speed = this.config.speed.selected;\n      }\n\n      // Clamp to min/max\n      const {\n        minimumSpeed: min,\n        maximumSpeed: max\n      } = this;\n      speed = clamp(speed, min, max);\n\n      // Update config\n      this.config.speed.selected = speed;\n\n      // Set media speed\n      setTimeout(() => {\n        if (this.media) {\n          this.media.playbackRate = speed;\n        }\n      }, 0);\n    }\n\n    /**\n     * Get current playback speed\n     */\n    get speed() {\n      return Number(this.media.playbackRate);\n    }\n\n    /**\n     * Get the minimum allowed speed\n     */\n    get minimumSpeed() {\n      if (this.isYouTube) {\n        // https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate\n        return Math.min(...this.options.speed);\n      }\n      if (this.isVimeo) {\n        // https://github.com/vimeo/player.js/#setplaybackrateplaybackrate-number-promisenumber-rangeerrorerror\n        return 0.5;\n      }\n\n      // https://stackoverflow.com/a/32320020/1191319\n      return 0.0625;\n    }\n\n    /**\n     * Get the maximum allowed speed\n     */\n    get maximumSpeed() {\n      if (this.isYouTube) {\n        // https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate\n        return Math.max(...this.options.speed);\n      }\n      if (this.isVimeo) {\n        // https://github.com/vimeo/player.js/#setplaybackrateplaybackrate-number-promisenumber-rangeerrorerror\n        return 2;\n      }\n\n      // https://stackoverflow.com/a/32320020/1191319\n      return 16;\n    }\n\n    /**\n     * Set playback quality\n     * Currently HTML5 & YouTube only\n     * @param {Number} input - Quality level\n     */\n    set quality(input) {\n      const config = this.config.quality;\n      const options = this.options.quality;\n      if (!options.length) {\n        return;\n      }\n      let quality = [!is.empty(input) && Number(input), this.storage.get('quality'), config.selected, config.default].find(is.number);\n      let updateStorage = true;\n      if (!options.includes(quality)) {\n        const value = closest(options, quality);\n        this.debug.warn(`Unsupported quality option: ${quality}, using ${value} instead`);\n        quality = value;\n\n        // Don't update storage if quality is not supported\n        updateStorage = false;\n      }\n\n      // Update config\n      config.selected = quality;\n\n      // Set quality\n      this.media.quality = quality;\n\n      // Save to storage\n      if (updateStorage) {\n        this.storage.set({\n          quality\n        });\n      }\n    }\n\n    /**\n     * Get current quality level\n     */\n    get quality() {\n      return this.media.quality;\n    }\n\n    /**\n     * Toggle loop\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n     * @param {Boolean} input - Whether to loop or not\n     */\n    set loop(input) {\n      const toggle = is.boolean(input) ? input : this.config.loop.active;\n      this.config.loop.active = toggle;\n      this.media.loop = toggle;\n\n      // Set default to be a true toggle\n      /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n           switch (type) {\n              case 'start':\n                  if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                      this.config.loop.end = null;\n                  }\n                  this.config.loop.start = this.currentTime;\n                  // this.config.loop.indicator.start = this.elements.display.played.value;\n                  break;\n               case 'end':\n                  if (this.config.loop.start >= this.currentTime) {\n                      return this;\n                  }\n                  this.config.loop.end = this.currentTime;\n                  // this.config.loop.indicator.end = this.elements.display.played.value;\n                  break;\n               case 'all':\n                  this.config.loop.start = 0;\n                  this.config.loop.end = this.duration - 2;\n                  this.config.loop.indicator.start = 0;\n                  this.config.loop.indicator.end = 100;\n                  break;\n               case 'toggle':\n                  if (this.config.loop.active) {\n                      this.config.loop.start = 0;\n                      this.config.loop.end = null;\n                  } else {\n                      this.config.loop.start = 0;\n                      this.config.loop.end = this.duration - 2;\n                  }\n                  break;\n               default:\n                  this.config.loop.start = 0;\n                  this.config.loop.end = null;\n                  break;\n          } */\n    }\n\n    /**\n     * Get current loop state\n     */\n    get loop() {\n      return Boolean(this.media.loop);\n    }\n\n    /**\n     * Set new media source\n     * @param {Object} input - The new source object (see docs)\n     */\n    set source(input) {\n      source.change.call(this, input);\n    }\n\n    /**\n     * Get current source\n     */\n    get source() {\n      return this.media.currentSrc;\n    }\n\n    /**\n     * Get a download URL (either source or custom)\n     */\n    get download() {\n      const {\n        download\n      } = this.config.urls;\n      return is.url(download) ? download : this.source;\n    }\n\n    /**\n     * Set the download URL\n     */\n    set download(input) {\n      if (!is.url(input)) {\n        return;\n      }\n      this.config.urls.download = input;\n      controls.setDownloadUrl.call(this);\n    }\n\n    /**\n     * Set the poster image for a video\n     * @param {String} input - the URL for the new poster image\n     */\n    set poster(input) {\n      if (!this.isVideo) {\n        this.debug.warn('Poster can only be set for video');\n        return;\n      }\n      ui.setPoster.call(this, input, false).catch(() => {});\n    }\n\n    /**\n     * Get the current poster image\n     */\n    get poster() {\n      if (!this.isVideo) {\n        return null;\n      }\n      return this.media.getAttribute('poster') || this.media.getAttribute('data-poster') || this.media.getAttribute('data-poster-lazyload');\n    }\n\n    /**\n     * Get the current aspect ratio in use\n     */\n    get ratio() {\n      if (!this.isVideo) {\n        return null;\n      }\n      const ratio = reduceAspectRatio(getAspectRatio.call(this));\n      return is.array(ratio) ? ratio.join(':') : ratio;\n    }\n\n    /**\n     * Set video aspect ratio\n     */\n    set ratio(input) {\n      if (!this.isVideo) {\n        this.debug.warn('Aspect ratio can only be set for video');\n        return;\n      }\n      if (!is.string(input) || !validateAspectRatio(input)) {\n        this.debug.error(`Invalid aspect ratio specified (${input})`);\n        return;\n      }\n      this.config.ratio = reduceAspectRatio(input);\n      setAspectRatio.call(this);\n    }\n\n    /**\n     * Set the autoplay state\n     * @param {Boolean} input - Whether to autoplay or not\n     */\n    set autoplay(input) {\n      this.config.autoplay = is.boolean(input) ? input : this.config.autoplay;\n    }\n\n    /**\n     * Get the current autoplay state\n     */\n    get autoplay() {\n      return Boolean(this.config.autoplay);\n    }\n\n    /**\n     * Toggle captions\n     * @param {Boolean} input - Whether to enable captions\n     */\n    toggleCaptions(input) {\n      captions.toggle.call(this, input, false);\n    }\n\n    /**\n     * Set the caption track by index\n     * @param {Number} input - Caption index\n     */\n    set currentTrack(input) {\n      captions.set.call(this, input, false);\n      captions.setup.call(this);\n    }\n\n    /**\n     * Get the current caption track index (-1 if disabled)\n     */\n    get currentTrack() {\n      const {\n        toggled,\n        currentTrack\n      } = this.captions;\n      return toggled ? currentTrack : -1;\n    }\n\n    /**\n     * Set the wanted language for captions\n     * Since tracks can be added later it won't update the actual caption track until there is a matching track\n     * @param {String} input - Two character ISO language code (e.g. EN, FR, PT, etc)\n     */\n    set language(input) {\n      captions.setLanguage.call(this, input, false);\n    }\n\n    /**\n     * Get the current track's language\n     */\n    get language() {\n      return (captions.getCurrentTrack.call(this) || {}).language;\n    }\n\n    /**\n     * Toggle picture-in-picture playback on WebKit/MacOS\n     * TODO: update player with state, support, enabled\n     * TODO: detect outside changes\n     */\n    set pip(input) {\n      // Bail if no support\n      if (!support.pip) {\n        return;\n      }\n\n      // Toggle based on current state if not passed\n      const toggle = is.boolean(input) ? input : !this.pip;\n\n      // Toggle based on current state\n      // Safari\n      if (is.function(this.media.webkitSetPresentationMode)) {\n        this.media.webkitSetPresentationMode(toggle ? pip.active : pip.inactive);\n      }\n\n      // Chrome\n      if (is.function(this.media.requestPictureInPicture)) {\n        if (!this.pip && toggle) {\n          this.media.requestPictureInPicture();\n        } else if (this.pip && !toggle) {\n          document.exitPictureInPicture();\n        }\n      }\n    }\n\n    /**\n     * Get the current picture-in-picture state\n     */\n    get pip() {\n      if (!support.pip) {\n        return null;\n      }\n\n      // Safari\n      if (!is.empty(this.media.webkitPresentationMode)) {\n        return this.media.webkitPresentationMode === pip.active;\n      }\n\n      // Chrome\n      return this.media === document.pictureInPictureElement;\n    }\n\n    /**\n     * Sets the preview thubmnails for the current source\n     */\n    setPreviewThumbnails(thumbnailSource) {\n      if (this.previewThumbnails && this.previewThumbnails.loaded) {\n        this.previewThumbnails.destroy();\n        this.previewThumbnails = null;\n      }\n      Object.assign(this.config.previewThumbnails, thumbnailSource);\n\n      // Create new instance if it is still enabled\n      if (this.config.previewThumbnails.enabled) {\n        this.previewThumbnails = new PreviewThumbnails(this);\n      }\n    }\n\n    /**\n     * Trigger the airplay dialog\n     * TODO: update player with state, support, enabled\n     */\n\n    /**\n     * Check for support\n     * @param {String} type - Player type (audio/video)\n     * @param {String} provider - Provider (html5/youtube/vimeo)\n     * @param {Boolean} inline - Where player has `playsinline` sttribute\n     */\n    static supported(type, provider, inline) {\n      return support.check(type, provider, inline);\n    }\n\n    /**\n     * Load an SVG sprite into the page\n     * @param {String} url - URL for the SVG sprite\n     * @param {String} [id] - Unique ID\n     */\n    static loadSprite(url, id) {\n      return loadSprite(url, id);\n    }\n\n    /**\n     * Setup multiple instances\n     * @param {*} selector\n     * @param {Object} options\n     */\n    static setup(selector, options = {}) {\n      let targets = null;\n      if (is.string(selector)) {\n        targets = Array.from(document.querySelectorAll(selector));\n      } else if (is.nodeList(selector)) {\n        targets = Array.from(selector);\n      } else if (is.array(selector)) {\n        targets = selector.filter(is.element);\n      }\n      if (is.empty(targets)) {\n        return null;\n      }\n      return targets.map(t => new Plyr(t, options));\n    }\n  }\n  Plyr.defaults = cloneDeep(defaults);\n\n  const sources = {\n    video: {\n      type: 'video',\n      title: 'View From A Blue Moon',\n      sources: [{\n        src: 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-576p.mp4',\n        type: 'video/mp4',\n        size: 576\n      }, {\n        src: 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-720p.mp4',\n        type: 'video/mp4',\n        size: 720\n      }, {\n        src: 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-1080p.mp4',\n        type: 'video/mp4',\n        size: 1080\n      }, {\n        src: 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-1440p.mp4',\n        type: 'video/mp4',\n        size: 1440\n      }],\n      poster: 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg',\n      tracks: [{\n        kind: 'captions',\n        label: 'English',\n        srclang: 'en',\n        src: 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n        default: true\n      }, {\n        kind: 'captions',\n        label: 'French',\n        srclang: 'fr',\n        src: 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt'\n      }],\n      previewThumbnails: {\n        src: ['https://cdn.plyr.io/static/demo/thumbs/100p.vtt', 'https://cdn.plyr.io/static/demo/thumbs/240p.vtt']\n      }\n    },\n    audio: {\n      type: 'audio',\n      title: 'Kishi Bashi &ndash; &ldquo;It All Began With A Burst&rdquo;',\n      sources: [{\n        src: 'https://cdn.plyr.io/static/demo/Kishi_Bashi_-_It_All_Began_With_a_Burst.mp3',\n        type: 'audio/mp3'\n      }, {\n        src: 'https://cdn.plyr.io/static/demo/Kishi_Bashi_-_It_All_Began_With_a_Burst.ogg',\n        type: 'audio/ogg'\n      }]\n    },\n    youtube: {\n      type: 'video',\n      sources: [{\n        src: 'https://youtube.com/watch?v=bTqVqk7FSmY',\n        provider: 'youtube'\n      }]\n    },\n    vimeo: {\n      type: 'video',\n      sources: [{\n        src: 'https://vimeo.com/40648169',\n        provider: 'vimeo'\n      }]\n    }\n  };\n\n  // Toggle class on an element\n  const toggleClass = (element, className = '', toggle = false) => element && element.classList[toggle ? 'add' : 'remove'](className);\n\n  // ==========================================================================\n  (() => {\n    const production = 'plyr.io';\n    const isProduction = window.location.host.includes(production);\n\n    // Sentry for demo site (https://plyr.io) only\n    if (isProduction) {\n      init({\n        dsn: 'https://d4ad9866ad834437a4754e23937071e4@sentry.io/305555',\n        whitelistUrls: [production].map(d => new RegExp(`https://(([a-z0-9])+(.))*${d}`))\n      });\n    }\n    document.addEventListener('DOMContentLoaded', () => {\n      const selector = '#player';\n\n      // Setup share buttons\n      Shr.setup('.js-shr', {\n        count: {\n          className: 'button__count'\n        },\n        wrapper: {\n          className: 'button--with-count'\n        }\n      });\n\n      // Setup the player\n      const player = new Plyr(selector, {\n        debug: true,\n        title: 'View From A Blue Moon',\n        iconUrl: 'dist/demo.svg',\n        keyboard: {\n          global: true\n        },\n        tooltips: {\n          controls: true\n        },\n        captions: {\n          active: true\n        },\n        /* ads: {\n          enabled: isProduction,\n          publisherId: '918848828995742',\n        }, */\n        previewThumbnails: {\n          enabled: true,\n          src: ['https://cdn.plyr.io/static/demo/thumbs/100p.vtt', 'https://cdn.plyr.io/static/demo/thumbs/240p.vtt']\n        },\n        vimeo: {\n          // Prevent Vimeo blocking plyr.io demo site\n          referrerPolicy: 'no-referrer'\n        },\n        mediaMetadata: {\n          title: 'View From A Blue Moon',\n          album: 'Sports',\n          artist: 'Brainfarm',\n          artwork: [{\n            src: 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg',\n            type: 'image/jpeg'\n          }]\n        },\n        markers: {\n          enabled: true,\n          points: [{\n            time: 10,\n            label: 'first marker'\n          }, {\n            time: 40,\n            label: 'second marker'\n          }, {\n            time: 120,\n            label: '<strong>third</strong> marker'\n          }]\n        }\n      });\n\n      // Expose for tinkering in the console\n      window.player = player;\n\n      // Setup type toggle\n      const buttons = document.querySelectorAll('[data-source]');\n      const types = Object.keys(sources);\n      const historySupport = Boolean(window.history && window.history.pushState);\n      let currentType = window.location.hash.substring(1);\n      const hasInitialType = currentType.length;\n      function render(type) {\n        // Remove active classes\n        Array.from(buttons).forEach(button => toggleClass(button.parentElement, 'active', false));\n\n        // Set active on parent\n        toggleClass(document.querySelector(`[data-source=\"${type}\"]`), 'active', true);\n\n        // Show cite\n        Array.from(document.querySelectorAll('.plyr__cite')).forEach(cite => {\n          // eslint-disable-next-line no-param-reassign\n          cite.hidden = true;\n        });\n        document.querySelector(`.plyr__cite--${type}`).hidden = false;\n      }\n\n      // Set a new source\n      function setSource(type, init) {\n        // Bail if new type isn't known, it's the current type, or current type is empty (video is default) and new type is video\n        if (!types.includes(type) || !init && type === currentType || !currentType.length && type === 'video') {\n          return;\n        }\n\n        // Set the new source\n        player.source = sources[type];\n\n        // Set the current type for next time\n        currentType = type;\n        render(type);\n      }\n\n      // Bind to each button\n      Array.from(buttons).forEach(button => {\n        button.addEventListener('click', () => {\n          const type = button.getAttribute('data-source');\n          setSource(type);\n          if (historySupport) {\n            window.history.pushState({\n              type\n            }, '', `#${type}`);\n          }\n        });\n      });\n\n      // List for backwards/forwards\n      window.addEventListener('popstate', event => {\n        if (event.state && Object.keys(event.state).includes('type')) {\n          setSource(event.state.type);\n        }\n      });\n\n      // If there's no current type set, assume video\n      if (!hasInitialType) {\n        currentType = 'video';\n      }\n\n      // Replace current history state\n      if (historySupport && types.includes(currentType)) {\n        window.history.replaceState({\n          type: currentType\n        }, '', hasInitialType ? `#${currentType}` : '');\n      }\n\n      // If it's not video, load the source\n      if (currentType !== 'video') {\n        setSource(currentType, true);\n      }\n      render(currentType);\n    });\n  })();\n\n})();\n//# sourceMappingURL=demo.js.map\n","// Setup tab focus\nconst container = document.getElementById('container');\nconst tabClassName = 'tab-focus';\n\n// Remove class on blur\ndocument.addEventListener('focusout', (event) => {\n  if (!event.target.classList || container.contains(event.target)) {\n    return;\n  }\n\n  event.target.classList.remove(tabClassName);\n});\n\n// Add classname to tabbed elements\ndocument.addEventListener('keydown', (event) => {\n  if (event.key !== 'Tab') {\n    return;\n  }\n\n  // Delay the adding of classname until the focus has changed\n  // This event fires before the focusin event\n  setTimeout(() => {\n    const focused = document.activeElement;\n\n    if (!focused || !focused.classList || container.contains(focused)) {\n      return;\n    }\n\n    focused.classList.add(tabClassName);\n  }, 10);\n});\n","// Polyfill for creating CustomEvents on IE9/10/11\n\n// code pulled from:\n// https://github.com/d4tocchini/customevent-polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\n(function() {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  try {\n    var ce = new window.CustomEvent('test', { cancelable: true });\n    ce.preventDefault();\n    if (ce.defaultPrevented !== true) {\n      // IE has problems with .preventDefault() on custom events\n      // http://stackoverflow.com/questions/23349191\n      throw new Error('Could not prevent default');\n    }\n  } catch (e) {\n    var CustomEvent = function(event, params) {\n      var evt, origPrevent;\n      params = params || {};\n      params.bubbles = !!params.bubbles;\n      params.cancelable = !!params.cancelable;\n\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(\n        event,\n        params.bubbles,\n        params.cancelable,\n        params.detail\n      );\n      origPrevent = evt.preventDefault;\n      evt.preventDefault = function() {\n        origPrevent.call(this);\n        try {\n          Object.defineProperty(this, 'defaultPrevented', {\n            get: function() {\n              return true;\n            }\n          });\n        } catch (e) {\n          this.defaultPrevented = true;\n        }\n      };\n      return evt;\n    };\n\n    CustomEvent.prototype = window.Event.prototype;\n    window.CustomEvent = CustomEvent; // expose definition to window\n  }\n})();\n","(function(global) {\r\n  /**\r\n   * Polyfill URLSearchParams\r\n   *\r\n   * Inspired from : https://github.com/WebReflection/url-search-params/blob/master/src/url-search-params.js\r\n   */\r\n\r\n  var checkIfIteratorIsSupported = function() {\r\n    try {\r\n      return !!Symbol.iterator;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n\r\n  var iteratorSupported = checkIfIteratorIsSupported();\r\n\r\n  var createIterator = function(items) {\r\n    var iterator = {\r\n      next: function() {\r\n        var value = items.shift();\r\n        return { done: value === void 0, value: value };\r\n      }\r\n    };\r\n\r\n    if (iteratorSupported) {\r\n      iterator[Symbol.iterator] = function() {\r\n        return iterator;\r\n      };\r\n    }\r\n\r\n    return iterator;\r\n  };\r\n\r\n  /**\r\n   * Search param name and values should be encoded according to https://url.spec.whatwg.org/#urlencoded-serializing\r\n   * encodeURIComponent() produces the same result except encoding spaces as `%20` instead of `+`.\r\n   */\r\n  var serializeParam = function(value) {\r\n    return encodeURIComponent(value).replace(/%20/g, '+');\r\n  };\r\n\r\n  var deserializeParam = function(value) {\r\n    return decodeURIComponent(String(value).replace(/\\+/g, ' '));\r\n  };\r\n\r\n  var polyfillURLSearchParams = function() {\r\n\r\n    var URLSearchParams = function(searchString) {\r\n      Object.defineProperty(this, '_entries', { writable: true, value: {} });\r\n      var typeofSearchString = typeof searchString;\r\n\r\n      if (typeofSearchString === 'undefined') {\r\n        // do nothing\r\n      } else if (typeofSearchString === 'string') {\r\n        if (searchString !== '') {\r\n          this._fromString(searchString);\r\n        }\r\n      } else if (searchString instanceof URLSearchParams) {\r\n        var _this = this;\r\n        searchString.forEach(function(value, name) {\r\n          _this.append(name, value);\r\n        });\r\n      } else if ((searchString !== null) && (typeofSearchString === 'object')) {\r\n        if (Object.prototype.toString.call(searchString) === '[object Array]') {\r\n          for (var i = 0; i < searchString.length; i++) {\r\n            var entry = searchString[i];\r\n            if ((Object.prototype.toString.call(entry) === '[object Array]') || (entry.length !== 2)) {\r\n              this.append(entry[0], entry[1]);\r\n            } else {\r\n              throw new TypeError('Expected [string, any] as entry at index ' + i + ' of URLSearchParams\\'s input');\r\n            }\r\n          }\r\n        } else {\r\n          for (var key in searchString) {\r\n            if (searchString.hasOwnProperty(key)) {\r\n              this.append(key, searchString[key]);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        throw new TypeError('Unsupported input\\'s type for URLSearchParams');\r\n      }\r\n    };\r\n\r\n    var proto = URLSearchParams.prototype;\r\n\r\n    proto.append = function(name, value) {\r\n      if (name in this._entries) {\r\n        this._entries[name].push(String(value));\r\n      } else {\r\n        this._entries[name] = [String(value)];\r\n      }\r\n    };\r\n\r\n    proto.delete = function(name) {\r\n      delete this._entries[name];\r\n    };\r\n\r\n    proto.get = function(name) {\r\n      return (name in this._entries) ? this._entries[name][0] : null;\r\n    };\r\n\r\n    proto.getAll = function(name) {\r\n      return (name in this._entries) ? this._entries[name].slice(0) : [];\r\n    };\r\n\r\n    proto.has = function(name) {\r\n      return (name in this._entries);\r\n    };\r\n\r\n    proto.set = function(name, value) {\r\n      this._entries[name] = [String(value)];\r\n    };\r\n\r\n    proto.forEach = function(callback, thisArg) {\r\n      var entries;\r\n      for (var name in this._entries) {\r\n        if (this._entries.hasOwnProperty(name)) {\r\n          entries = this._entries[name];\r\n          for (var i = 0; i < entries.length; i++) {\r\n            callback.call(thisArg, entries[i], name, this);\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    proto.keys = function() {\r\n      var items = [];\r\n      this.forEach(function(value, name) {\r\n        items.push(name);\r\n      });\r\n      return createIterator(items);\r\n    };\r\n\r\n    proto.values = function() {\r\n      var items = [];\r\n      this.forEach(function(value) {\r\n        items.push(value);\r\n      });\r\n      return createIterator(items);\r\n    };\r\n\r\n    proto.entries = function() {\r\n      var items = [];\r\n      this.forEach(function(value, name) {\r\n        items.push([name, value]);\r\n      });\r\n      return createIterator(items);\r\n    };\r\n\r\n    if (iteratorSupported) {\r\n      proto[Symbol.iterator] = proto.entries;\r\n    }\r\n\r\n    proto.toString = function() {\r\n      var searchArray = [];\r\n      this.forEach(function(value, name) {\r\n        searchArray.push(serializeParam(name) + '=' + serializeParam(value));\r\n      });\r\n      return searchArray.join('&');\r\n    };\r\n\r\n\r\n    global.URLSearchParams = URLSearchParams;\r\n  };\r\n\r\n  var checkIfURLSearchParamsSupported = function() {\r\n    try {\r\n      var URLSearchParams = global.URLSearchParams;\r\n\r\n      return (\r\n        (new URLSearchParams('?a=1').toString() === 'a=1') &&\r\n        (typeof URLSearchParams.prototype.set === 'function') &&\r\n        (typeof URLSearchParams.prototype.entries === 'function')\r\n      );\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  if (!checkIfURLSearchParamsSupported()) {\r\n    polyfillURLSearchParams();\r\n  }\r\n\r\n  var proto = global.URLSearchParams.prototype;\r\n\r\n  if (typeof proto.sort !== 'function') {\r\n    proto.sort = function() {\r\n      var _this = this;\r\n      var items = [];\r\n      this.forEach(function(value, name) {\r\n        items.push([name, value]);\r\n        if (!_this._entries) {\r\n          _this.delete(name);\r\n        }\r\n      });\r\n      items.sort(function(a, b) {\r\n        if (a[0] < b[0]) {\r\n          return -1;\r\n        } else if (a[0] > b[0]) {\r\n          return +1;\r\n        } else {\r\n          return 0;\r\n        }\r\n      });\r\n      if (_this._entries) { // force reset because IE keeps keys index\r\n        _this._entries = {};\r\n      }\r\n      for (var i = 0; i < items.length; i++) {\r\n        this.append(items[i][0], items[i][1]);\r\n      }\r\n    };\r\n  }\r\n\r\n  if (typeof proto._fromString !== 'function') {\r\n    Object.defineProperty(proto, '_fromString', {\r\n      enumerable: false,\r\n      configurable: false,\r\n      writable: false,\r\n      value: function(searchString) {\r\n        if (this._entries) {\r\n          this._entries = {};\r\n        } else {\r\n          var keys = [];\r\n          this.forEach(function(value, name) {\r\n            keys.push(name);\r\n          });\r\n          for (var i = 0; i < keys.length; i++) {\r\n            this.delete(keys[i]);\r\n          }\r\n        }\r\n\r\n        searchString = searchString.replace(/^\\?/, '');\r\n        var attributes = searchString.split('&');\r\n        var attribute;\r\n        for (var i = 0; i < attributes.length; i++) {\r\n          attribute = attributes[i].split('=');\r\n          this.append(\r\n            deserializeParam(attribute[0]),\r\n            (attribute.length > 1) ? deserializeParam(attribute[1]) : ''\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // HTMLAnchorElement\r\n\r\n})(\r\n  (typeof global !== 'undefined') ? global\r\n    : ((typeof window !== 'undefined') ? window\r\n    : ((typeof self !== 'undefined') ? self : this))\r\n);\r\n\r\n(function(global) {\r\n  /**\r\n   * Polyfill URL\r\n   *\r\n   * Inspired from : https://github.com/arv/DOM-URL-Polyfill/blob/master/src/url.js\r\n   */\r\n\r\n  var checkIfURLIsSupported = function() {\r\n    try {\r\n      var u = new global.URL('b', 'http://a');\r\n      u.pathname = 'c d';\r\n      return (u.href === 'http://a/c%20d') && u.searchParams;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n\r\n  var polyfillURL = function() {\r\n    var _URL = global.URL;\r\n\r\n    var URL = function(url, base) {\r\n      if (typeof url !== 'string') url = String(url);\r\n\r\n      // Only create another document if the base is different from current location.\r\n      var doc = document, baseElement;\r\n      if (base && (global.location === void 0 || base !== global.location.href)) {\r\n        doc = document.implementation.createHTMLDocument('');\r\n        baseElement = doc.createElement('base');\r\n        baseElement.href = base;\r\n        doc.head.appendChild(baseElement);\r\n        try {\r\n          if (baseElement.href.indexOf(base) !== 0) throw new Error(baseElement.href);\r\n        } catch (err) {\r\n          throw new Error('URL unable to set base ' + base + ' due to ' + err);\r\n        }\r\n      }\r\n\r\n      var anchorElement = doc.createElement('a');\r\n      anchorElement.href = url;\r\n      if (baseElement) {\r\n        doc.body.appendChild(anchorElement);\r\n        anchorElement.href = anchorElement.href; // force href to refresh\r\n      }\r\n\r\n      var inputElement = doc.createElement('input');\r\n      inputElement.type = 'url';\r\n      inputElement.value = url;\r\n\r\n      if (anchorElement.protocol === ':' || !/:/.test(anchorElement.href) || (!inputElement.checkValidity() && !base)) {\r\n        throw new TypeError('Invalid URL');\r\n      }\r\n\r\n      Object.defineProperty(this, '_anchorElement', {\r\n        value: anchorElement\r\n      });\r\n\r\n\r\n      // create a linked searchParams which reflect its changes on URL\r\n      var searchParams = new global.URLSearchParams(this.search);\r\n      var enableSearchUpdate = true;\r\n      var enableSearchParamsUpdate = true;\r\n      var _this = this;\r\n      ['append', 'delete', 'set'].forEach(function(methodName) {\r\n        var method = searchParams[methodName];\r\n        searchParams[methodName] = function() {\r\n          method.apply(searchParams, arguments);\r\n          if (enableSearchUpdate) {\r\n            enableSearchParamsUpdate = false;\r\n            _this.search = searchParams.toString();\r\n            enableSearchParamsUpdate = true;\r\n          }\r\n        };\r\n      });\r\n\r\n      Object.defineProperty(this, 'searchParams', {\r\n        value: searchParams,\r\n        enumerable: true\r\n      });\r\n\r\n      var search = void 0;\r\n      Object.defineProperty(this, '_updateSearchParams', {\r\n        enumerable: false,\r\n        configurable: false,\r\n        writable: false,\r\n        value: function() {\r\n          if (this.search !== search) {\r\n            search = this.search;\r\n            if (enableSearchParamsUpdate) {\r\n              enableSearchUpdate = false;\r\n              this.searchParams._fromString(this.search);\r\n              enableSearchUpdate = true;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    var proto = URL.prototype;\r\n\r\n    var linkURLWithAnchorAttribute = function(attributeName) {\r\n      Object.defineProperty(proto, attributeName, {\r\n        get: function() {\r\n          return this._anchorElement[attributeName];\r\n        },\r\n        set: function(value) {\r\n          this._anchorElement[attributeName] = value;\r\n        },\r\n        enumerable: true\r\n      });\r\n    };\r\n\r\n    ['hash', 'host', 'hostname', 'port', 'protocol']\r\n      .forEach(function(attributeName) {\r\n        linkURLWithAnchorAttribute(attributeName);\r\n      });\r\n\r\n    Object.defineProperty(proto, 'search', {\r\n      get: function() {\r\n        return this._anchorElement['search'];\r\n      },\r\n      set: function(value) {\r\n        this._anchorElement['search'] = value;\r\n        this._updateSearchParams();\r\n      },\r\n      enumerable: true\r\n    });\r\n\r\n    Object.defineProperties(proto, {\r\n\r\n      'toString': {\r\n        get: function() {\r\n          var _this = this;\r\n          return function() {\r\n            return _this.href;\r\n          };\r\n        }\r\n      },\r\n\r\n      'href': {\r\n        get: function() {\r\n          return this._anchorElement.href.replace(/\\?$/, '');\r\n        },\r\n        set: function(value) {\r\n          this._anchorElement.href = value;\r\n          this._updateSearchParams();\r\n        },\r\n        enumerable: true\r\n      },\r\n\r\n      'pathname': {\r\n        get: function() {\r\n          return this._anchorElement.pathname.replace(/(^\\/?)/, '/');\r\n        },\r\n        set: function(value) {\r\n          this._anchorElement.pathname = value;\r\n        },\r\n        enumerable: true\r\n      },\r\n\r\n      'origin': {\r\n        get: function() {\r\n          // get expected port from protocol\r\n          var expectedPort = { 'http:': 80, 'https:': 443, 'ftp:': 21 }[this._anchorElement.protocol];\r\n          // add port to origin if, expected port is different than actual port\r\n          // and it is not empty f.e http://foo:8080\r\n          // 8080 != 80 && 8080 != ''\r\n          var addPortToOrigin = this._anchorElement.port != expectedPort &&\r\n            this._anchorElement.port !== '';\r\n\r\n          return this._anchorElement.protocol +\r\n            '//' +\r\n            this._anchorElement.hostname +\r\n            (addPortToOrigin ? (':' + this._anchorElement.port) : '');\r\n        },\r\n        enumerable: true\r\n      },\r\n\r\n      'password': { // TODO\r\n        get: function() {\r\n          return '';\r\n        },\r\n        set: function(value) {\r\n        },\r\n        enumerable: true\r\n      },\r\n\r\n      'username': { // TODO\r\n        get: function() {\r\n          return '';\r\n        },\r\n        set: function(value) {\r\n        },\r\n        enumerable: true\r\n      },\r\n    });\r\n\r\n    URL.createObjectURL = function(blob) {\r\n      return _URL.createObjectURL.apply(_URL, arguments);\r\n    };\r\n\r\n    URL.revokeObjectURL = function(url) {\r\n      return _URL.revokeObjectURL.apply(_URL, arguments);\r\n    };\r\n\r\n    global.URL = URL;\r\n\r\n  };\r\n\r\n  if (!checkIfURLIsSupported()) {\r\n    polyfillURL();\r\n  }\r\n\r\n  if ((global.location !== void 0) && !('origin' in global.location)) {\r\n    var getOrigin = function() {\r\n      return global.location.protocol + '//' + global.location.hostname + (global.location.port ? (':' + global.location.port) : '');\r\n    };\r\n\r\n    try {\r\n      Object.defineProperty(global.location, 'origin', {\r\n        get: getOrigin,\r\n        enumerable: true\r\n      });\r\n    } catch (e) {\r\n      setInterval(function() {\r\n        global.location.origin = getOrigin();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n})(\r\n  (typeof global !== 'undefined') ? global\r\n    : ((typeof window !== 'undefined') ? window\r\n    : ((typeof self !== 'undefined') ? self : this))\r\n);\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/** JSDoc */\n// eslint-disable-next-line import/export\nexport var Severity;\n(function (Severity) {\n    /** JSDoc */\n    Severity[\"Fatal\"] = \"fatal\";\n    /** JSDoc */\n    Severity[\"Error\"] = \"error\";\n    /** JSDoc */\n    Severity[\"Warning\"] = \"warning\";\n    /** JSDoc */\n    Severity[\"Log\"] = \"log\";\n    /** JSDoc */\n    Severity[\"Info\"] = \"info\";\n    /** JSDoc */\n    Severity[\"Debug\"] = \"debug\";\n    /** JSDoc */\n    Severity[\"Critical\"] = \"critical\";\n})(Severity || (Severity = {}));\n// eslint-disable-next-line @typescript-eslint/no-namespace, import/export\n(function (Severity) {\n    /**\n     * Converts a string-based level into a {@link Severity}.\n     *\n     * @param level string representation of Severity\n     * @returns Severity\n     */\n    function fromString(level) {\n        switch (level) {\n            case 'debug':\n                return Severity.Debug;\n            case 'info':\n                return Severity.Info;\n            case 'warn':\n            case 'warning':\n                return Severity.Warning;\n            case 'error':\n                return Severity.Error;\n            case 'fatal':\n                return Severity.Fatal;\n            case 'critical':\n                return Severity.Critical;\n            case 'log':\n            default:\n                return Severity.Log;\n        }\n    }\n    Severity.fromString = fromString;\n})(Severity || (Severity = {}));\n//# sourceMappingURL=severity.js.map","/** The status of an event. */\n// eslint-disable-next-line import/export\nexport var Status;\n(function (Status) {\n    /** The status could not be determined. */\n    Status[\"Unknown\"] = \"unknown\";\n    /** The event was skipped due to configuration or callbacks. */\n    Status[\"Skipped\"] = \"skipped\";\n    /** The event was sent to Sentry successfully. */\n    Status[\"Success\"] = \"success\";\n    /** The client is currently rate limited and will try again later. */\n    Status[\"RateLimit\"] = \"rate_limit\";\n    /** The event could not be processed. */\n    Status[\"Invalid\"] = \"invalid\";\n    /** A server-side error ocurred during submission. */\n    Status[\"Failed\"] = \"failed\";\n})(Status || (Status = {}));\n// eslint-disable-next-line @typescript-eslint/no-namespace, import/export\n(function (Status) {\n    /**\n     * Converts a HTTP status code into a {@link Status}.\n     *\n     * @param code The HTTP response status code.\n     * @returns The send status or {@link Status.Unknown}.\n     */\n    function fromHttpCode(code) {\n        if (code >= 200 && code < 300) {\n            return Status.Success;\n        }\n        if (code === 429) {\n            return Status.RateLimit;\n        }\n        if (code >= 400 && code < 500) {\n            return Status.Invalid;\n        }\n        if (code >= 500) {\n            return Status.Failed;\n        }\n        return Status.Unknown;\n    }\n    Status.fromHttpCode = fromHttpCode;\n})(Status || (Status = {}));\n//# sourceMappingURL=status.js.map","export var setPrototypeOf = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties);\n/**\n * setPrototypeOf polyfill using __proto__\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction setProtoOf(obj, proto) {\n    // @ts-ignore __proto__ does not exist on obj\n    obj.__proto__ = proto;\n    return obj;\n}\n/**\n * setPrototypeOf polyfill using mixin\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction mixinProperties(obj, proto) {\n    for (var prop in proto) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (!obj.hasOwnProperty(prop)) {\n            // @ts-ignore typescript complains about indexing so we remove\n            obj[prop] = proto[prop];\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=polyfill.js.map","import { __extends } from \"tslib\";\nimport { setPrototypeOf } from './polyfill';\n/** An error emitted by Sentry SDKs and related utilities. */\nvar SentryError = /** @class */ (function (_super) {\n    __extends(SentryError, _super);\n    function SentryError(message) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        _this.name = _newTarget.prototype.constructor.name;\n        setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return SentryError;\n}(Error));\nexport { SentryError };\n//# sourceMappingURL=error.js.map","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat) {\n    switch (Object.prototype.toString.call(wat)) {\n        case '[object Error]':\n            return true;\n        case '[object Exception]':\n            return true;\n        case '[object DOMException]':\n            return true;\n        default:\n            return isInstanceOf(wat, Error);\n    }\n}\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat) {\n    return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat) {\n    return Object.prototype.toString.call(wat) === '[object String]';\n}\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat) {\n    return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat) {\n    return Object.prototype.toString.call(wat) === '[object Object]';\n}\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat) {\n    return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat) {\n    return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat) {\n    return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat) {\n    return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat, base) {\n    try {\n        return wat instanceof base;\n    }\n    catch (_e) {\n        return false;\n    }\n}\n//# sourceMappingURL=is.js.map","import { isRegExp, isString } from './is';\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function truncate(str, max) {\n    if (max === void 0) { max = 0; }\n    if (typeof str !== 'string' || max === 0) {\n        return str;\n    }\n    return str.length <= max ? str : str.substr(0, max) + \"...\";\n}\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line, colno) {\n    var newLine = line;\n    var ll = newLine.length;\n    if (ll <= 150) {\n        return newLine;\n    }\n    if (colno > ll) {\n        // eslint-disable-next-line no-param-reassign\n        colno = ll;\n    }\n    var start = Math.max(colno - 60, 0);\n    if (start < 5) {\n        start = 0;\n    }\n    var end = Math.min(start + 140, ll);\n    if (end > ll - 5) {\n        end = ll;\n    }\n    if (end === ll) {\n        start = Math.max(end - 140, 0);\n    }\n    newLine = newLine.slice(start, end);\n    if (start > 0) {\n        newLine = \"'{snip} \" + newLine;\n    }\n    if (end < ll) {\n        newLine += ' {snip}';\n    }\n    return newLine;\n}\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input, delimiter) {\n    if (!Array.isArray(input)) {\n        return '';\n    }\n    var output = [];\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (var i = 0; i < input.length; i++) {\n        var value = input[i];\n        try {\n            output.push(String(value));\n        }\n        catch (e) {\n            output.push('[value cannot be serialized]');\n        }\n    }\n    return output.join(delimiter);\n}\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nexport function isMatchingPattern(value, pattern) {\n    if (!isString(value)) {\n        return false;\n    }\n    if (isRegExp(pattern)) {\n        return pattern.test(value);\n    }\n    if (typeof pattern === 'string') {\n        return value.indexOf(pattern) !== -1;\n    }\n    return false;\n}\n//# sourceMappingURL=string.js.map","import { isString } from './is';\nimport { snipLine } from './string';\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function dynamicRequire(mod, request) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return mod.require(request);\n}\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv() {\n    return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\nvar fallbackGlobalObject = {};\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject() {\n    return (isNodeEnv()\n        ? global\n        : typeof window !== 'undefined'\n            ? window\n            : typeof self !== 'undefined'\n                ? self\n                : fallbackGlobalObject);\n}\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4() {\n    var global = getGlobalObject();\n    var crypto = global.crypto || global.msCrypto;\n    if (!(crypto === void 0) && crypto.getRandomValues) {\n        // Use window.crypto API if available\n        var arr = new Uint16Array(8);\n        crypto.getRandomValues(arr);\n        // set 4 in byte 7\n        // eslint-disable-next-line no-bitwise\n        arr[3] = (arr[3] & 0xfff) | 0x4000;\n        // set 2 most significant bits of byte 9 to '10'\n        // eslint-disable-next-line no-bitwise\n        arr[4] = (arr[4] & 0x3fff) | 0x8000;\n        var pad = function (num) {\n            var v = num.toString(16);\n            while (v.length < 4) {\n                v = \"0\" + v;\n            }\n            return v;\n        };\n        return (pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]));\n    }\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        // eslint-disable-next-line no-bitwise\n        var r = (Math.random() * 16) | 0;\n        // eslint-disable-next-line no-bitwise\n        var v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url) {\n    if (!url) {\n        return {};\n    }\n    var match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n    if (!match) {\n        return {};\n    }\n    // coerce to undefined values to empty string so we don't get 'undefined'\n    var query = match[6] || '';\n    var fragment = match[8] || '';\n    return {\n        host: match[4],\n        path: match[5],\n        protocol: match[2],\n        relative: match[5] + query + fragment,\n    };\n}\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event) {\n    if (event.message) {\n        return event.message;\n    }\n    if (event.exception && event.exception.values && event.exception.values[0]) {\n        var exception = event.exception.values[0];\n        if (exception.type && exception.value) {\n            return exception.type + \": \" + exception.value;\n        }\n        return exception.type || exception.value || event.event_id || '<unknown>';\n    }\n    return event.event_id || '<unknown>';\n}\n/** JSDoc */\nexport function consoleSandbox(callback) {\n    var global = getGlobalObject();\n    var levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n    if (!('console' in global)) {\n        return callback();\n    }\n    var originalConsole = global.console;\n    var wrappedLevels = {};\n    // Restore all wrapped console methods\n    levels.forEach(function (level) {\n        if (level in global.console && originalConsole[level].__sentry_original__) {\n            wrappedLevels[level] = originalConsole[level];\n            originalConsole[level] = originalConsole[level].__sentry_original__;\n        }\n    });\n    // Perform callback manipulations\n    var result = callback();\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(function (level) {\n        originalConsole[level] = wrappedLevels[level];\n    });\n    return result;\n}\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event, value, type) {\n    event.exception = event.exception || {};\n    event.exception.values = event.exception.values || [];\n    event.exception.values[0] = event.exception.values[0] || {};\n    event.exception.values[0].value = event.exception.values[0].value || value || '';\n    event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n}\n/**\n * Adds exception mechanism to a given event.\n * @param event The event to modify.\n * @param mechanism Mechanism of the mechanism.\n * @hidden\n */\nexport function addExceptionMechanism(event, mechanism) {\n    if (mechanism === void 0) { mechanism = {}; }\n    // TODO: Use real type with `keyof Mechanism` thingy and maybe make it better?\n    try {\n        // @ts-ignore Type 'Mechanism | {}' is not assignable to type 'Mechanism | undefined'\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        event.exception.values[0].mechanism = event.exception.values[0].mechanism || {};\n        Object.keys(mechanism).forEach(function (key) {\n            // @ts-ignore Mechanism has no index signature\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            event.exception.values[0].mechanism[key] = mechanism[key];\n        });\n    }\n    catch (_oO) {\n        // no-empty\n    }\n}\n/**\n * A safe form of location.href\n */\nexport function getLocationHref() {\n    try {\n        return document.location.href;\n    }\n    catch (oO) {\n        return '';\n    }\n}\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(elem) {\n    // try/catch both:\n    // - accessing event.target (see getsentry/raven-js#838, #768)\n    // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n    // - can throw an exception in some circumstances.\n    try {\n        var currentElem = elem;\n        var MAX_TRAVERSE_HEIGHT = 5;\n        var MAX_OUTPUT_LEN = 80;\n        var out = [];\n        var height = 0;\n        var len = 0;\n        var separator = ' > ';\n        var sepLength = separator.length;\n        var nextStr = void 0;\n        // eslint-disable-next-line no-plusplus\n        while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n            nextStr = _htmlElementAsString(currentElem);\n            // bail out if\n            // - nextStr is the 'html' element\n            // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n            //   (ignore this limit if we are on the first iteration)\n            if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n                break;\n            }\n            out.push(nextStr);\n            len += nextStr.length;\n            currentElem = currentElem.parentNode;\n        }\n        return out.reverse().join(separator);\n    }\n    catch (_oO) {\n        return '<unknown>';\n    }\n}\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el) {\n    var elem = el;\n    var out = [];\n    var className;\n    var classes;\n    var key;\n    var attr;\n    var i;\n    if (!elem || !elem.tagName) {\n        return '';\n    }\n    out.push(elem.tagName.toLowerCase());\n    if (elem.id) {\n        out.push(\"#\" + elem.id);\n    }\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n        classes = className.split(/\\s+/);\n        for (i = 0; i < classes.length; i++) {\n            out.push(\".\" + classes[i]);\n        }\n    }\n    var allowedAttrs = ['type', 'name', 'title', 'alt'];\n    for (i = 0; i < allowedAttrs.length; i++) {\n        key = allowedAttrs[i];\n        attr = elem.getAttribute(key);\n        if (attr) {\n            out.push(\"[\" + key + \"=\\\"\" + attr + \"\\\"]\");\n        }\n    }\n    return out.join('');\n}\nvar INITIAL_TIME = Date.now();\nvar prevNow = 0;\nvar performanceFallback = {\n    now: function () {\n        var now = Date.now() - INITIAL_TIME;\n        if (now < prevNow) {\n            now = prevNow;\n        }\n        prevNow = now;\n        return now;\n    },\n    timeOrigin: INITIAL_TIME,\n};\nexport var crossPlatformPerformance = (function () {\n    if (isNodeEnv()) {\n        try {\n            var perfHooks = dynamicRequire(module, 'perf_hooks');\n            return perfHooks.performance;\n        }\n        catch (_) {\n            return performanceFallback;\n        }\n    }\n    var performance = getGlobalObject().performance;\n    if (!performance || !performance.now) {\n        return performanceFallback;\n    }\n    // Polyfill for performance.timeOrigin.\n    //\n    // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n    // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n    if (performance.timeOrigin === undefined) {\n        // As of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always a\n        // valid fallback. In the absence of a initial time provided by the browser, fallback to INITIAL_TIME.\n        // @ts-ignore ignored because timeOrigin is a readonly property but we want to override\n        // eslint-disable-next-line deprecation/deprecation\n        performance.timeOrigin = (performance.timing && performance.timing.navigationStart) || INITIAL_TIME;\n    }\n    return performance;\n})();\n/**\n * Returns a timestamp in seconds with milliseconds precision since the UNIX epoch calculated with the monotonic clock.\n */\nexport function timestampWithMs() {\n    return (crossPlatformPerformance.timeOrigin + crossPlatformPerformance.now()) / 1000;\n}\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nvar SEMVER_REGEXP = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input) {\n    var match = input.match(SEMVER_REGEXP) || [];\n    var major = parseInt(match[1], 10);\n    var minor = parseInt(match[2], 10);\n    var patch = parseInt(match[3], 10);\n    return {\n        buildmetadata: match[5],\n        major: isNaN(major) ? undefined : major,\n        minor: isNaN(minor) ? undefined : minor,\n        patch: isNaN(patch) ? undefined : patch,\n        prerelease: match[4],\n    };\n}\nvar defaultRetryAfter = 60 * 1000; // 60 seconds\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param now current unix timestamp\n * @param header string representation of 'Retry-After' header\n */\nexport function parseRetryAfterHeader(now, header) {\n    if (!header) {\n        return defaultRetryAfter;\n    }\n    var headerDelay = parseInt(\"\" + header, 10);\n    if (!isNaN(headerDelay)) {\n        return headerDelay * 1000;\n    }\n    var headerDate = Date.parse(\"\" + header);\n    if (!isNaN(headerDate)) {\n        return headerDate - now;\n    }\n    return defaultRetryAfter;\n}\nvar defaultFunctionName = '<anonymous>';\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn) {\n    try {\n        if (!fn || typeof fn !== 'function') {\n            return defaultFunctionName;\n        }\n        return fn.name || defaultFunctionName;\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        return defaultFunctionName;\n    }\n}\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines, frame, linesOfContext) {\n    if (linesOfContext === void 0) { linesOfContext = 5; }\n    var lineno = frame.lineno || 0;\n    var maxLines = lines.length;\n    var sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n    frame.pre_context = lines\n        .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n        .map(function (line) { return snipLine(line, 0); });\n    frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n    frame.post_context = lines\n        .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n        .map(function (line) { return snipLine(line, 0); });\n}\n//# sourceMappingURL=misc.js.map","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { consoleSandbox, getGlobalObject } from './misc';\n// TODO: Implement different loggers for different environments\nvar global = getGlobalObject();\n/** Prefix for logging strings */\nvar PREFIX = 'Sentry Logger ';\n/** JSDoc */\nvar Logger = /** @class */ (function () {\n    /** JSDoc */\n    function Logger() {\n        this._enabled = false;\n    }\n    /** JSDoc */\n    Logger.prototype.disable = function () {\n        this._enabled = false;\n    };\n    /** JSDoc */\n    Logger.prototype.enable = function () {\n        this._enabled = true;\n    };\n    /** JSDoc */\n    Logger.prototype.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.log(PREFIX + \"[Log]: \" + args.join(' '));\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.warn(PREFIX + \"[Warn]: \" + args.join(' '));\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.error(PREFIX + \"[Error]: \" + args.join(' '));\n        });\n    };\n    return Logger;\n}());\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nvar logger = global.__SENTRY__.logger || (global.__SENTRY__.logger = new Logger());\nexport { logger };\n//# sourceMappingURL=logger.js.map","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n/** SyncPromise internal states */\nvar States;\n(function (States) {\n    /** Pending */\n    States[\"PENDING\"] = \"PENDING\";\n    /** Resolved / OK */\n    States[\"RESOLVED\"] = \"RESOLVED\";\n    /** Rejected / Error */\n    States[\"REJECTED\"] = \"REJECTED\";\n})(States || (States = {}));\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nvar SyncPromise = /** @class */ (function () {\n    function SyncPromise(executor) {\n        var _this = this;\n        this._state = States.PENDING;\n        this._handlers = [];\n        /** JSDoc */\n        this._resolve = function (value) {\n            _this._setResult(States.RESOLVED, value);\n        };\n        /** JSDoc */\n        this._reject = function (reason) {\n            _this._setResult(States.REJECTED, reason);\n        };\n        /** JSDoc */\n        this._setResult = function (state, value) {\n            if (_this._state !== States.PENDING) {\n                return;\n            }\n            if (isThenable(value)) {\n                value.then(_this._resolve, _this._reject);\n                return;\n            }\n            _this._state = state;\n            _this._value = value;\n            _this._executeHandlers();\n        };\n        // TODO: FIXME\n        /** JSDoc */\n        this._attachHandler = function (handler) {\n            _this._handlers = _this._handlers.concat(handler);\n            _this._executeHandlers();\n        };\n        /** JSDoc */\n        this._executeHandlers = function () {\n            if (_this._state === States.PENDING) {\n                return;\n            }\n            var cachedHandlers = _this._handlers.slice();\n            _this._handlers = [];\n            cachedHandlers.forEach(function (handler) {\n                if (handler.done) {\n                    return;\n                }\n                if (_this._state === States.RESOLVED) {\n                    if (handler.onfulfilled) {\n                        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                        handler.onfulfilled(_this._value);\n                    }\n                }\n                if (_this._state === States.REJECTED) {\n                    if (handler.onrejected) {\n                        handler.onrejected(_this._value);\n                    }\n                }\n                handler.done = true;\n            });\n        };\n        try {\n            executor(this._resolve, this._reject);\n        }\n        catch (e) {\n            this._reject(e);\n        }\n    }\n    /** JSDoc */\n    SyncPromise.resolve = function (value) {\n        return new SyncPromise(function (resolve) {\n            resolve(value);\n        });\n    };\n    /** JSDoc */\n    SyncPromise.reject = function (reason) {\n        return new SyncPromise(function (_, reject) {\n            reject(reason);\n        });\n    };\n    /** JSDoc */\n    SyncPromise.all = function (collection) {\n        return new SyncPromise(function (resolve, reject) {\n            if (!Array.isArray(collection)) {\n                reject(new TypeError(\"Promise.all requires an array as input.\"));\n                return;\n            }\n            if (collection.length === 0) {\n                resolve([]);\n                return;\n            }\n            var counter = collection.length;\n            var resolvedCollection = [];\n            collection.forEach(function (item, index) {\n                SyncPromise.resolve(item)\n                    .then(function (value) {\n                    resolvedCollection[index] = value;\n                    counter -= 1;\n                    if (counter !== 0) {\n                        return;\n                    }\n                    resolve(resolvedCollection);\n                })\n                    .then(null, reject);\n            });\n        });\n    };\n    /** JSDoc */\n    SyncPromise.prototype.then = function (onfulfilled, onrejected) {\n        var _this = this;\n        return new SyncPromise(function (resolve, reject) {\n            _this._attachHandler({\n                done: false,\n                onfulfilled: function (result) {\n                    if (!onfulfilled) {\n                        // TODO: ¯\\_(ツ)_/¯\n                        // TODO: FIXME\n                        resolve(result);\n                        return;\n                    }\n                    try {\n                        resolve(onfulfilled(result));\n                        return;\n                    }\n                    catch (e) {\n                        reject(e);\n                        return;\n                    }\n                },\n                onrejected: function (reason) {\n                    if (!onrejected) {\n                        reject(reason);\n                        return;\n                    }\n                    try {\n                        resolve(onrejected(reason));\n                        return;\n                    }\n                    catch (e) {\n                        reject(e);\n                        return;\n                    }\n                },\n            });\n        });\n    };\n    /** JSDoc */\n    SyncPromise.prototype.catch = function (onrejected) {\n        return this.then(function (val) { return val; }, onrejected);\n    };\n    /** JSDoc */\n    SyncPromise.prototype.finally = function (onfinally) {\n        var _this = this;\n        return new SyncPromise(function (resolve, reject) {\n            var val;\n            var isRejected;\n            return _this.then(function (value) {\n                isRejected = false;\n                val = value;\n                if (onfinally) {\n                    onfinally();\n                }\n            }, function (reason) {\n                isRejected = true;\n                val = reason;\n                if (onfinally) {\n                    onfinally();\n                }\n            }).then(function () {\n                if (isRejected) {\n                    reject(val);\n                    return;\n                }\n                resolve(val);\n            });\n        });\n    };\n    /** JSDoc */\n    SyncPromise.prototype.toString = function () {\n        return '[object SyncPromise]';\n    };\n    return SyncPromise;\n}());\nexport { SyncPromise };\n//# sourceMappingURL=syncpromise.js.map","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/**\n * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n */\nvar Memo = /** @class */ (function () {\n    function Memo() {\n        this._hasWeakSet = typeof WeakSet === 'function';\n        this._inner = this._hasWeakSet ? new WeakSet() : [];\n    }\n    /**\n     * Sets obj to remember.\n     * @param obj Object to remember\n     */\n    Memo.prototype.memoize = function (obj) {\n        if (this._hasWeakSet) {\n            if (this._inner.has(obj)) {\n                return true;\n            }\n            this._inner.add(obj);\n            return false;\n        }\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (var i = 0; i < this._inner.length; i++) {\n            var value = this._inner[i];\n            if (value === obj) {\n                return true;\n            }\n        }\n        this._inner.push(obj);\n        return false;\n    };\n    /**\n     * Removes object from internal storage.\n     * @param obj Object to forget\n     */\n    Memo.prototype.unmemoize = function (obj) {\n        if (this._hasWeakSet) {\n            this._inner.delete(obj);\n        }\n        else {\n            for (var i = 0; i < this._inner.length; i++) {\n                if (this._inner[i] === obj) {\n                    this._inner.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    return Memo;\n}());\nexport { Memo };\n//# sourceMappingURL=memo.js.map","import { __values } from \"tslib\";\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive, isSyntheticEvent } from './is';\nimport { Memo } from './memo';\nimport { getFunctionName, htmlTreeAsString } from './misc';\nimport { truncate } from './string';\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacement A function that should be used to wrap a given method.\n * @returns void\n */\nexport function fill(source, name, replacement) {\n    if (!(name in source)) {\n        return;\n    }\n    var original = source[name];\n    var wrapped = replacement(original);\n    // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n    // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n    if (typeof wrapped === 'function') {\n        try {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __sentry_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n            });\n        }\n        catch (_Oo) {\n            // This can throw if multiple fill happens on a global object like XMLHttpRequest\n            // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n        }\n    }\n    source[name] = wrapped;\n}\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object) {\n    return Object.keys(object)\n        .map(function (key) { return encodeURIComponent(key) + \"=\" + encodeURIComponent(object[key]); })\n        .join('&');\n}\n/**\n * Transforms any object into an object literal with all it's attributes\n * attached to it.\n *\n * @param value Initial source that we have to transform in order to be usable by the serializer\n */\nfunction getWalkSource(value) {\n    if (isError(value)) {\n        var error = value;\n        var err = {\n            message: error.message,\n            name: error.name,\n            stack: error.stack,\n        };\n        for (var i in error) {\n            if (Object.prototype.hasOwnProperty.call(error, i)) {\n                err[i] = error[i];\n            }\n        }\n        return err;\n    }\n    if (isEvent(value)) {\n        var event_1 = value;\n        var source = {};\n        source.type = event_1.type;\n        // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n        try {\n            source.target = isElement(event_1.target)\n                ? htmlTreeAsString(event_1.target)\n                : Object.prototype.toString.call(event_1.target);\n        }\n        catch (_oO) {\n            source.target = '<unknown>';\n        }\n        try {\n            source.currentTarget = isElement(event_1.currentTarget)\n                ? htmlTreeAsString(event_1.currentTarget)\n                : Object.prototype.toString.call(event_1.currentTarget);\n        }\n        catch (_oO) {\n            source.currentTarget = '<unknown>';\n        }\n        if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n            source.detail = event_1.detail;\n        }\n        for (var i in event_1) {\n            if (Object.prototype.hasOwnProperty.call(event_1, i)) {\n                source[i] = event_1;\n            }\n        }\n        return source;\n    }\n    return value;\n}\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n    // eslint-disable-next-line no-bitwise\n    return ~-encodeURI(value).split(/%..|./).length;\n}\n/** Calculates bytes size of input object */\nfunction jsonSize(value) {\n    return utf8Length(JSON.stringify(value));\n}\n/** JSDoc */\nexport function normalizeToSize(object, \n// Default Node.js REPL depth\ndepth, \n// 100kB, as 200kB is max payload size, so half sounds reasonable\nmaxSize) {\n    if (depth === void 0) { depth = 3; }\n    if (maxSize === void 0) { maxSize = 100 * 1024; }\n    var serialized = normalize(object, depth);\n    if (jsonSize(serialized) > maxSize) {\n        return normalizeToSize(object, depth - 1, maxSize);\n    }\n    return serialized;\n}\n/** Transforms any input value into a string form, either primitive value or a type of the input */\nfunction serializeValue(value) {\n    var type = Object.prototype.toString.call(value);\n    // Node.js REPL notation\n    if (typeof value === 'string') {\n        return value;\n    }\n    if (type === '[object Object]') {\n        return '[Object]';\n    }\n    if (type === '[object Array]') {\n        return '[Array]';\n    }\n    var normalized = normalizeValue(value);\n    return isPrimitive(normalized) ? normalized : type;\n}\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\nfunction normalizeValue(value, key) {\n    if (key === 'domain' && value && typeof value === 'object' && value._events) {\n        return '[Domain]';\n    }\n    if (key === 'domainEmitter') {\n        return '[DomainEmitter]';\n    }\n    if (typeof global !== 'undefined' && value === global) {\n        return '[Global]';\n    }\n    if (typeof window !== 'undefined' && value === window) {\n        return '[Window]';\n    }\n    if (typeof document !== 'undefined' && value === document) {\n        return '[Document]';\n    }\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n        return '[SyntheticEvent]';\n    }\n    if (typeof value === 'number' && value !== value) {\n        return '[NaN]';\n    }\n    if (value === void 0) {\n        return '[undefined]';\n    }\n    if (typeof value === 'function') {\n        return \"[Function: \" + getFunctionName(value) + \"]\";\n    }\n    return value;\n}\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function walk(key, value, depth, memo) {\n    if (depth === void 0) { depth = +Infinity; }\n    if (memo === void 0) { memo = new Memo(); }\n    // If we reach the maximum depth, serialize whatever has left\n    if (depth === 0) {\n        return serializeValue(value);\n    }\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n    // If value implements `toJSON` method, call it and return early\n    if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n        return value.toJSON();\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n    // If normalized value is a primitive, there are no branches left to walk, so we can just bail out, as theres no point in going down that branch any further\n    var normalized = normalizeValue(value, key);\n    if (isPrimitive(normalized)) {\n        return normalized;\n    }\n    // Create source that we will use for next itterations, either objectified error object (Error type with extracted keys:value pairs) or the input itself\n    var source = getWalkSource(value);\n    // Create an accumulator that will act as a parent for all future itterations of that branch\n    var acc = Array.isArray(value) ? [] : {};\n    // If we already walked that branch, bail out, as it's circular reference\n    if (memo.memoize(value)) {\n        return '[Circular ~]';\n    }\n    // Walk all keys of the source\n    for (var innerKey in source) {\n        // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n        if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n            continue;\n        }\n        // Recursively walk through all the child nodes\n        acc[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n    }\n    // Once walked through all the branches, remove the parent from memo storage\n    memo.unmemoize(value);\n    // Return accumulated values\n    return acc;\n}\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function normalize(input, depth) {\n    try {\n        return JSON.parse(JSON.stringify(input, function (key, value) { return walk(key, value, depth); }));\n    }\n    catch (_oO) {\n        return '**non-serializable**';\n    }\n}\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function extractExceptionKeysForMessage(exception, maxLength) {\n    if (maxLength === void 0) { maxLength = 40; }\n    var keys = Object.keys(getWalkSource(exception));\n    keys.sort();\n    if (!keys.length) {\n        return '[object has no keys]';\n    }\n    if (keys[0].length >= maxLength) {\n        return truncate(keys[0], maxLength);\n    }\n    for (var includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n        var serialized = keys.slice(0, includedKeys).join(', ');\n        if (serialized.length > maxLength) {\n            continue;\n        }\n        if (includedKeys === keys.length) {\n            return serialized;\n        }\n        return truncate(serialized, maxLength);\n    }\n    return '';\n}\n/**\n * Given any object, return the new object with removed keys that value was `undefined`.\n * Works recursively on objects and arrays.\n */\nexport function dropUndefinedKeys(val) {\n    var e_1, _a;\n    if (isPlainObject(val)) {\n        var obj = val;\n        var rv = {};\n        try {\n            for (var _b = __values(Object.keys(obj)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                if (typeof obj[key] !== 'undefined') {\n                    rv[key] = dropUndefinedKeys(obj[key]);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return rv;\n    }\n    if (Array.isArray(val)) {\n        return val.map(dropUndefinedKeys);\n    }\n    return val;\n}\n//# sourceMappingURL=object.js.map","import { SentryError } from './error';\nimport { SyncPromise } from './syncpromise';\n/** A simple queue that holds promises. */\nvar PromiseBuffer = /** @class */ (function () {\n    function PromiseBuffer(_limit) {\n        this._limit = _limit;\n        /** Internal set of queued Promises */\n        this._buffer = [];\n    }\n    /**\n     * Says if the buffer is ready to take more requests\n     */\n    PromiseBuffer.prototype.isReady = function () {\n        return this._limit === undefined || this.length() < this._limit;\n    };\n    /**\n     * Add a promise to the queue.\n     *\n     * @param task Can be any PromiseLike<T>\n     * @returns The original promise.\n     */\n    PromiseBuffer.prototype.add = function (task) {\n        var _this = this;\n        if (!this.isReady()) {\n            return SyncPromise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n        }\n        if (this._buffer.indexOf(task) === -1) {\n            this._buffer.push(task);\n        }\n        task\n            .then(function () { return _this.remove(task); })\n            .then(null, function () {\n            return _this.remove(task).then(null, function () {\n                // We have to add this catch here otherwise we have an unhandledPromiseRejection\n                // because it's a new Promise chain.\n            });\n        });\n        return task;\n    };\n    /**\n     * Remove a promise to the queue.\n     *\n     * @param task Can be any PromiseLike<T>\n     * @returns Removed promise.\n     */\n    PromiseBuffer.prototype.remove = function (task) {\n        var removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n        return removedTask;\n    };\n    /**\n     * This function returns the number of unresolved promises in the queue.\n     */\n    PromiseBuffer.prototype.length = function () {\n        return this._buffer.length;\n    };\n    /**\n     * This will drain the whole queue, returns true if queue is empty or drained.\n     * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n     *\n     * @param timeout Number in ms to wait until it resolves with false.\n     */\n    PromiseBuffer.prototype.drain = function (timeout) {\n        var _this = this;\n        return new SyncPromise(function (resolve) {\n            var capturedSetTimeout = setTimeout(function () {\n                if (timeout && timeout > 0) {\n                    resolve(false);\n                }\n            }, timeout);\n            SyncPromise.all(_this._buffer)\n                .then(function () {\n                clearTimeout(capturedSetTimeout);\n                resolve(true);\n            })\n                .then(null, function () {\n                resolve(true);\n            });\n        });\n    };\n    return PromiseBuffer;\n}());\nexport { PromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map","import { logger } from './logger';\nimport { getGlobalObject } from './misc';\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent() {\n    try {\n        new ErrorEvent('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError() {\n    try {\n        // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n        // 1 argument required, but only 0 present.\n        // @ts-ignore It really needs 1 argument, not 0.\n        new DOMError('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException() {\n    try {\n        new DOMException('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch() {\n    if (!('fetch' in getGlobalObject())) {\n        return false;\n    }\n    try {\n        new Headers();\n        new Request('');\n        new Response();\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFetch(func) {\n    return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch() {\n    if (!supportsFetch()) {\n        return false;\n    }\n    var global = getGlobalObject();\n    // Fast path to avoid DOM I/O\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    if (isNativeFetch(global.fetch)) {\n        return true;\n    }\n    // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n    // so create a \"pure\" iframe to see if that has native fetch\n    var result = false;\n    var doc = global.document;\n    // eslint-disable-next-line deprecation/deprecation\n    if (doc && typeof doc.createElement === \"function\") {\n        try {\n            var sandbox = doc.createElement('iframe');\n            sandbox.hidden = true;\n            doc.head.appendChild(sandbox);\n            if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                result = isNativeFetch(sandbox.contentWindow.fetch);\n            }\n            doc.head.removeChild(sandbox);\n        }\n        catch (err) {\n            logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n        }\n    }\n    return result;\n}\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver() {\n    return 'ReportingObserver' in getGlobalObject();\n}\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy() {\n    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n    // https://caniuse.com/#feat=referrer-policy\n    // It doesn't. And it throw exception instead of ignoring this parameter...\n    // REF: https://github.com/getsentry/raven-js/issues/1233\n    if (!supportsFetch()) {\n        return false;\n    }\n    try {\n        new Request('_', {\n            referrerPolicy: 'origin',\n        });\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory() {\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var global = getGlobalObject();\n    /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var chrome = global.chrome;\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n    var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n    return !isChromePackagedApp && hasHistoryApi;\n}\n//# sourceMappingURL=supports.js.map","import { __assign, __values } from \"tslib\";\nimport { isInstanceOf, isString } from './is';\nimport { logger } from './logger';\nimport { getFunctionName, getGlobalObject } from './misc';\nimport { fill } from './object';\nimport { supportsHistory, supportsNativeFetch } from './supports';\nvar global = getGlobalObject();\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\nvar handlers = {};\nvar instrumented = {};\n/** Instruments given API */\nfunction instrument(type) {\n    if (instrumented[type]) {\n        return;\n    }\n    instrumented[type] = true;\n    switch (type) {\n        case 'console':\n            instrumentConsole();\n            break;\n        case 'dom':\n            instrumentDOM();\n            break;\n        case 'xhr':\n            instrumentXHR();\n            break;\n        case 'fetch':\n            instrumentFetch();\n            break;\n        case 'history':\n            instrumentHistory();\n            break;\n        case 'error':\n            instrumentError();\n            break;\n        case 'unhandledrejection':\n            instrumentUnhandledRejection();\n            break;\n        default:\n            logger.warn('unknown instrumentation type:', type);\n    }\n}\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(handler) {\n    if (!handler || typeof handler.type !== 'string' || typeof handler.callback !== 'function') {\n        return;\n    }\n    handlers[handler.type] = handlers[handler.type] || [];\n    handlers[handler.type].push(handler.callback);\n    instrument(handler.type);\n}\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n    var e_1, _a;\n    if (!type || !handlers[type]) {\n        return;\n    }\n    try {\n        for (var _b = __values(handlers[type] || []), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var handler = _c.value;\n            try {\n                handler(data);\n            }\n            catch (e) {\n                logger.error(\"Error while triggering instrumentation handler.\\nType: \" + type + \"\\nName: \" + getFunctionName(handler) + \"\\nError: \" + e);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\n/** JSDoc */\nfunction instrumentConsole() {\n    if (!('console' in global)) {\n        return;\n    }\n    ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function (level) {\n        if (!(level in global.console)) {\n            return;\n        }\n        fill(global.console, level, function (originalConsoleLevel) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                triggerHandlers('console', { args: args, level: level });\n                // this fails for some browsers. :(\n                if (originalConsoleLevel) {\n                    Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n                }\n            };\n        });\n    });\n}\n/** JSDoc */\nfunction instrumentFetch() {\n    if (!supportsNativeFetch()) {\n        return;\n    }\n    fill(global, 'fetch', function (originalFetch) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var commonHandlerData = {\n                args: args,\n                fetchData: {\n                    method: getFetchMethod(args),\n                    url: getFetchUrl(args),\n                },\n                startTimestamp: Date.now(),\n            };\n            triggerHandlers('fetch', __assign({}, commonHandlerData));\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            return originalFetch.apply(global, args).then(function (response) {\n                triggerHandlers('fetch', __assign(__assign({}, commonHandlerData), { endTimestamp: Date.now(), response: response }));\n                return response;\n            }, function (error) {\n                triggerHandlers('fetch', __assign(__assign({}, commonHandlerData), { endTimestamp: Date.now(), error: error }));\n                // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n                //       it means the sentry.javascript SDK caught an error invoking your application code.\n                //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n                throw error;\n            });\n        };\n    });\n}\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs) {\n    if (fetchArgs === void 0) { fetchArgs = []; }\n    if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n        return String(fetchArgs[0].method).toUpperCase();\n    }\n    if (fetchArgs[1] && fetchArgs[1].method) {\n        return String(fetchArgs[1].method).toUpperCase();\n    }\n    return 'GET';\n}\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs) {\n    if (fetchArgs === void 0) { fetchArgs = []; }\n    if (typeof fetchArgs[0] === 'string') {\n        return fetchArgs[0];\n    }\n    if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n        return fetchArgs[0].url;\n    }\n    return String(fetchArgs[0]);\n}\n/* eslint-enable @typescript-eslint/no-unsafe-member-access */\n/** JSDoc */\nfunction instrumentXHR() {\n    if (!('XMLHttpRequest' in global)) {\n        return;\n    }\n    var xhrproto = XMLHttpRequest.prototype;\n    fill(xhrproto, 'open', function (originalOpen) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var xhr = this;\n            var url = args[1];\n            xhr.__sentry_xhr__ = {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n                url: args[1],\n            };\n            // if Sentry key appears in URL, don't capture it as a request\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (isString(url) && xhr.__sentry_xhr__.method === 'POST' && url.match(/sentry_key/)) {\n                xhr.__sentry_own_request__ = true;\n            }\n            var onreadystatechangeHandler = function () {\n                if (xhr.readyState === 4) {\n                    try {\n                        // touching statusCode in some platforms throws\n                        // an exception\n                        if (xhr.__sentry_xhr__) {\n                            xhr.__sentry_xhr__.status_code = xhr.status;\n                        }\n                    }\n                    catch (e) {\n                        /* do nothing */\n                    }\n                    triggerHandlers('xhr', {\n                        args: args,\n                        endTimestamp: Date.now(),\n                        startTimestamp: Date.now(),\n                        xhr: xhr,\n                    });\n                }\n            };\n            if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n                fill(xhr, 'onreadystatechange', function (original) {\n                    return function () {\n                        var readyStateArgs = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            readyStateArgs[_i] = arguments[_i];\n                        }\n                        onreadystatechangeHandler();\n                        return original.apply(xhr, readyStateArgs);\n                    };\n                });\n            }\n            else {\n                xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n            }\n            return originalOpen.apply(xhr, args);\n        };\n    });\n    fill(xhrproto, 'send', function (originalSend) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            triggerHandlers('xhr', {\n                args: args,\n                startTimestamp: Date.now(),\n                xhr: this,\n            });\n            return originalSend.apply(this, args);\n        };\n    });\n}\nvar lastHref;\n/** JSDoc */\nfunction instrumentHistory() {\n    if (!supportsHistory()) {\n        return;\n    }\n    var oldOnPopState = global.onpopstate;\n    global.onpopstate = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var to = global.location.href;\n        // keep track of the current URL state, as we always receive only the updated state\n        var from = lastHref;\n        lastHref = to;\n        triggerHandlers('history', {\n            from: from,\n            to: to,\n        });\n        if (oldOnPopState) {\n            return oldOnPopState.apply(this, args);\n        }\n    };\n    /** @hidden */\n    function historyReplacementFunction(originalHistoryFunction) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var url = args.length > 2 ? args[2] : undefined;\n            if (url) {\n                // coerce to string (this is what pushState does)\n                var from = lastHref;\n                var to = String(url);\n                // keep track of the current URL state, as we always receive only the updated state\n                lastHref = to;\n                triggerHandlers('history', {\n                    from: from,\n                    to: to,\n                });\n            }\n            return originalHistoryFunction.apply(this, args);\n        };\n    }\n    fill(global.history, 'pushState', historyReplacementFunction);\n    fill(global.history, 'replaceState', historyReplacementFunction);\n}\n/** JSDoc */\nfunction instrumentDOM() {\n    if (!('document' in global)) {\n        return;\n    }\n    // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n    global.document.addEventListener('click', domEventHandler('click', triggerHandlers.bind(null, 'dom')), false);\n    global.document.addEventListener('keypress', keypressEventHandler(triggerHandlers.bind(null, 'dom')), false);\n    // After hooking into document bubbled up click and keypresses events, we also hook into user handled click & keypresses.\n    ['EventTarget', 'Node'].forEach(function (target) {\n        /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n        var proto = global[target] && global[target].prototype;\n        // eslint-disable-next-line no-prototype-builtins\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n            return;\n        }\n        /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n        fill(proto, 'addEventListener', function (original) {\n            return function (eventName, fn, options) {\n                if (fn && fn.handleEvent) {\n                    if (eventName === 'click') {\n                        fill(fn, 'handleEvent', function (innerOriginal) {\n                            return function (event) {\n                                domEventHandler('click', triggerHandlers.bind(null, 'dom'))(event);\n                                return innerOriginal.call(this, event);\n                            };\n                        });\n                    }\n                    if (eventName === 'keypress') {\n                        fill(fn, 'handleEvent', function (innerOriginal) {\n                            return function (event) {\n                                keypressEventHandler(triggerHandlers.bind(null, 'dom'))(event);\n                                return innerOriginal.call(this, event);\n                            };\n                        });\n                    }\n                }\n                else {\n                    if (eventName === 'click') {\n                        domEventHandler('click', triggerHandlers.bind(null, 'dom'), true)(this);\n                    }\n                    if (eventName === 'keypress') {\n                        keypressEventHandler(triggerHandlers.bind(null, 'dom'))(this);\n                    }\n                }\n                return original.call(this, eventName, fn, options);\n            };\n        });\n        fill(proto, 'removeEventListener', function (original) {\n            return function (eventName, fn, options) {\n                try {\n                    original.call(this, eventName, fn.__sentry_wrapped__, options);\n                }\n                catch (e) {\n                    // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                }\n                return original.call(this, eventName, fn, options);\n            };\n        });\n    });\n}\nvar debounceDuration = 1000;\nvar debounceTimer = 0;\nvar keypressTimeout;\nvar lastCapturedEvent;\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param name the event name (e.g. \"click\")\n * @param handler function that will be triggered\n * @param debounce decides whether it should wait till another event loop\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction domEventHandler(name, handler, debounce) {\n    if (debounce === void 0) { debounce = false; }\n    return function (event) {\n        // reset keypress timeout; e.g. triggering a 'click' after\n        // a 'keypress' will reset the keypress debounce so that a new\n        // set of keypresses can be recorded\n        keypressTimeout = undefined;\n        // It's possible this handler might trigger multiple times for the same\n        // event (e.g. event propagation through node ancestors). Ignore if we've\n        // already captured the event.\n        if (!event || lastCapturedEvent === event) {\n            return;\n        }\n        lastCapturedEvent = event;\n        if (debounceTimer) {\n            clearTimeout(debounceTimer);\n        }\n        if (debounce) {\n            debounceTimer = setTimeout(function () {\n                handler({ event: event, name: name });\n            });\n        }\n        else {\n            handler({ event: event, name: name });\n        }\n    };\n}\n/**\n * Wraps addEventListener to capture keypress UI events\n * @param handler function that will be triggered\n * @returns wrapped keypress events handler\n * @hidden\n */\nfunction keypressEventHandler(handler) {\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n    return function (event) {\n        var target;\n        try {\n            target = event.target;\n        }\n        catch (e) {\n            // just accessing event properties can throw an exception in some rare circumstances\n            // see: https://github.com/getsentry/raven-js/issues/838\n            return;\n        }\n        var tagName = target && target.tagName;\n        // only consider keypress events on actual input elements\n        // this will disregard keypresses targeting body (e.g. tabbing\n        // through elements, hotkeys, etc)\n        if (!tagName || (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)) {\n            return;\n        }\n        // record first keypress in a series, but ignore subsequent\n        // keypresses until debounce clears\n        if (!keypressTimeout) {\n            domEventHandler('input', handler)(event);\n        }\n        clearTimeout(keypressTimeout);\n        keypressTimeout = setTimeout(function () {\n            keypressTimeout = undefined;\n        }, debounceDuration);\n    };\n}\nvar _oldOnErrorHandler = null;\n/** JSDoc */\nfunction instrumentError() {\n    _oldOnErrorHandler = global.onerror;\n    global.onerror = function (msg, url, line, column, error) {\n        triggerHandlers('error', {\n            column: column,\n            error: error,\n            line: line,\n            msg: msg,\n            url: url,\n        });\n        if (_oldOnErrorHandler) {\n            // eslint-disable-next-line prefer-rest-params\n            return _oldOnErrorHandler.apply(this, arguments);\n        }\n        return false;\n    };\n}\nvar _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection() {\n    _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n    global.onunhandledrejection = function (e) {\n        triggerHandlers('unhandledrejection', e);\n        if (_oldOnUnhandledRejectionHandler) {\n            // eslint-disable-next-line prefer-rest-params\n            return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n        }\n        return true;\n    };\n}\n//# sourceMappingURL=instrument.js.map","import { __read } from \"tslib\";\nimport { SentryError } from './error';\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n/** Error message */\nvar ERROR_MESSAGE = 'Invalid Dsn';\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nvar Dsn = /** @class */ (function () {\n    /** Creates a new Dsn component */\n    function Dsn(from) {\n        if (typeof from === 'string') {\n            this._fromString(from);\n        }\n        else {\n            this._fromComponents(from);\n        }\n        this._validate();\n    }\n    /**\n     * Renders the string representation of this Dsn.\n     *\n     * By default, this will render the public representation without the password\n     * component. To get the deprecated private representation, set `withPassword`\n     * to true.\n     *\n     * @param withPassword When set to true, the password will be included.\n     */\n    Dsn.prototype.toString = function (withPassword) {\n        if (withPassword === void 0) { withPassword = false; }\n        var _a = this, host = _a.host, path = _a.path, pass = _a.pass, port = _a.port, projectId = _a.projectId, protocol = _a.protocol, user = _a.user;\n        return (protocol + \"://\" + user + (withPassword && pass ? \":\" + pass : '') +\n            (\"@\" + host + (port ? \":\" + port : '') + \"/\" + (path ? path + \"/\" : path) + projectId));\n    };\n    /** Parses a string into this Dsn. */\n    Dsn.prototype._fromString = function (str) {\n        var match = DSN_REGEX.exec(str);\n        if (!match) {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n        var _a = __read(match.slice(1), 6), protocol = _a[0], user = _a[1], _b = _a[2], pass = _b === void 0 ? '' : _b, host = _a[3], _c = _a[4], port = _c === void 0 ? '' : _c, lastPath = _a[5];\n        var path = '';\n        var projectId = lastPath;\n        var split = projectId.split('/');\n        if (split.length > 1) {\n            path = split.slice(0, -1).join('/');\n            projectId = split.pop();\n        }\n        if (projectId) {\n            var projectMatch = projectId.match(/^\\d+/);\n            if (projectMatch) {\n                projectId = projectMatch[0];\n            }\n        }\n        this._fromComponents({ host: host, pass: pass, path: path, projectId: projectId, port: port, protocol: protocol, user: user });\n    };\n    /** Maps Dsn components into this instance. */\n    Dsn.prototype._fromComponents = function (components) {\n        this.protocol = components.protocol;\n        this.user = components.user;\n        this.pass = components.pass || '';\n        this.host = components.host;\n        this.port = components.port || '';\n        this.path = components.path || '';\n        this.projectId = components.projectId;\n    };\n    /** Validates this Dsn and throws on error. */\n    Dsn.prototype._validate = function () {\n        var _this = this;\n        ['protocol', 'user', 'host', 'projectId'].forEach(function (component) {\n            if (!_this[component]) {\n                throw new SentryError(ERROR_MESSAGE + \": \" + component + \" missing\");\n            }\n        });\n        if (!this.projectId.match(/^\\d+$/)) {\n            throw new SentryError(ERROR_MESSAGE + \": Invalid projectId \" + this.projectId);\n        }\n        if (this.protocol !== 'http' && this.protocol !== 'https') {\n            throw new SentryError(ERROR_MESSAGE + \": Invalid protocol \" + this.protocol);\n        }\n        if (this.port && isNaN(parseInt(this.port, 10))) {\n            throw new SentryError(ERROR_MESSAGE + \": Invalid port \" + this.port);\n        }\n    };\n    return Dsn;\n}());\nexport { Dsn };\n//# sourceMappingURL=dsn.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { getGlobalObject, isPlainObject, isThenable, SyncPromise, timestampWithMs } from '@sentry/utils';\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nvar Scope = /** @class */ (function () {\n    function Scope() {\n        /** Flag if notifiying is happening. */\n        this._notifyingListeners = false;\n        /** Callback for client to receive scope changes. */\n        this._scopeListeners = [];\n        /** Callback list that will be called after {@link applyToEvent}. */\n        this._eventProcessors = [];\n        /** Array of breadcrumbs. */\n        this._breadcrumbs = [];\n        /** User */\n        this._user = {};\n        /** Tags */\n        this._tags = {};\n        /** Extra */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this._extra = {};\n        /** Contexts */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this._contexts = {};\n    }\n    /**\n     * Inherit values from the parent scope.\n     * @param scope to clone.\n     */\n    Scope.clone = function (scope) {\n        var newScope = new Scope();\n        if (scope) {\n            newScope._breadcrumbs = __spread(scope._breadcrumbs);\n            newScope._tags = __assign({}, scope._tags);\n            newScope._extra = __assign({}, scope._extra);\n            newScope._contexts = __assign({}, scope._contexts);\n            newScope._user = scope._user;\n            newScope._level = scope._level;\n            newScope._span = scope._span;\n            newScope._transactionName = scope._transactionName;\n            newScope._fingerprint = scope._fingerprint;\n            newScope._eventProcessors = __spread(scope._eventProcessors);\n        }\n        return newScope;\n    };\n    /**\n     * Add internal on change listener. Used for sub SDKs that need to store the scope.\n     * @hidden\n     */\n    Scope.prototype.addScopeListener = function (callback) {\n        this._scopeListeners.push(callback);\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addEventProcessor = function (callback) {\n        this._eventProcessors.push(callback);\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setUser = function (user) {\n        this._user = user || {};\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTags = function (tags) {\n        this._tags = __assign(__assign({}, this._tags), tags);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTag = function (key, value) {\n        var _a;\n        this._tags = __assign(__assign({}, this._tags), (_a = {}, _a[key] = value, _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtras = function (extras) {\n        this._extra = __assign(__assign({}, this._extra), extras);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtra = function (key, extra) {\n        var _a;\n        this._extra = __assign(__assign({}, this._extra), (_a = {}, _a[key] = extra, _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setFingerprint = function (fingerprint) {\n        this._fingerprint = fingerprint;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setLevel = function (level) {\n        this._level = level;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTransactionName = function (name) {\n        this._transactionName = name;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Can be removed in major version.\n     * @deprecated in favor of {@link this.setTransactionName}\n     */\n    Scope.prototype.setTransaction = function (name) {\n        return this.setTransactionName(name);\n    };\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Scope.prototype.setContext = function (key, context) {\n        var _a;\n        this._contexts = __assign(__assign({}, this._contexts), (_a = {}, _a[key] = context, _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setSpan = function (span) {\n        this._span = span;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getSpan = function () {\n        return this._span;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.getTransaction = function () {\n        var span = this.getSpan();\n        if (span && span.spanRecorder && span.spanRecorder.spans[0]) {\n            return span.spanRecorder.spans[0];\n        }\n        return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.update = function (captureContext) {\n        if (!captureContext) {\n            return this;\n        }\n        if (typeof captureContext === 'function') {\n            var updatedScope = captureContext(this);\n            return updatedScope instanceof Scope ? updatedScope : this;\n        }\n        if (captureContext instanceof Scope) {\n            this._tags = __assign(__assign({}, this._tags), captureContext._tags);\n            this._extra = __assign(__assign({}, this._extra), captureContext._extra);\n            this._contexts = __assign(__assign({}, this._contexts), captureContext._contexts);\n            if (captureContext._user) {\n                this._user = captureContext._user;\n            }\n            if (captureContext._level) {\n                this._level = captureContext._level;\n            }\n            if (captureContext._fingerprint) {\n                this._fingerprint = captureContext._fingerprint;\n            }\n        }\n        else if (isPlainObject(captureContext)) {\n            // eslint-disable-next-line no-param-reassign\n            captureContext = captureContext;\n            this._tags = __assign(__assign({}, this._tags), captureContext.tags);\n            this._extra = __assign(__assign({}, this._extra), captureContext.extra);\n            this._contexts = __assign(__assign({}, this._contexts), captureContext.contexts);\n            if (captureContext.user) {\n                this._user = captureContext.user;\n            }\n            if (captureContext.level) {\n                this._level = captureContext.level;\n            }\n            if (captureContext.fingerprint) {\n                this._fingerprint = captureContext.fingerprint;\n            }\n        }\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clear = function () {\n        this._breadcrumbs = [];\n        this._tags = {};\n        this._extra = {};\n        this._user = {};\n        this._contexts = {};\n        this._level = undefined;\n        this._transactionName = undefined;\n        this._fingerprint = undefined;\n        this._span = undefined;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addBreadcrumb = function (breadcrumb, maxBreadcrumbs) {\n        var mergedBreadcrumb = __assign({ timestamp: timestampWithMs() }, breadcrumb);\n        this._breadcrumbs =\n            maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n                ? __spread(this._breadcrumbs, [mergedBreadcrumb]).slice(-maxBreadcrumbs)\n                : __spread(this._breadcrumbs, [mergedBreadcrumb]);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clearBreadcrumbs = function () {\n        this._breadcrumbs = [];\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Applies the current context and fingerprint to the event.\n     * Note that breadcrumbs will be added by the client.\n     * Also if the event has already breadcrumbs on it, we do not merge them.\n     * @param event Event\n     * @param hint May contain additional informartion about the original exception.\n     * @hidden\n     */\n    Scope.prototype.applyToEvent = function (event, hint) {\n        if (this._extra && Object.keys(this._extra).length) {\n            event.extra = __assign(__assign({}, this._extra), event.extra);\n        }\n        if (this._tags && Object.keys(this._tags).length) {\n            event.tags = __assign(__assign({}, this._tags), event.tags);\n        }\n        if (this._user && Object.keys(this._user).length) {\n            event.user = __assign(__assign({}, this._user), event.user);\n        }\n        if (this._contexts && Object.keys(this._contexts).length) {\n            event.contexts = __assign(__assign({}, this._contexts), event.contexts);\n        }\n        if (this._level) {\n            event.level = this._level;\n        }\n        if (this._transactionName) {\n            event.transaction = this._transactionName;\n        }\n        // We want to set the trace context for normal events only if there isn't already\n        // a trace context on the event. There is a product feature in place where we link\n        // errors with transaction and it relys on that.\n        if (this._span) {\n            event.contexts = __assign({ trace: this._span.getTraceContext() }, event.contexts);\n        }\n        this._applyFingerprint(event);\n        event.breadcrumbs = __spread((event.breadcrumbs || []), this._breadcrumbs);\n        event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n        return this._notifyEventProcessors(__spread(getGlobalEventProcessors(), this._eventProcessors), event, hint);\n    };\n    /**\n     * This will be called after {@link applyToEvent} is finished.\n     */\n    Scope.prototype._notifyEventProcessors = function (processors, event, hint, index) {\n        var _this = this;\n        if (index === void 0) { index = 0; }\n        return new SyncPromise(function (resolve, reject) {\n            var processor = processors[index];\n            if (event === null || typeof processor !== 'function') {\n                resolve(event);\n            }\n            else {\n                var result = processor(__assign({}, event), hint);\n                if (isThenable(result)) {\n                    result\n                        .then(function (final) { return _this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve); })\n                        .then(null, reject);\n                }\n                else {\n                    _this._notifyEventProcessors(processors, result, hint, index + 1)\n                        .then(resolve)\n                        .then(null, reject);\n                }\n            }\n        });\n    };\n    /**\n     * This will be called on every set call.\n     */\n    Scope.prototype._notifyScopeListeners = function () {\n        var _this = this;\n        if (!this._notifyingListeners) {\n            this._notifyingListeners = true;\n            setTimeout(function () {\n                _this._scopeListeners.forEach(function (callback) {\n                    callback(_this);\n                });\n                _this._notifyingListeners = false;\n            });\n        }\n    };\n    /**\n     * Applies fingerprint from the scope to the event if there's one,\n     * uses message if there's one instead or get rid of empty fingerprint\n     */\n    Scope.prototype._applyFingerprint = function (event) {\n        // Make sure it's an array first and we actually have something in place\n        event.fingerprint = event.fingerprint\n            ? Array.isArray(event.fingerprint)\n                ? event.fingerprint\n                : [event.fingerprint]\n            : [];\n        // If we have something on the scope, then merge it with event\n        if (this._fingerprint) {\n            event.fingerprint = event.fingerprint.concat(this._fingerprint);\n        }\n        // If we have no data at all, remove empty array default\n        if (event.fingerprint && !event.fingerprint.length) {\n            delete event.fingerprint;\n        }\n    };\n    return Scope;\n}());\nexport { Scope };\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n    var global = getGlobalObject();\n    global.__SENTRY__ = global.__SENTRY__ || {};\n    global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n    return global.__SENTRY__.globalEventProcessors;\n}\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback) {\n    getGlobalEventProcessors().push(callback);\n}\n//# sourceMappingURL=scope.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { consoleSandbox, getGlobalObject, isNodeEnv, logger, timestampWithMs, uuid4 } from '@sentry/utils';\nimport { Scope } from './scope';\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport var API_VERSION = 3;\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 100;\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n/**\n * @inheritDoc\n */\nvar Hub = /** @class */ (function () {\n    /**\n     * Creates a new instance of the hub, will push one {@link Layer} into the\n     * internal stack on creation.\n     *\n     * @param client bound to the hub.\n     * @param scope bound to the hub.\n     * @param version number, higher number means higher priority.\n     */\n    function Hub(client, scope, _version) {\n        if (scope === void 0) { scope = new Scope(); }\n        if (_version === void 0) { _version = API_VERSION; }\n        this._version = _version;\n        /** Is a {@link Layer}[] containing the client and scope */\n        this._stack = [];\n        this._stack.push({ client: client, scope: scope });\n        this.bindClient(client);\n    }\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.isOlderThan = function (version) {\n        return this._version < version;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.bindClient = function (client) {\n        var top = this.getStackTop();\n        top.client = client;\n        if (client && client.setupIntegrations) {\n            client.setupIntegrations();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.pushScope = function () {\n        // We want to clone the content of prev scope\n        var stack = this.getStack();\n        var parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;\n        var scope = Scope.clone(parentScope);\n        this.getStack().push({\n            client: this.getClient(),\n            scope: scope,\n        });\n        return scope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.popScope = function () {\n        return this.getStack().pop() !== undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.withScope = function (callback) {\n        var scope = this.pushScope();\n        try {\n            callback(scope);\n        }\n        finally {\n            this.popScope();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getClient = function () {\n        return this.getStackTop().client;\n    };\n    /** Returns the scope of the top stack. */\n    Hub.prototype.getScope = function () {\n        return this.getStackTop().scope;\n    };\n    /** Returns the scope stack for domains or the process. */\n    Hub.prototype.getStack = function () {\n        return this._stack;\n    };\n    /** Returns the topmost scope layer in the order domain > local > process. */\n    Hub.prototype.getStackTop = function () {\n        return this._stack[this._stack.length - 1];\n    };\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    Hub.prototype.captureException = function (exception, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        var finalHint = hint;\n        // If there's no explicit hint provided, mimick the same thing that would happen\n        // in the minimal itself to create a consistent behavior.\n        // We don't do this in the client, as it's the lowest level API, and doing this,\n        // would prevent user from having full control over direct calls.\n        if (!hint) {\n            var syntheticException = void 0;\n            try {\n                throw new Error('Sentry syntheticException');\n            }\n            catch (exception) {\n                syntheticException = exception;\n            }\n            finalHint = {\n                originalException: exception,\n                syntheticException: syntheticException,\n            };\n        }\n        this._invokeClient('captureException', exception, __assign(__assign({}, finalHint), { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureMessage = function (message, level, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        var finalHint = hint;\n        // If there's no explicit hint provided, mimick the same thing that would happen\n        // in the minimal itself to create a consistent behavior.\n        // We don't do this in the client, as it's the lowest level API, and doing this,\n        // would prevent user from having full control over direct calls.\n        if (!hint) {\n            var syntheticException = void 0;\n            try {\n                throw new Error(message);\n            }\n            catch (exception) {\n                syntheticException = exception;\n            }\n            finalHint = {\n                originalException: message,\n                syntheticException: syntheticException,\n            };\n        }\n        this._invokeClient('captureMessage', message, level, __assign(__assign({}, finalHint), { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureEvent = function (event, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        this._invokeClient('captureEvent', event, __assign(__assign({}, hint), { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.lastEventId = function () {\n        return this._lastEventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {\n        var top = this.getStackTop();\n        if (!top.scope || !top.client) {\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        var _a = (top.client.getOptions && top.client.getOptions()) || {}, _b = _a.beforeBreadcrumb, beforeBreadcrumb = _b === void 0 ? null : _b, _c = _a.maxBreadcrumbs, maxBreadcrumbs = _c === void 0 ? DEFAULT_BREADCRUMBS : _c;\n        if (maxBreadcrumbs <= 0) {\n            return;\n        }\n        var timestamp = timestampWithMs();\n        var mergedBreadcrumb = __assign({ timestamp: timestamp }, breadcrumb);\n        var finalBreadcrumb = beforeBreadcrumb\n            ? consoleSandbox(function () { return beforeBreadcrumb(mergedBreadcrumb, hint); })\n            : mergedBreadcrumb;\n        if (finalBreadcrumb === null) {\n            return;\n        }\n        top.scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setUser = function (user) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setUser(user);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setTags = function (tags) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setTags(tags);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setExtras = function (extras) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setExtras(extras);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setTag = function (key, value) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setTag(key, value);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setExtra = function (key, extra) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setExtra(key, extra);\n    };\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Hub.prototype.setContext = function (name, context) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setContext(name, context);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.configureScope = function (callback) {\n        var top = this.getStackTop();\n        if (top.scope && top.client) {\n            callback(top.scope);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.run = function (callback) {\n        var oldHub = makeMain(this);\n        try {\n            callback(this);\n        }\n        finally {\n            makeMain(oldHub);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getIntegration = function (integration) {\n        var client = this.getClient();\n        if (!client) {\n            return null;\n        }\n        try {\n            return client.getIntegration(integration);\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Hub\");\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.startSpan = function (context) {\n        return this._callExtensionMethod('startSpan', context);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.startTransaction = function (context) {\n        return this._callExtensionMethod('startTransaction', context);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.traceHeaders = function () {\n        return this._callExtensionMethod('traceHeaders');\n    };\n    /**\n     * Internal helper function to call a method on the top client if it exists.\n     *\n     * @param method The method to call on the client.\n     * @param args Arguments to pass to the client function.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Hub.prototype._invokeClient = function (method) {\n        var _a;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var top = this.getStackTop();\n        if (top && top.client && top.client[method]) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n            (_a = top.client)[method].apply(_a, __spread(args, [top.scope]));\n        }\n    };\n    /**\n     * Calls global extension method and binding current instance to the function call\n     */\n    // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Hub.prototype._callExtensionMethod = function (method) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var carrier = getMainCarrier();\n        var sentry = carrier.__SENTRY__;\n        if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n            return sentry.extensions[method].apply(this, args);\n        }\n        logger.warn(\"Extension method \" + method + \" couldn't be found, doing nothing.\");\n    };\n    return Hub;\n}());\nexport { Hub };\n/** Returns the global shim registry. */\nexport function getMainCarrier() {\n    var carrier = getGlobalObject();\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {\n        extensions: {},\n        hub: undefined,\n    };\n    return carrier;\n}\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub) {\n    var registry = getMainCarrier();\n    var oldHub = getHubFromCarrier(registry);\n    setHubOnCarrier(registry, hub);\n    return oldHub;\n}\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub() {\n    // Get main carrier (global for every environment)\n    var registry = getMainCarrier();\n    // If there's no hub, or its an old API, assign a new one\n    if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n        setHubOnCarrier(registry, new Hub());\n    }\n    // Prefer domains over global if they are there (applicable only to Node environment)\n    if (isNodeEnv()) {\n        return getHubFromActiveDomain(registry);\n    }\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n}\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n    try {\n        var property = 'domain';\n        var carrier = getMainCarrier();\n        var sentry = carrier.__SENTRY__;\n        if (!sentry || !sentry.extensions || !sentry.extensions[property]) {\n            return getHubFromCarrier(registry);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var domain = sentry.extensions[property];\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        var activeDomain = domain.active;\n        // If there's no active domain, just return global hub\n        if (!activeDomain) {\n            return getHubFromCarrier(registry);\n        }\n        // If there's no hub on current domain, or it's an old API, assign a new one\n        if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n            var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n            setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n        }\n        // Return hub that lives on a domain\n        return getHubFromCarrier(activeDomain);\n    }\n    catch (_Oo) {\n        // Return hub that lives on a global object\n        return getHubFromCarrier(registry);\n    }\n}\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return true;\n    }\n    return false;\n}\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return carrier.__SENTRY__.hub;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = new Hub();\n    return carrier.__SENTRY__.hub;\n}\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\nexport function setHubOnCarrier(carrier, hub) {\n    if (!carrier) {\n        return false;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = hub;\n    return true;\n}\n//# sourceMappingURL=hub.js.map","import { __assign, __read, __spread } from \"tslib\";\nimport { getCurrentHub } from '@sentry/hub';\n/**\n * This calls a function on the current hub.\n * @param method function to call on hub.\n * @param args to pass to function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction callOnHub(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var hub = getCurrentHub();\n    if (hub && hub[method]) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return hub[method].apply(hub, __spread(args));\n    }\n    throw new Error(\"No hub defined or \" + method + \" was not found on the hub, please open a bug report.\");\n}\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function captureException(exception, captureContext) {\n    var syntheticException;\n    try {\n        throw new Error('Sentry syntheticException');\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureException', exception, {\n        captureContext: captureContext,\n        originalException: exception,\n        syntheticException: syntheticException,\n    });\n}\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param level Define the level of the message.\n * @returns The generated eventId.\n */\nexport function captureMessage(message, captureContext) {\n    var syntheticException;\n    try {\n        throw new Error(message);\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    // This is necessary to provide explicit scopes upgrade, without changing the original\n    // arrity of the `captureMessage(message, level)` method.\n    var level = typeof captureContext === 'string' ? captureContext : undefined;\n    var context = typeof captureContext !== 'string' ? { captureContext: captureContext } : undefined;\n    return callOnHub('captureMessage', message, level, __assign({ originalException: message, syntheticException: syntheticException }, context));\n}\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nexport function captureEvent(event) {\n    return callOnHub('captureEvent', event);\n}\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nexport function configureScope(callback) {\n    callOnHub('configureScope', callback);\n}\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nexport function addBreadcrumb(breadcrumb) {\n    callOnHub('addBreadcrumb', breadcrumb);\n}\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function setContext(name, context) {\n    callOnHub('setContext', name, context);\n}\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nexport function setExtras(extras) {\n    callOnHub('setExtras', extras);\n}\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nexport function setTags(tags) {\n    callOnHub('setTags', tags);\n}\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nexport function setExtra(key, extra) {\n    callOnHub('setExtra', key, extra);\n}\n/**\n * Set key:value that will be sent as tags data with the event.\n * @param key String key of tag\n * @param value String value of tag\n */\nexport function setTag(key, value) {\n    callOnHub('setTag', key, value);\n}\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nexport function setUser(user) {\n    callOnHub('setUser', user);\n}\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nexport function withScope(callback) {\n    callOnHub('withScope', callback);\n}\n/**\n * Calls a function on the latest client. Use this with caution, it's meant as\n * in \"internal\" helper so we don't need to expose every possible function in\n * the shim. It is not guaranteed that the client actually implements the\n * function.\n *\n * @param method The method to call on the client/client.\n * @param args Arguments to pass to the client/fontend.\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _callOnClient(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    callOnHub.apply(void 0, __spread(['_invokeClient', method], args));\n}\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual\n * tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and\n * child spans to other spans. To start a new child span within the transaction\n * or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished,\n * otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at\n * which point the transaction with all its finished child spans will be sent to\n * Sentry.\n *\n * @param context Properties of the new `Transaction`.\n */\nexport function startTransaction(context) {\n    return callOnHub('startTransaction', __assign({}, context));\n}\n//# sourceMappingURL=index.js.map","import { Dsn, urlEncode } from '@sentry/utils';\nvar SENTRY_API_VERSION = '7';\n/** Helper class to provide urls to different Sentry endpoints. */\nvar API = /** @class */ (function () {\n    /** Create a new instance of API */\n    function API(dsn) {\n        this.dsn = dsn;\n        this._dsnObject = new Dsn(dsn);\n    }\n    /** Returns the Dsn object. */\n    API.prototype.getDsn = function () {\n        return this._dsnObject;\n    };\n    /** Returns the prefix to construct Sentry ingestion API endpoints. */\n    API.prototype.getBaseApiEndpoint = function () {\n        var dsn = this._dsnObject;\n        var protocol = dsn.protocol ? dsn.protocol + \":\" : '';\n        var port = dsn.port ? \":\" + dsn.port : '';\n        return protocol + \"//\" + dsn.host + port + (dsn.path ? \"/\" + dsn.path : '') + \"/api/\";\n    };\n    /** Returns the store endpoint URL. */\n    API.prototype.getStoreEndpoint = function () {\n        return this._getIngestEndpoint('store');\n    };\n    /**\n     * Returns the store endpoint URL with auth in the query string.\n     *\n     * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n     */\n    API.prototype.getStoreEndpointWithUrlEncodedAuth = function () {\n        return this.getStoreEndpoint() + \"?\" + this._encodedAuth();\n    };\n    /**\n     * Returns the envelope endpoint URL with auth in the query string.\n     *\n     * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n     */\n    API.prototype.getEnvelopeEndpointWithUrlEncodedAuth = function () {\n        return this._getEnvelopeEndpoint() + \"?\" + this._encodedAuth();\n    };\n    /** Returns only the path component for the store endpoint. */\n    API.prototype.getStoreEndpointPath = function () {\n        var dsn = this._dsnObject;\n        return (dsn.path ? \"/\" + dsn.path : '') + \"/api/\" + dsn.projectId + \"/store/\";\n    };\n    /**\n     * Returns an object that can be used in request headers.\n     * This is needed for node and the old /store endpoint in sentry\n     */\n    API.prototype.getRequestHeaders = function (clientName, clientVersion) {\n        var dsn = this._dsnObject;\n        var header = [\"Sentry sentry_version=\" + SENTRY_API_VERSION];\n        header.push(\"sentry_client=\" + clientName + \"/\" + clientVersion);\n        header.push(\"sentry_key=\" + dsn.user);\n        if (dsn.pass) {\n            header.push(\"sentry_secret=\" + dsn.pass);\n        }\n        return {\n            'Content-Type': 'application/json',\n            'X-Sentry-Auth': header.join(', '),\n        };\n    };\n    /** Returns the url to the report dialog endpoint. */\n    API.prototype.getReportDialogEndpoint = function (dialogOptions) {\n        if (dialogOptions === void 0) { dialogOptions = {}; }\n        var dsn = this._dsnObject;\n        var endpoint = this.getBaseApiEndpoint() + \"embed/error-page/\";\n        var encodedOptions = [];\n        encodedOptions.push(\"dsn=\" + dsn.toString());\n        for (var key in dialogOptions) {\n            if (key === 'user') {\n                if (!dialogOptions.user) {\n                    continue;\n                }\n                if (dialogOptions.user.name) {\n                    encodedOptions.push(\"name=\" + encodeURIComponent(dialogOptions.user.name));\n                }\n                if (dialogOptions.user.email) {\n                    encodedOptions.push(\"email=\" + encodeURIComponent(dialogOptions.user.email));\n                }\n            }\n            else {\n                encodedOptions.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(dialogOptions[key]));\n            }\n        }\n        if (encodedOptions.length) {\n            return endpoint + \"?\" + encodedOptions.join('&');\n        }\n        return endpoint;\n    };\n    /** Returns the envelope endpoint URL. */\n    API.prototype._getEnvelopeEndpoint = function () {\n        return this._getIngestEndpoint('envelope');\n    };\n    /** Returns the ingest API endpoint for target. */\n    API.prototype._getIngestEndpoint = function (target) {\n        var base = this.getBaseApiEndpoint();\n        var dsn = this._dsnObject;\n        return \"\" + base + dsn.projectId + \"/\" + target + \"/\";\n    };\n    /** Returns a URL-encoded string with auth config suitable for a query string. */\n    API.prototype._encodedAuth = function () {\n        var dsn = this._dsnObject;\n        var auth = {\n            // We send only the minimum set of required information. See\n            // https://github.com/getsentry/sentry-javascript/issues/2572.\n            sentry_key: dsn.user,\n            sentry_version: SENTRY_API_VERSION,\n        };\n        return urlEncode(auth);\n    };\n    return API;\n}());\nexport { API };\n//# sourceMappingURL=api.js.map","import { __read, __spread } from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\nexport var installedIntegrations = [];\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options) {\n    var defaultIntegrations = (options.defaultIntegrations && __spread(options.defaultIntegrations)) || [];\n    var userIntegrations = options.integrations;\n    var integrations = [];\n    if (Array.isArray(userIntegrations)) {\n        var userIntegrationsNames_1 = userIntegrations.map(function (i) { return i.name; });\n        var pickedIntegrationsNames_1 = [];\n        // Leave only unique default integrations, that were not overridden with provided user integrations\n        defaultIntegrations.forEach(function (defaultIntegration) {\n            if (userIntegrationsNames_1.indexOf(defaultIntegration.name) === -1 &&\n                pickedIntegrationsNames_1.indexOf(defaultIntegration.name) === -1) {\n                integrations.push(defaultIntegration);\n                pickedIntegrationsNames_1.push(defaultIntegration.name);\n            }\n        });\n        // Don't add same user integration twice\n        userIntegrations.forEach(function (userIntegration) {\n            if (pickedIntegrationsNames_1.indexOf(userIntegration.name) === -1) {\n                integrations.push(userIntegration);\n                pickedIntegrationsNames_1.push(userIntegration.name);\n            }\n        });\n    }\n    else if (typeof userIntegrations === 'function') {\n        integrations = userIntegrations(defaultIntegrations);\n        integrations = Array.isArray(integrations) ? integrations : [integrations];\n    }\n    else {\n        integrations = __spread(defaultIntegrations);\n    }\n    // Make sure that if present, `Debug` integration will always run last\n    var integrationsNames = integrations.map(function (i) { return i.name; });\n    var alwaysLastToRun = 'Debug';\n    if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n        integrations.push.apply(integrations, __spread(integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1)));\n    }\n    return integrations;\n}\n/** Setup given integration */\nexport function setupIntegration(integration) {\n    if (installedIntegrations.indexOf(integration.name) !== -1) {\n        return;\n    }\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n    logger.log(\"Integration installed: \" + integration.name);\n}\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(options) {\n    var integrations = {};\n    getIntegrationsToSetup(options).forEach(function (integration) {\n        integrations[integration.name] = integration;\n        setupIntegration(integration);\n    });\n    return integrations;\n}\n//# sourceMappingURL=integration.js.map","import { __assign } from \"tslib\";\n/* eslint-disable max-lines */\nimport { Scope } from '@sentry/hub';\nimport { Dsn, isPrimitive, isThenable, logger, normalize, SyncPromise, timestampWithMs, truncate, uuid4, } from '@sentry/utils';\nimport { setupIntegrations } from './integration';\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient.prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nvar BaseClient = /** @class */ (function () {\n    /**\n     * Initializes this client instance.\n     *\n     * @param backendClass A constructor function to create the backend.\n     * @param options Options for the client.\n     */\n    function BaseClient(backendClass, options) {\n        /** Array of used integrations. */\n        this._integrations = {};\n        /** Is the client still processing a call? */\n        this._processing = false;\n        this._backend = new backendClass(options);\n        this._options = options;\n        if (options.dsn) {\n            this._dsn = new Dsn(options.dsn);\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    BaseClient.prototype.captureException = function (exception, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this._getBackend()\n            .eventFromException(exception, hint)\n            .then(function (event) {\n            eventId = _this.captureEvent(event, hint, scope);\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureMessage = function (message, level, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        var promisedEvent = isPrimitive(message)\n            ? this._getBackend().eventFromMessage(\"\" + message, level, hint)\n            : this._getBackend().eventFromException(message, hint);\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        promisedEvent.then(function (event) {\n            eventId = _this.captureEvent(event, hint, scope);\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureEvent = function (event, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._processEvent(event, hint, scope)\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .then(null, function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getDsn = function () {\n        return this._dsn;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getOptions = function () {\n        return this._options;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.flush = function (timeout) {\n        var _this = this;\n        return this._isClientProcessing(timeout).then(function (status) {\n            clearInterval(status.interval);\n            return _this._getBackend()\n                .getTransport()\n                .close(timeout)\n                .then(function (transportFlushed) { return status.ready && transportFlushed; });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.close = function (timeout) {\n        var _this = this;\n        return this.flush(timeout).then(function (result) {\n            _this.getOptions().enabled = false;\n            return result;\n        });\n    };\n    /**\n     * Sets up the integrations\n     */\n    BaseClient.prototype.setupIntegrations = function () {\n        if (this._isEnabled()) {\n            this._integrations = setupIntegrations(this._options);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegration = function (integration) {\n        try {\n            return this._integrations[integration.id] || null;\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Client\");\n            return null;\n        }\n    };\n    /** Waits for the client to be done with processing. */\n    BaseClient.prototype._isClientProcessing = function (timeout) {\n        var _this = this;\n        return new SyncPromise(function (resolve) {\n            var ticked = 0;\n            var tick = 1;\n            var interval = 0;\n            clearInterval(interval);\n            interval = setInterval(function () {\n                if (!_this._processing) {\n                    resolve({\n                        interval: interval,\n                        ready: true,\n                    });\n                }\n                else {\n                    ticked += tick;\n                    if (timeout && ticked >= timeout) {\n                        resolve({\n                            interval: interval,\n                            ready: false,\n                        });\n                    }\n                }\n            }, tick);\n        });\n    };\n    /** Returns the current backend. */\n    BaseClient.prototype._getBackend = function () {\n        return this._backend;\n    };\n    /** Determines whether this SDK is enabled and a valid Dsn is present. */\n    BaseClient.prototype._isEnabled = function () {\n        return this.getOptions().enabled !== false && this._dsn !== undefined;\n    };\n    /**\n     * Adds common information to events.\n     *\n     * The information includes release and environment from `options`,\n     * breadcrumbs and context (extra, tags and user) from the scope.\n     *\n     * Information that is already present in the event is never overwritten. For\n     * nested objects, such as the context, keys are merged.\n     *\n     * @param event The original event.\n     * @param hint May contain additional information about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A new event with more information.\n     */\n    BaseClient.prototype._prepareEvent = function (event, scope, hint) {\n        var _this = this;\n        var _a = this.getOptions().normalizeDepth, normalizeDepth = _a === void 0 ? 3 : _a;\n        var prepared = __assign(__assign({}, event), { event_id: event.event_id || (hint && hint.event_id ? hint.event_id : uuid4()), timestamp: event.timestamp || timestampWithMs() });\n        this._applyClientOptions(prepared);\n        this._applyIntegrationsMetadata(prepared);\n        // If we have scope given to us, use it as the base for further modifications.\n        // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n        var finalScope = scope;\n        if (hint && hint.captureContext) {\n            finalScope = Scope.clone(finalScope).update(hint.captureContext);\n        }\n        // We prepare the result here with a resolved Event.\n        var result = SyncPromise.resolve(prepared);\n        // This should be the last thing called, since we want that\n        // {@link Hub.addEventProcessor} gets the finished prepared event.\n        if (finalScope) {\n            // In case we have a hub we reassign it.\n            result = finalScope.applyToEvent(prepared, hint);\n        }\n        return result.then(function (evt) {\n            if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n                return _this._normalizeEvent(evt, normalizeDepth);\n            }\n            return evt;\n        });\n    };\n    /**\n     * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n     * Normalized keys:\n     * - `breadcrumbs.data`\n     * - `user`\n     * - `contexts`\n     * - `extra`\n     * @param event Event\n     * @returns Normalized event\n     */\n    BaseClient.prototype._normalizeEvent = function (event, depth) {\n        if (!event) {\n            return null;\n        }\n        var normalized = __assign(__assign(__assign(__assign(__assign({}, event), (event.breadcrumbs && {\n            breadcrumbs: event.breadcrumbs.map(function (b) { return (__assign(__assign({}, b), (b.data && {\n                data: normalize(b.data, depth),\n            }))); }),\n        })), (event.user && {\n            user: normalize(event.user, depth),\n        })), (event.contexts && {\n            contexts: normalize(event.contexts, depth),\n        })), (event.extra && {\n            extra: normalize(event.extra, depth),\n        }));\n        // event.contexts.trace stores information about a Transaction. Similarly,\n        // event.spans[] stores information about child Spans. Given that a\n        // Transaction is conceptually a Span, normalization should apply to both\n        // Transactions and Spans consistently.\n        // For now the decision is to skip normalization of Transactions and Spans,\n        // so this block overwrites the normalized event to add back the original\n        // Transaction information prior to normalization.\n        if (event.contexts && event.contexts.trace) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            normalized.contexts.trace = event.contexts.trace;\n        }\n        return normalized;\n    };\n    /**\n     *  Enhances event using the client configuration.\n     *  It takes care of all \"static\" values like environment, release and `dist`,\n     *  as well as truncating overly long values.\n     * @param event event instance to be enhanced\n     */\n    BaseClient.prototype._applyClientOptions = function (event) {\n        var _a = this.getOptions(), environment = _a.environment, release = _a.release, dist = _a.dist, _b = _a.maxValueLength, maxValueLength = _b === void 0 ? 250 : _b;\n        if (event.environment === undefined && environment !== undefined) {\n            event.environment = environment;\n        }\n        if (event.release === undefined && release !== undefined) {\n            event.release = release;\n        }\n        if (event.dist === undefined && dist !== undefined) {\n            event.dist = dist;\n        }\n        if (event.message) {\n            event.message = truncate(event.message, maxValueLength);\n        }\n        var exception = event.exception && event.exception.values && event.exception.values[0];\n        if (exception && exception.value) {\n            exception.value = truncate(exception.value, maxValueLength);\n        }\n        var request = event.request;\n        if (request && request.url) {\n            request.url = truncate(request.url, maxValueLength);\n        }\n    };\n    /**\n     * This function adds all used integrations to the SDK info in the event.\n     * @param sdkInfo The sdkInfo of the event that will be filled with all integrations.\n     */\n    BaseClient.prototype._applyIntegrationsMetadata = function (event) {\n        var sdkInfo = event.sdk;\n        var integrationsArray = Object.keys(this._integrations);\n        if (sdkInfo && integrationsArray.length > 0) {\n            sdkInfo.integrations = integrationsArray;\n        }\n    };\n    /**\n     * Tells the backend to send this event\n     * @param event The Sentry event to send\n     */\n    BaseClient.prototype._sendEvent = function (event) {\n        this._getBackend().sendEvent(event);\n    };\n    /**\n     * Processes an event (either error or message) and sends it to Sentry.\n     *\n     * This also adds breadcrumbs and context information to the event. However,\n     * platform specific meta data (such as the User's IP address) must be added\n     * by the SDK implementor.\n     *\n     *\n     * @param event The event to send to Sentry.\n     * @param hint May contain additional information about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n     */\n    BaseClient.prototype._processEvent = function (event, hint, scope) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        var _a = this.getOptions(), beforeSend = _a.beforeSend, sampleRate = _a.sampleRate;\n        if (!this._isEnabled()) {\n            return SyncPromise.reject('SDK not enabled, will not send event.');\n        }\n        var isTransaction = event.type === 'transaction';\n        // 1.0 === 100% events are sent\n        // 0.0 === 0% events are sent\n        // Sampling for transaction happens somewhere else\n        if (!isTransaction && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n            return SyncPromise.reject('This event has been sampled, will not send event.');\n        }\n        return new SyncPromise(function (resolve, reject) {\n            _this._prepareEvent(event, scope, hint)\n                .then(function (prepared) {\n                if (prepared === null) {\n                    reject('An event processor returned null, will not send event.');\n                    return;\n                }\n                var finalEvent = prepared;\n                var isInternalException = hint && hint.data && hint.data.__sentry__ === true;\n                // We skip beforeSend in case of transactions\n                if (isInternalException || !beforeSend || isTransaction) {\n                    _this._sendEvent(finalEvent);\n                    resolve(finalEvent);\n                    return;\n                }\n                var beforeSendResult = beforeSend(prepared, hint);\n                if (typeof beforeSendResult === 'undefined') {\n                    logger.error('`beforeSend` method has to return `null` or a valid event.');\n                }\n                else if (isThenable(beforeSendResult)) {\n                    _this._handleAsyncBeforeSend(beforeSendResult, resolve, reject);\n                }\n                else {\n                    finalEvent = beforeSendResult;\n                    if (finalEvent === null) {\n                        logger.log('`beforeSend` returned `null`, will not send event.');\n                        resolve(null);\n                        return;\n                    }\n                    // From here on we are really async\n                    _this._sendEvent(finalEvent);\n                    resolve(finalEvent);\n                }\n            })\n                .then(null, function (reason) {\n                _this.captureException(reason, {\n                    data: {\n                        __sentry__: true,\n                    },\n                    originalException: reason,\n                });\n                reject(\"Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: \" + reason);\n            });\n        });\n    };\n    /**\n     * Resolves before send Promise and calls resolve/reject on parent SyncPromise.\n     */\n    BaseClient.prototype._handleAsyncBeforeSend = function (beforeSend, resolve, reject) {\n        var _this = this;\n        beforeSend\n            .then(function (processedEvent) {\n            if (processedEvent === null) {\n                reject('`beforeSend` returned `null`, will not send event.');\n                return;\n            }\n            // From here on we are really async\n            _this._sendEvent(processedEvent);\n            resolve(processedEvent);\n        })\n            .then(null, function (e) {\n            reject(\"beforeSend rejected with \" + e);\n        });\n    };\n    return BaseClient;\n}());\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map","var originalFunctionToString;\n/** Patch toString calls to return proper name for wrapped functions */\nvar FunctionToString = /** @class */ (function () {\n    function FunctionToString() {\n        /**\n         * @inheritDoc\n         */\n        this.name = FunctionToString.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.prototype.setupOnce = function () {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        originalFunctionToString = Function.prototype.toString;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var context = this.__sentry_original__ || this;\n            return originalFunctionToString.apply(context, args);\n        };\n    };\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.id = 'FunctionToString';\n    return FunctionToString;\n}());\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map","import { Status } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n/** Noop transport */\nvar NoopTransport = /** @class */ (function () {\n    function NoopTransport() {\n    }\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.sendEvent = function (_) {\n        return SyncPromise.resolve({\n            reason: \"NoopTransport: Event has been skipped because no Dsn is configured.\",\n            status: Status.Skipped,\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.close = function (_) {\n        return SyncPromise.resolve(true);\n    };\n    return NoopTransport;\n}());\nexport { NoopTransport };\n//# sourceMappingURL=noop.js.map","import { logger, SentryError } from '@sentry/utils';\nimport { NoopTransport } from './transports/noop';\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nvar BaseBackend = /** @class */ (function () {\n    /** Creates a new backend instance. */\n    function BaseBackend(options) {\n        this._options = options;\n        if (!this._options.dsn) {\n            logger.warn('No DSN provided, backend will not do anything.');\n        }\n        this._transport = this._setupTransport();\n    }\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    BaseBackend.prototype.eventFromException = function (_exception, _hint) {\n        throw new SentryError('Backend has to implement `eventFromException` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromMessage = function (_message, _level, _hint) {\n        throw new SentryError('Backend has to implement `eventFromMessage` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.sendEvent = function (event) {\n        this._transport.sendEvent(event).then(null, function (reason) {\n            logger.error(\"Error while sending event: \" + reason);\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.getTransport = function () {\n        return this._transport;\n    };\n    /**\n     * Sets up the transport so it can be used later to send requests.\n     */\n    BaseBackend.prototype._setupTransport = function () {\n        return new NoopTransport();\n    };\n    return BaseBackend;\n}());\nexport { BaseBackend };\n//# sourceMappingURL=basebackend.js.map","import { timestampWithMs } from '@sentry/utils';\n/** Creates a SentryRequest from an event. */\nexport function eventToSentryRequest(event, api) {\n    var useEnvelope = event.type === 'transaction';\n    var req = {\n        body: JSON.stringify(event),\n        url: useEnvelope ? api.getEnvelopeEndpointWithUrlEncodedAuth() : api.getStoreEndpointWithUrlEncodedAuth(),\n    };\n    // https://develop.sentry.dev/sdk/envelopes/\n    // Since we don't need to manipulate envelopes nor store them, there is no\n    // exported concept of an Envelope with operations including serialization and\n    // deserialization. Instead, we only implement a minimal subset of the spec to\n    // serialize events inline here.\n    if (useEnvelope) {\n        var envelopeHeaders = JSON.stringify({\n            event_id: event.event_id,\n            // We need to add * 1000 since we divide it by 1000 by default but JS works with ms precision\n            // The reason we use timestampWithMs here is that all clocks across the SDK use the same clock\n            sent_at: new Date(timestampWithMs() * 1000).toISOString(),\n        });\n        var itemHeaders = JSON.stringify({\n            type: event.type,\n        });\n        // The trailing newline is optional. We intentionally don't send it to avoid\n        // sending unnecessary bytes.\n        //\n        // const envelope = `${envelopeHeaders}\\n${itemHeaders}\\n${req.body}\\n`;\n        var envelope = envelopeHeaders + \"\\n\" + itemHeaders + \"\\n\" + req.body;\n        req.body = envelope;\n    }\n    return req;\n}\n//# sourceMappingURL=request.js.map","import { __read, __spread } from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n/** Inbound filters configurable by the user */\nvar InboundFilters = /** @class */ (function () {\n    function InboundFilters(_options) {\n        if (_options === void 0) { _options = {}; }\n        this._options = _options;\n        /**\n         * @inheritDoc\n         */\n        this.name = InboundFilters.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            var hub = getCurrentHub();\n            if (!hub) {\n                return event;\n            }\n            var self = hub.getIntegration(InboundFilters);\n            if (self) {\n                var client = hub.getClient();\n                var clientOptions = client ? client.getOptions() : {};\n                var options = self._mergeOptions(clientOptions);\n                if (self._shouldDropEvent(event, options)) {\n                    return null;\n                }\n            }\n            return event;\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._shouldDropEvent = function (event, options) {\n        if (this._isSentryError(event, options)) {\n            logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isIgnoredError(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isDeniedUrl(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `denyUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        if (!this._isAllowedUrl(event, options)) {\n            logger.warn(\"Event dropped due to not being matched by `allowUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        return false;\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isSentryError = function (event, options) {\n        if (!options.ignoreInternal) {\n            return false;\n        }\n        try {\n            return ((event &&\n                event.exception &&\n                event.exception.values &&\n                event.exception.values[0] &&\n                event.exception.values[0].type === 'SentryError') ||\n                false);\n        }\n        catch (_oO) {\n            return false;\n        }\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isIgnoredError = function (event, options) {\n        if (!options.ignoreErrors || !options.ignoreErrors.length) {\n            return false;\n        }\n        return this._getPossibleEventMessages(event).some(function (message) {\n            // Not sure why TypeScript complains here...\n            return options.ignoreErrors.some(function (pattern) { return isMatchingPattern(message, pattern); });\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isDeniedUrl = function (event, options) {\n        // TODO: Use Glob instead?\n        if (!options.denyUrls || !options.denyUrls.length) {\n            return false;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? false : options.denyUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isAllowedUrl = function (event, options) {\n        // TODO: Use Glob instead?\n        if (!options.allowUrls || !options.allowUrls.length) {\n            return true;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? true : options.allowUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._mergeOptions = function (clientOptions) {\n        if (clientOptions === void 0) { clientOptions = {}; }\n        return {\n            allowUrls: __spread((this._options.whitelistUrls || []), (this._options.allowUrls || []), (clientOptions.whitelistUrls || []), (clientOptions.allowUrls || [])),\n            denyUrls: __spread((this._options.blacklistUrls || []), (this._options.denyUrls || []), (clientOptions.blacklistUrls || []), (clientOptions.denyUrls || [])),\n            ignoreErrors: __spread((this._options.ignoreErrors || []), (clientOptions.ignoreErrors || []), DEFAULT_IGNORE_ERRORS),\n            ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n        };\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getPossibleEventMessages = function (event) {\n        if (event.message) {\n            return [event.message];\n        }\n        if (event.exception) {\n            try {\n                var _a = (event.exception.values && event.exception.values[0]) || {}, _b = _a.type, type = _b === void 0 ? '' : _b, _c = _a.value, value = _c === void 0 ? '' : _c;\n                return [\"\" + value, type + \": \" + value];\n            }\n            catch (oO) {\n                logger.error(\"Cannot extract message for event \" + getEventDescription(event));\n                return [];\n            }\n        }\n        return [];\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getEventFilterUrl = function (event) {\n        try {\n            if (event.stacktrace) {\n                var frames_1 = event.stacktrace.frames;\n                return (frames_1 && frames_1[frames_1.length - 1].filename) || null;\n            }\n            if (event.exception) {\n                var frames_2 = event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;\n                return (frames_2 && frames_2[frames_2.length - 1].filename) || null;\n            }\n            return null;\n        }\n        catch (oO) {\n            logger.error(\"Cannot extract url for event \" + getEventDescription(event));\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.id = 'InboundFilters';\n    return InboundFilters;\n}());\nexport { InboundFilters };\n//# sourceMappingURL=inboundfilters.js.map","/**\n * This was originally forked from https://github.com/occ/TraceKit, but has since been\n * largely modified and is now maintained as part of Sentry JS SDK.\n */\nimport { __assign } from \"tslib\";\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nvar chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nvar gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|capacitor).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js))(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nvar geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nvar chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nvar reactMinifiedRegexp = /Minified React error #\\d+;/i;\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function computeStackTrace(ex) {\n    var stack = null;\n    var popSize = 0;\n    if (ex) {\n        if (typeof ex.framesToPop === 'number') {\n            popSize = ex.framesToPop;\n        }\n        else if (reactMinifiedRegexp.test(ex.message)) {\n            popSize = 1;\n        }\n    }\n    try {\n        // This must be tried first because Opera 10 *destroys*\n        // its stacktrace property if you try to access the stack\n        // property first!!\n        stack = computeStackTraceFromStacktraceProp(ex);\n        if (stack) {\n            return popFrames(stack, popSize);\n        }\n    }\n    catch (e) {\n        // no-empty\n    }\n    try {\n        stack = computeStackTraceFromStackProp(ex);\n        if (stack) {\n            return popFrames(stack, popSize);\n        }\n    }\n    catch (e) {\n        // no-empty\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex && ex.name,\n        stack: [],\n        failed: true,\n    };\n}\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, complexity\nfunction computeStackTraceFromStackProp(ex) {\n    if (!ex || !ex.stack) {\n        return null;\n    }\n    var stack = [];\n    var lines = ex.stack.split('\\n');\n    var isEval;\n    var submatch;\n    var parts;\n    var element;\n    for (var i = 0; i < lines.length; ++i) {\n        if ((parts = chrome.exec(lines[i]))) {\n            var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n            isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n            if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n                // throw out eval line/column and use top-most line/column number\n                parts[2] = submatch[1]; // url\n                parts[3] = submatch[2]; // line\n                parts[4] = submatch[3]; // column\n            }\n            element = {\n                // working with the regexp above is super painful. it is quite a hack, but just stripping the `address at `\n                // prefix here seems like the quickest solution for now.\n                url: parts[2] && parts[2].indexOf('address at ') === 0 ? parts[2].substr('address at '.length) : parts[2],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: isNative ? [parts[2]] : [],\n                line: parts[3] ? +parts[3] : null,\n                column: parts[4] ? +parts[4] : null,\n            };\n        }\n        else if ((parts = winjs.exec(lines[i]))) {\n            element = {\n                url: parts[2],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: [],\n                line: +parts[3],\n                column: parts[4] ? +parts[4] : null,\n            };\n        }\n        else if ((parts = gecko.exec(lines[i]))) {\n            isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n            if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n                // throw out eval line/column and use top-most line number\n                parts[1] = parts[1] || \"eval\";\n                parts[3] = submatch[1];\n                parts[4] = submatch[2];\n                parts[5] = ''; // no column when eval\n            }\n            else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n                // FireFox uses this awesome columnNumber property for its top frame\n                // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n                // so adding 1\n                // NOTE: this hack doesn't work if top-most frame is eval\n                stack[0].column = ex.columnNumber + 1;\n            }\n            element = {\n                url: parts[3],\n                func: parts[1] || UNKNOWN_FUNCTION,\n                args: parts[2] ? parts[2].split(',') : [],\n                line: parts[4] ? +parts[4] : null,\n                column: parts[5] ? +parts[5] : null,\n            };\n        }\n        else {\n            continue;\n        }\n        if (!element.func && element.line) {\n            element.func = UNKNOWN_FUNCTION;\n        }\n        stack.push(element);\n    }\n    if (!stack.length) {\n        return null;\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex.name,\n        stack: stack,\n    };\n}\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction computeStackTraceFromStacktraceProp(ex) {\n    if (!ex || !ex.stacktrace) {\n        return null;\n    }\n    // Access and store the stacktrace property before doing ANYTHING\n    // else to it because Opera is not very good at providing it\n    // reliably in other circumstances.\n    var stacktrace = ex.stacktrace;\n    var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n    var opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\((.*)\\))? in (.*):\\s*$/i;\n    var lines = stacktrace.split('\\n');\n    var stack = [];\n    var parts;\n    for (var line = 0; line < lines.length; line += 2) {\n        var element = null;\n        if ((parts = opera10Regex.exec(lines[line]))) {\n            element = {\n                url: parts[2],\n                func: parts[3],\n                args: [],\n                line: +parts[1],\n                column: null,\n            };\n        }\n        else if ((parts = opera11Regex.exec(lines[line]))) {\n            element = {\n                url: parts[6],\n                func: parts[3] || parts[4],\n                args: parts[5] ? parts[5].split(',') : [],\n                line: +parts[1],\n                column: +parts[2],\n            };\n        }\n        if (element) {\n            if (!element.func && element.line) {\n                element.func = UNKNOWN_FUNCTION;\n            }\n            stack.push(element);\n        }\n    }\n    if (!stack.length) {\n        return null;\n    }\n    return {\n        message: extractMessage(ex),\n        name: ex.name,\n        stack: stack,\n    };\n}\n/** Remove N number of frames from the stack */\nfunction popFrames(stacktrace, popSize) {\n    try {\n        return __assign(__assign({}, stacktrace), { stack: stacktrace.stack.slice(popSize) });\n    }\n    catch (e) {\n        return stacktrace;\n    }\n}\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction extractMessage(ex) {\n    var message = ex && ex.message;\n    if (!message) {\n        return 'No error message';\n    }\n    if (message.error && typeof message.error.message === 'string') {\n        return message.error.message;\n    }\n    return message;\n}\n//# sourceMappingURL=tracekit.js.map","import { extractExceptionKeysForMessage, isEvent, normalizeToSize } from '@sentry/utils';\nimport { computeStackTrace } from './tracekit';\nvar STACKTRACE_LIMIT = 50;\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nexport function exceptionFromStacktrace(stacktrace) {\n    var frames = prepareFramesForEvent(stacktrace.stack);\n    var exception = {\n        type: stacktrace.name,\n        value: stacktrace.message,\n    };\n    if (frames && frames.length) {\n        exception.stacktrace = { frames: frames };\n    }\n    if (exception.type === undefined && exception.value === '') {\n        exception.value = 'Unrecoverable error caught';\n    }\n    return exception;\n}\n/**\n * @hidden\n */\nexport function eventFromPlainObject(exception, syntheticException, rejection) {\n    var event = {\n        exception: {\n            values: [\n                {\n                    type: isEvent(exception) ? exception.constructor.name : rejection ? 'UnhandledRejection' : 'Error',\n                    value: \"Non-Error \" + (rejection ? 'promise rejection' : 'exception') + \" captured with keys: \" + extractExceptionKeysForMessage(exception),\n                },\n            ],\n        },\n        extra: {\n            __serialized__: normalizeToSize(exception),\n        },\n    };\n    if (syntheticException) {\n        var stacktrace = computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\n/**\n * @hidden\n */\nexport function eventFromStacktrace(stacktrace) {\n    var exception = exceptionFromStacktrace(stacktrace);\n    return {\n        exception: {\n            values: [exception],\n        },\n    };\n}\n/**\n * @hidden\n */\nexport function prepareFramesForEvent(stack) {\n    if (!stack || !stack.length) {\n        return [];\n    }\n    var localStack = stack;\n    var firstFrameFunction = localStack[0].func || '';\n    var lastFrameFunction = localStack[localStack.length - 1].func || '';\n    // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n    if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n        localStack = localStack.slice(1);\n    }\n    // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n    if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n        localStack = localStack.slice(0, -1);\n    }\n    // The frame where the crash happened, should be the last entry in the array\n    return localStack\n        .slice(0, STACKTRACE_LIMIT)\n        .map(function (frame) { return ({\n        colno: frame.column === null ? undefined : frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line === null ? undefined : frame.line,\n    }); })\n        .reverse();\n}\n//# sourceMappingURL=parsers.js.map","import { Severity } from '@sentry/types';\nimport { addExceptionMechanism, addExceptionTypeValue, isDOMError, isDOMException, isError, isErrorEvent, isEvent, isPlainObject, SyncPromise, } from '@sentry/utils';\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { computeStackTrace } from './tracekit';\n/**\n * Builds and Event from a Exception\n * @hidden\n */\nexport function eventFromException(options, exception, hint) {\n    var syntheticException = (hint && hint.syntheticException) || undefined;\n    var event = eventFromUnknownInput(exception, syntheticException, {\n        attachStacktrace: options.attachStacktrace,\n    });\n    addExceptionMechanism(event, {\n        handled: true,\n        type: 'generic',\n    });\n    event.level = Severity.Error;\n    if (hint && hint.event_id) {\n        event.event_id = hint.event_id;\n    }\n    return SyncPromise.resolve(event);\n}\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(options, message, level, hint) {\n    if (level === void 0) { level = Severity.Info; }\n    var syntheticException = (hint && hint.syntheticException) || undefined;\n    var event = eventFromString(message, syntheticException, {\n        attachStacktrace: options.attachStacktrace,\n    });\n    event.level = level;\n    if (hint && hint.event_id) {\n        event.event_id = hint.event_id;\n    }\n    return SyncPromise.resolve(event);\n}\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(exception, syntheticException, options) {\n    if (options === void 0) { options = {}; }\n    var event;\n    if (isErrorEvent(exception) && exception.error) {\n        // If it is an ErrorEvent with `error` property, extract it to get actual Error\n        var errorEvent = exception;\n        // eslint-disable-next-line no-param-reassign\n        exception = errorEvent.error;\n        event = eventFromStacktrace(computeStackTrace(exception));\n        return event;\n    }\n    if (isDOMError(exception) || isDOMException(exception)) {\n        // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n        // then we just extract the name and message, as they don't provide anything else\n        // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n        // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n        var domException = exception;\n        var name_1 = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n        var message = domException.message ? name_1 + \": \" + domException.message : name_1;\n        event = eventFromString(message, syntheticException, options);\n        addExceptionTypeValue(event, message);\n        return event;\n    }\n    if (isError(exception)) {\n        // we have a real Error object, do nothing\n        event = eventFromStacktrace(computeStackTrace(exception));\n        return event;\n    }\n    if (isPlainObject(exception) || isEvent(exception)) {\n        // If it is plain Object or Event, serialize it manually and extract options\n        // This will allow us to group events based on top-level keys\n        // which is much better than creating new group when any key/value change\n        var objectException = exception;\n        event = eventFromPlainObject(objectException, syntheticException, options.rejection);\n        addExceptionMechanism(event, {\n            synthetic: true,\n        });\n        return event;\n    }\n    // If none of previous checks were valid, then it means that it's not:\n    // - an instance of DOMError\n    // - an instance of DOMException\n    // - an instance of Event\n    // - an instance of Error\n    // - a valid ErrorEvent (one with an error property)\n    // - a plain Object\n    //\n    // So bail out and capture it as a simple message:\n    event = eventFromString(exception, syntheticException, options);\n    addExceptionTypeValue(event, \"\" + exception, undefined);\n    addExceptionMechanism(event, {\n        synthetic: true,\n    });\n    return event;\n}\n/**\n * @hidden\n */\nexport function eventFromString(input, syntheticException, options) {\n    if (options === void 0) { options = {}; }\n    var event = {\n        message: input,\n    };\n    if (options.attachStacktrace && syntheticException) {\n        var stacktrace = computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\n//# sourceMappingURL=eventbuilder.js.map","import { API } from '@sentry/core';\nimport { PromiseBuffer, SentryError } from '@sentry/utils';\n/** Base Transport class implementation */\nvar BaseTransport = /** @class */ (function () {\n    function BaseTransport(options) {\n        this.options = options;\n        /** A simple buffer holding all requests. */\n        this._buffer = new PromiseBuffer(30);\n        this._api = new API(this.options.dsn);\n        // eslint-disable-next-line deprecation/deprecation\n        this.url = this._api.getStoreEndpointWithUrlEncodedAuth();\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.sendEvent = function (_) {\n        throw new SentryError('Transport Class has to implement `sendEvent` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.close = function (timeout) {\n        return this._buffer.drain(timeout);\n    };\n    return BaseTransport;\n}());\nexport { BaseTransport };\n//# sourceMappingURL=base.js.map","import { __extends } from \"tslib\";\nimport { eventToSentryRequest } from '@sentry/core';\nimport { Status } from '@sentry/types';\nimport { getGlobalObject, logger, parseRetryAfterHeader, supportsReferrerPolicy, SyncPromise } from '@sentry/utils';\nimport { BaseTransport } from './base';\nvar global = getGlobalObject();\n/** `fetch` based transport */\nvar FetchTransport = /** @class */ (function (_super) {\n    __extends(FetchTransport, _super);\n    function FetchTransport() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** Locks transport after receiving 429 response */\n        _this._disabledUntil = new Date(Date.now());\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    FetchTransport.prototype.sendEvent = function (event) {\n        var _this = this;\n        if (new Date(Date.now()) < this._disabledUntil) {\n            return Promise.reject({\n                event: event,\n                reason: \"Transport locked till \" + this._disabledUntil + \" due to too many requests.\",\n                status: 429,\n            });\n        }\n        var sentryReq = eventToSentryRequest(event, this._api);\n        var options = {\n            body: sentryReq.body,\n            method: 'POST',\n            // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n            // https://caniuse.com/#feat=referrer-policy\n            // It doesn't. And it throw exception instead of ignoring this parameter...\n            // REF: https://github.com/getsentry/raven-js/issues/1233\n            referrerPolicy: (supportsReferrerPolicy() ? 'origin' : ''),\n        };\n        if (this.options.fetchParameters !== undefined) {\n            Object.assign(options, this.options.fetchParameters);\n        }\n        if (this.options.headers !== undefined) {\n            options.headers = this.options.headers;\n        }\n        return this._buffer.add(new SyncPromise(function (resolve, reject) {\n            global\n                .fetch(sentryReq.url, options)\n                .then(function (response) {\n                var status = Status.fromHttpCode(response.status);\n                if (status === Status.Success) {\n                    resolve({ status: status });\n                    return;\n                }\n                if (status === Status.RateLimit) {\n                    var now = Date.now();\n                    /**\n                     * \"The name is case-insensitive.\"\n                     * https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n                     */\n                    var retryAfterHeader = response.headers.get('Retry-After');\n                    _this._disabledUntil = new Date(now + parseRetryAfterHeader(now, retryAfterHeader));\n                    logger.warn(\"Too many requests, backing off till: \" + _this._disabledUntil);\n                }\n                reject(response);\n            })\n                .catch(reject);\n        }));\n    };\n    return FetchTransport;\n}(BaseTransport));\nexport { FetchTransport };\n//# sourceMappingURL=fetch.js.map","import { __extends } from \"tslib\";\nimport { eventToSentryRequest } from '@sentry/core';\nimport { Status } from '@sentry/types';\nimport { logger, parseRetryAfterHeader, SyncPromise } from '@sentry/utils';\nimport { BaseTransport } from './base';\n/** `XHR` based transport */\nvar XHRTransport = /** @class */ (function (_super) {\n    __extends(XHRTransport, _super);\n    function XHRTransport() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** Locks transport after receiving 429 response */\n        _this._disabledUntil = new Date(Date.now());\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XHRTransport.prototype.sendEvent = function (event) {\n        var _this = this;\n        if (new Date(Date.now()) < this._disabledUntil) {\n            return Promise.reject({\n                event: event,\n                reason: \"Transport locked till \" + this._disabledUntil + \" due to too many requests.\",\n                status: 429,\n            });\n        }\n        var sentryReq = eventToSentryRequest(event, this._api);\n        return this._buffer.add(new SyncPromise(function (resolve, reject) {\n            var request = new XMLHttpRequest();\n            request.onreadystatechange = function () {\n                if (request.readyState !== 4) {\n                    return;\n                }\n                var status = Status.fromHttpCode(request.status);\n                if (status === Status.Success) {\n                    resolve({ status: status });\n                    return;\n                }\n                if (status === Status.RateLimit) {\n                    var now = Date.now();\n                    /**\n                     * \"The search for the header name is case-insensitive.\"\n                     * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getResponseHeader\n                     */\n                    var retryAfterHeader = request.getResponseHeader('Retry-After');\n                    _this._disabledUntil = new Date(now + parseRetryAfterHeader(now, retryAfterHeader));\n                    logger.warn(\"Too many requests, backing off till: \" + _this._disabledUntil);\n                }\n                reject(request);\n            };\n            request.open('POST', sentryReq.url);\n            for (var header in _this.options.headers) {\n                if (_this.options.headers.hasOwnProperty(header)) {\n                    request.setRequestHeader(header, _this.options.headers[header]);\n                }\n            }\n            request.send(sentryReq.body);\n        }));\n    };\n    return XHRTransport;\n}(BaseTransport));\nexport { XHRTransport };\n//# sourceMappingURL=xhr.js.map","import { __assign, __extends } from \"tslib\";\nimport { BaseBackend } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { supportsFetch } from '@sentry/utils';\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { FetchTransport, XHRTransport } from './transports';\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\nvar BrowserBackend = /** @class */ (function (_super) {\n    __extends(BrowserBackend, _super);\n    function BrowserBackend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromException = function (exception, hint) {\n        return eventFromException(this._options, exception, hint);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromMessage = function (message, level, hint) {\n        if (level === void 0) { level = Severity.Info; }\n        return eventFromMessage(this._options, message, level, hint);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype._setupTransport = function () {\n        if (!this._options.dsn) {\n            // We return the noop transport here in case there is no Dsn.\n            return _super.prototype._setupTransport.call(this);\n        }\n        var transportOptions = __assign(__assign({}, this._options.transportOptions), { dsn: this._options.dsn });\n        if (this._options.transport) {\n            return new this._options.transport(transportOptions);\n        }\n        if (supportsFetch()) {\n            return new FetchTransport(transportOptions);\n        }\n        return new XHRTransport(transportOptions);\n    };\n    return BrowserBackend;\n}(BaseBackend));\nexport { BrowserBackend };\n//# sourceMappingURL=backend.js.map","import { __assign } from \"tslib\";\nimport { API, captureException, withScope } from '@sentry/core';\nimport { addExceptionMechanism, addExceptionTypeValue, logger } from '@sentry/utils';\nvar ignoreOnError = 0;\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError() {\n    return ignoreOnError > 0;\n}\n/**\n * @hidden\n */\nexport function ignoreNextOnError() {\n    // onerror should trigger before setTimeout\n    ignoreOnError += 1;\n    setTimeout(function () {\n        ignoreOnError -= 1;\n    });\n}\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(fn, options, before) {\n    if (options === void 0) { options = {}; }\n    if (typeof fn !== 'function') {\n        return fn;\n    }\n    try {\n        // We don't wanna wrap it twice\n        if (fn.__sentry__) {\n            return fn;\n        }\n        // If this has already been wrapped in the past, return that wrapped function\n        if (fn.__sentry_wrapped__) {\n            return fn.__sentry_wrapped__;\n        }\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        // Bail on wrapping and return the function as-is (defers to window.onerror).\n        return fn;\n    }\n    /* eslint-disable prefer-rest-params */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var sentryWrapped = function () {\n        var args = Array.prototype.slice.call(arguments);\n        try {\n            if (before && typeof before === 'function') {\n                before.apply(this, arguments);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n            var wrappedArguments = args.map(function (arg) { return wrap(arg, options); });\n            if (fn.handleEvent) {\n                // Attempt to invoke user-land function\n                // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n                //       means the sentry.javascript SDK caught an error invoking your application code. This\n                //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                return fn.handleEvent.apply(this, wrappedArguments);\n            }\n            // Attempt to invoke user-land function\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n            //       means the sentry.javascript SDK caught an error invoking your application code. This\n            //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n            return fn.apply(this, wrappedArguments);\n        }\n        catch (ex) {\n            ignoreNextOnError();\n            withScope(function (scope) {\n                scope.addEventProcessor(function (event) {\n                    var processedEvent = __assign({}, event);\n                    if (options.mechanism) {\n                        addExceptionTypeValue(processedEvent, undefined, undefined);\n                        addExceptionMechanism(processedEvent, options.mechanism);\n                    }\n                    processedEvent.extra = __assign(__assign({}, processedEvent.extra), { arguments: args });\n                    return processedEvent;\n                });\n                captureException(ex);\n            });\n            throw ex;\n        }\n    };\n    /* eslint-enable prefer-rest-params */\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n    try {\n        for (var property in fn) {\n            if (Object.prototype.hasOwnProperty.call(fn, property)) {\n                sentryWrapped[property] = fn[property];\n            }\n        }\n    }\n    catch (_oO) { } // eslint-disable-line no-empty\n    fn.prototype = fn.prototype || {};\n    sentryWrapped.prototype = fn.prototype;\n    Object.defineProperty(fn, '__sentry_wrapped__', {\n        enumerable: false,\n        value: sentryWrapped,\n    });\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    Object.defineProperties(sentryWrapped, {\n        __sentry__: {\n            enumerable: false,\n            value: true,\n        },\n        __sentry_original__: {\n            enumerable: false,\n            value: fn,\n        },\n    });\n    // Restore original function name (not all browsers allow that)\n    try {\n        var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name');\n        if (descriptor.configurable) {\n            Object.defineProperty(sentryWrapped, 'name', {\n                get: function () {\n                    return fn.name;\n                },\n            });\n        }\n        // eslint-disable-next-line no-empty\n    }\n    catch (_oO) { }\n    return sentryWrapped;\n}\n/**\n * Injects the Report Dialog script\n * @hidden\n */\nexport function injectReportDialog(options) {\n    if (options === void 0) { options = {}; }\n    if (!options.eventId) {\n        logger.error(\"Missing eventId option in showReportDialog call\");\n        return;\n    }\n    if (!options.dsn) {\n        logger.error(\"Missing dsn option in showReportDialog call\");\n        return;\n    }\n    var script = document.createElement('script');\n    script.async = true;\n    script.src = new API(options.dsn).getReportDialogEndpoint(options);\n    if (options.onLoad) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        script.onload = options.onLoad;\n    }\n    (document.head || document.body).appendChild(script);\n}\n//# sourceMappingURL=helpers.js.map","import { __assign } from \"tslib\";\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionMechanism, addInstrumentationHandler, getLocationHref, isErrorEvent, isPrimitive, isString, logger, } from '@sentry/utils';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n/** Global handlers */\nvar GlobalHandlers = /** @class */ (function () {\n    /** JSDoc */\n    function GlobalHandlers(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = GlobalHandlers.id;\n        /** JSDoc */\n        this._onErrorHandlerInstalled = false;\n        /** JSDoc */\n        this._onUnhandledRejectionHandlerInstalled = false;\n        this._options = __assign({ onerror: true, onunhandledrejection: true }, options);\n    }\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.prototype.setupOnce = function () {\n        Error.stackTraceLimit = 50;\n        if (this._options.onerror) {\n            logger.log('Global Handler attached: onerror');\n            this._installGlobalOnErrorHandler();\n        }\n        if (this._options.onunhandledrejection) {\n            logger.log('Global Handler attached: onunhandledrejection');\n            this._installGlobalOnUnhandledRejectionHandler();\n        }\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._installGlobalOnErrorHandler = function () {\n        var _this = this;\n        if (this._onErrorHandlerInstalled) {\n            return;\n        }\n        addInstrumentationHandler({\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            callback: function (data) {\n                var error = data.error;\n                var currentHub = getCurrentHub();\n                var hasIntegration = currentHub.getIntegration(GlobalHandlers);\n                var isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n                if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n                    return;\n                }\n                var client = currentHub.getClient();\n                var event = isPrimitive(error)\n                    ? _this._eventFromIncompleteOnError(data.msg, data.url, data.line, data.column)\n                    : _this._enhanceEventWithInitialFrame(eventFromUnknownInput(error, undefined, {\n                        attachStacktrace: client && client.getOptions().attachStacktrace,\n                        rejection: false,\n                    }), data.url, data.line, data.column);\n                addExceptionMechanism(event, {\n                    handled: false,\n                    type: 'onerror',\n                });\n                currentHub.captureEvent(event, {\n                    originalException: error,\n                });\n            },\n            type: 'error',\n        });\n        this._onErrorHandlerInstalled = true;\n    };\n    /** JSDoc */\n    GlobalHandlers.prototype._installGlobalOnUnhandledRejectionHandler = function () {\n        var _this = this;\n        if (this._onUnhandledRejectionHandlerInstalled) {\n            return;\n        }\n        addInstrumentationHandler({\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            callback: function (e) {\n                var error = e;\n                // dig the object of the rejection out of known event types\n                try {\n                    // PromiseRejectionEvents store the object of the rejection under 'reason'\n                    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n                    if ('reason' in e) {\n                        error = e.reason;\n                    }\n                    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n                    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n                    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n                    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n                    // https://github.com/getsentry/sentry-javascript/issues/2380\n                    else if ('detail' in e && 'reason' in e.detail) {\n                        error = e.detail.reason;\n                    }\n                }\n                catch (_oO) {\n                    // no-empty\n                }\n                var currentHub = getCurrentHub();\n                var hasIntegration = currentHub.getIntegration(GlobalHandlers);\n                var isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n                if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n                    return true;\n                }\n                var client = currentHub.getClient();\n                var event = isPrimitive(error)\n                    ? _this._eventFromIncompleteRejection(error)\n                    : eventFromUnknownInput(error, undefined, {\n                        attachStacktrace: client && client.getOptions().attachStacktrace,\n                        rejection: true,\n                    });\n                event.level = Severity.Error;\n                addExceptionMechanism(event, {\n                    handled: false,\n                    type: 'onunhandledrejection',\n                });\n                currentHub.captureEvent(event, {\n                    originalException: error,\n                });\n                return;\n            },\n            type: 'unhandledrejection',\n        });\n        this._onUnhandledRejectionHandlerInstalled = true;\n    };\n    /**\n     * This function creates a stack from an old, error-less onerror handler.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    GlobalHandlers.prototype._eventFromIncompleteOnError = function (msg, url, line, column) {\n        var ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n        // If 'message' is ErrorEvent, get real message from inside\n        var message = isErrorEvent(msg) ? msg.message : msg;\n        var name;\n        if (isString(message)) {\n            var groups = message.match(ERROR_TYPES_RE);\n            if (groups) {\n                name = groups[1];\n                message = groups[2];\n            }\n        }\n        var event = {\n            exception: {\n                values: [\n                    {\n                        type: name || 'Error',\n                        value: message,\n                    },\n                ],\n            },\n        };\n        return this._enhanceEventWithInitialFrame(event, url, line, column);\n    };\n    /**\n     * This function creates an Event from an TraceKitStackTrace that has part of it missing.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    GlobalHandlers.prototype._eventFromIncompleteRejection = function (error) {\n        return {\n            exception: {\n                values: [\n                    {\n                        type: 'UnhandledRejection',\n                        value: \"Non-Error promise rejection captured with value: \" + error,\n                    },\n                ],\n            },\n        };\n    };\n    /** JSDoc */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    GlobalHandlers.prototype._enhanceEventWithInitialFrame = function (event, url, line, column) {\n        event.exception = event.exception || {};\n        event.exception.values = event.exception.values || [];\n        event.exception.values[0] = event.exception.values[0] || {};\n        event.exception.values[0].stacktrace = event.exception.values[0].stacktrace || {};\n        event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames || [];\n        var colno = isNaN(parseInt(column, 10)) ? undefined : column;\n        var lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n        var filename = isString(url) && url.length > 0 ? url : getLocationHref();\n        if (event.exception.values[0].stacktrace.frames.length === 0) {\n            event.exception.values[0].stacktrace.frames.push({\n                colno: colno,\n                filename: filename,\n                function: '?',\n                in_app: true,\n                lineno: lineno,\n            });\n        }\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.id = 'GlobalHandlers';\n    return GlobalHandlers;\n}());\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map","import { __assign } from \"tslib\";\nimport { fill, getFunctionName, getGlobalObject } from '@sentry/utils';\nimport { wrap } from '../helpers';\nvar DEFAULT_EVENT_TARGET = [\n    'EventTarget',\n    'Window',\n    'Node',\n    'ApplicationCache',\n    'AudioTrackList',\n    'ChannelMergerNode',\n    'CryptoOperation',\n    'EventSource',\n    'FileReader',\n    'HTMLUnknownElement',\n    'IDBDatabase',\n    'IDBRequest',\n    'IDBTransaction',\n    'KeyOperation',\n    'MediaController',\n    'MessagePort',\n    'ModalWindow',\n    'Notification',\n    'SVGElementInstance',\n    'Screen',\n    'TextTrack',\n    'TextTrackCue',\n    'TextTrackList',\n    'WebSocket',\n    'WebSocketWorker',\n    'Worker',\n    'XMLHttpRequest',\n    'XMLHttpRequestEventTarget',\n    'XMLHttpRequestUpload',\n];\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nvar TryCatch = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function TryCatch(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = TryCatch.id;\n        this._options = __assign({ XMLHttpRequest: true, eventTarget: true, requestAnimationFrame: true, setInterval: true, setTimeout: true }, options);\n    }\n    /**\n     * Wrap timer functions and event targets to catch errors\n     * and provide better metadata.\n     */\n    TryCatch.prototype.setupOnce = function () {\n        var global = getGlobalObject();\n        if (this._options.setTimeout) {\n            fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n        }\n        if (this._options.setInterval) {\n            fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n        }\n        if (this._options.requestAnimationFrame) {\n            fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n        }\n        if (this._options.XMLHttpRequest && 'XMLHttpRequest' in global) {\n            fill(XMLHttpRequest.prototype, 'send', this._wrapXHR.bind(this));\n        }\n        if (this._options.eventTarget) {\n            var eventTarget = Array.isArray(this._options.eventTarget) ? this._options.eventTarget : DEFAULT_EVENT_TARGET;\n            eventTarget.forEach(this._wrapEventTarget.bind(this));\n        }\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapTimeFunction = function (original) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var originalCallback = args[0];\n            args[0] = wrap(originalCallback, {\n                mechanism: {\n                    data: { function: getFunctionName(original) },\n                    handled: true,\n                    type: 'instrument',\n                },\n            });\n            return original.apply(this, args);\n        };\n    };\n    /** JSDoc */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TryCatch.prototype._wrapRAF = function (original) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return function (callback) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            return original.call(this, wrap(callback, {\n                mechanism: {\n                    data: {\n                        function: 'requestAnimationFrame',\n                        handler: getFunctionName(original),\n                    },\n                    handled: true,\n                    type: 'instrument',\n                },\n            }));\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapEventTarget = function (target) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var global = getGlobalObject();\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        var proto = global[target] && global[target].prototype;\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n            return;\n        }\n        fill(proto, 'addEventListener', function (original) {\n            return function (eventName, fn, options) {\n                try {\n                    if (typeof fn.handleEvent === 'function') {\n                        fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n                            mechanism: {\n                                data: {\n                                    function: 'handleEvent',\n                                    handler: getFunctionName(fn),\n                                    target: target,\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        });\n                    }\n                }\n                catch (err) {\n                    // can sometimes get 'Permission denied to access property \"handle Event'\n                }\n                return original.call(this, eventName, \n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                wrap(fn, {\n                    mechanism: {\n                        data: {\n                            function: 'addEventListener',\n                            handler: getFunctionName(fn),\n                            target: target,\n                        },\n                        handled: true,\n                        type: 'instrument',\n                    },\n                }), options);\n            };\n        });\n        fill(proto, 'removeEventListener', function (original) {\n            return function (eventName, fn, options) {\n                /**\n                 * There are 2 possible scenarios here:\n                 *\n                 * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n                 * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n                 * as a pass-through, and call original `removeEventListener` with it.\n                 *\n                 * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n                 * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n                 * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n                 * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n                 * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n                 *\n                 * When someone adds a handler prior to initialization, and then do it again, but after,\n                 * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n                 * to get rid of the initial handler and it'd stick there forever.\n                 */\n                try {\n                    original.call(this, eventName, fn.__sentry_wrapped__, options);\n                }\n                catch (e) {\n                    // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                }\n                return original.call(this, eventName, fn, options);\n            };\n        });\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapXHR = function (originalSend) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var xhr = this;\n            var xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n            xmlHttpRequestProps.forEach(function (prop) {\n                if (prop in xhr && typeof xhr[prop] === 'function') {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    fill(xhr, prop, function (original) {\n                        var wrapOptions = {\n                            mechanism: {\n                                data: {\n                                    function: prop,\n                                    handler: getFunctionName(original),\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        };\n                        // If Instrument integration has been called before TryCatch, get the name of original function\n                        if (original.__sentry_original__) {\n                            wrapOptions.mechanism.data.handler = getFunctionName(original.__sentry_original__);\n                        }\n                        // Otherwise wrap directly\n                        return wrap(original, wrapOptions);\n                    });\n                }\n            });\n            return originalSend.apply(this, args);\n        };\n    };\n    /**\n     * @inheritDoc\n     */\n    TryCatch.id = 'TryCatch';\n    return TryCatch;\n}());\nexport { TryCatch };\n//# sourceMappingURL=trycatch.js.map","import { __assign, __read, __spread } from \"tslib\";\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable max-lines */\nimport { getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addInstrumentationHandler, getEventDescription, getGlobalObject, htmlTreeAsString, parseUrl, safeJoin, } from '@sentry/utils';\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nvar Breadcrumbs = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Breadcrumbs(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = Breadcrumbs.id;\n        this._options = __assign({ console: true, dom: true, fetch: true, history: true, sentry: true, xhr: true }, options);\n    }\n    /**\n     * Create a breadcrumb of `sentry` from the events themselves\n     */\n    Breadcrumbs.prototype.addSentryBreadcrumb = function (event) {\n        if (!this._options.sentry) {\n            return;\n        }\n        getCurrentHub().addBreadcrumb({\n            category: \"sentry.\" + (event.type === 'transaction' ? 'transaction' : 'event'),\n            event_id: event.event_id,\n            level: event.level,\n            message: getEventDescription(event),\n        }, {\n            event: event,\n        });\n    };\n    /**\n     * Instrument browser built-ins w/ breadcrumb capturing\n     *  - Console API\n     *  - DOM API (click/typing)\n     *  - XMLHttpRequest API\n     *  - Fetch API\n     *  - History API\n     */\n    Breadcrumbs.prototype.setupOnce = function () {\n        var _this = this;\n        if (this._options.console) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._consoleBreadcrumb.apply(_this, __spread(args));\n                },\n                type: 'console',\n            });\n        }\n        if (this._options.dom) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._domBreadcrumb.apply(_this, __spread(args));\n                },\n                type: 'dom',\n            });\n        }\n        if (this._options.xhr) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._xhrBreadcrumb.apply(_this, __spread(args));\n                },\n                type: 'xhr',\n            });\n        }\n        if (this._options.fetch) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._fetchBreadcrumb.apply(_this, __spread(args));\n                },\n                type: 'fetch',\n            });\n        }\n        if (this._options.history) {\n            addInstrumentationHandler({\n                callback: function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    _this._historyBreadcrumb.apply(_this, __spread(args));\n                },\n                type: 'history',\n            });\n        }\n    };\n    /**\n     * Creates breadcrumbs from console API calls\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Breadcrumbs.prototype._consoleBreadcrumb = function (handlerData) {\n        var breadcrumb = {\n            category: 'console',\n            data: {\n                arguments: handlerData.args,\n                logger: 'console',\n            },\n            level: Severity.fromString(handlerData.level),\n            message: safeJoin(handlerData.args, ' '),\n        };\n        if (handlerData.level === 'assert') {\n            if (handlerData.args[0] === false) {\n                breadcrumb.message = \"Assertion failed: \" + (safeJoin(handlerData.args.slice(1), ' ') || 'console.assert');\n                breadcrumb.data.arguments = handlerData.args.slice(1);\n            }\n            else {\n                // Don't capture a breadcrumb for passed assertions\n                return;\n            }\n        }\n        getCurrentHub().addBreadcrumb(breadcrumb, {\n            input: handlerData.args,\n            level: handlerData.level,\n        });\n    };\n    /**\n     * Creates breadcrumbs from DOM API calls\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Breadcrumbs.prototype._domBreadcrumb = function (handlerData) {\n        var target;\n        // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n        try {\n            target = handlerData.event.target\n                ? htmlTreeAsString(handlerData.event.target)\n                : htmlTreeAsString(handlerData.event);\n        }\n        catch (e) {\n            target = '<unknown>';\n        }\n        if (target.length === 0) {\n            return;\n        }\n        getCurrentHub().addBreadcrumb({\n            category: \"ui.\" + handlerData.name,\n            message: target,\n        }, {\n            event: handlerData.event,\n            name: handlerData.name,\n        });\n    };\n    /**\n     * Creates breadcrumbs from XHR API calls\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Breadcrumbs.prototype._xhrBreadcrumb = function (handlerData) {\n        if (handlerData.endTimestamp) {\n            // We only capture complete, non-sentry requests\n            if (handlerData.xhr.__sentry_own_request__) {\n                return;\n            }\n            getCurrentHub().addBreadcrumb({\n                category: 'xhr',\n                data: handlerData.xhr.__sentry_xhr__,\n                type: 'http',\n            }, {\n                xhr: handlerData.xhr,\n            });\n            return;\n        }\n    };\n    /**\n     * Creates breadcrumbs from fetch API calls\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Breadcrumbs.prototype._fetchBreadcrumb = function (handlerData) {\n        // We only capture complete fetch requests\n        if (!handlerData.endTimestamp) {\n            return;\n        }\n        if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n            // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n            return;\n        }\n        if (handlerData.error) {\n            getCurrentHub().addBreadcrumb({\n                category: 'fetch',\n                data: handlerData.fetchData,\n                level: Severity.Error,\n                type: 'http',\n            }, {\n                data: handlerData.error,\n                input: handlerData.args,\n            });\n        }\n        else {\n            getCurrentHub().addBreadcrumb({\n                category: 'fetch',\n                data: __assign(__assign({}, handlerData.fetchData), { status_code: handlerData.response.status }),\n                type: 'http',\n            }, {\n                input: handlerData.args,\n                response: handlerData.response,\n            });\n        }\n    };\n    /**\n     * Creates breadcrumbs from history API calls\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Breadcrumbs.prototype._historyBreadcrumb = function (handlerData) {\n        var global = getGlobalObject();\n        var from = handlerData.from;\n        var to = handlerData.to;\n        var parsedLoc = parseUrl(global.location.href);\n        var parsedFrom = parseUrl(from);\n        var parsedTo = parseUrl(to);\n        // Initial pushState doesn't provide `from` information\n        if (!parsedFrom.path) {\n            parsedFrom = parsedLoc;\n        }\n        // Use only the path component of the URL if the URL matches the current\n        // document (almost all the time when using pushState)\n        if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n            to = parsedTo.relative;\n        }\n        if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n            from = parsedFrom.relative;\n        }\n        getCurrentHub().addBreadcrumb({\n            category: 'navigation',\n            data: {\n                from: from,\n                to: to,\n            },\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Breadcrumbs.id = 'Breadcrumbs';\n    return Breadcrumbs;\n}());\nexport { Breadcrumbs };\n//# sourceMappingURL=breadcrumbs.js.map","import { __read, __spread } from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { isInstanceOf } from '@sentry/utils';\nimport { exceptionFromStacktrace } from '../parsers';\nimport { computeStackTrace } from '../tracekit';\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n/** Adds SDK info to an event. */\nvar LinkedErrors = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function LinkedErrors(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = LinkedErrors.id;\n        this._key = options.key || DEFAULT_KEY;\n        this._limit = options.limit || DEFAULT_LIMIT;\n    }\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event, hint) {\n            var self = getCurrentHub().getIntegration(LinkedErrors);\n            if (self) {\n                return self._handler(event, hint);\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._handler = function (event, hint) {\n        if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n            return event;\n        }\n        var linkedErrors = this._walkErrorTree(hint.originalException, this._key);\n        event.exception.values = __spread(linkedErrors, event.exception.values);\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._walkErrorTree = function (error, key, stack) {\n        if (stack === void 0) { stack = []; }\n        if (!isInstanceOf(error[key], Error) || stack.length + 1 >= this._limit) {\n            return stack;\n        }\n        var stacktrace = computeStackTrace(error[key]);\n        var exception = exceptionFromStacktrace(stacktrace);\n        return this._walkErrorTree(error[key], key, __spread([exception], stack));\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.id = 'LinkedErrors';\n    return LinkedErrors;\n}());\nexport { LinkedErrors };\n//# sourceMappingURL=linkederrors.js.map","import { __assign } from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nvar global = getGlobalObject();\n/** UserAgent */\nvar UserAgent = /** @class */ (function () {\n    function UserAgent() {\n        /**\n         * @inheritDoc\n         */\n        this.name = UserAgent.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    UserAgent.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            if (getCurrentHub().getIntegration(UserAgent)) {\n                if (!global.navigator || !global.location) {\n                    return event;\n                }\n                var request = event.request || {};\n                request.url = request.url || global.location.href;\n                request.headers = request.headers || {};\n                request.headers['User-Agent'] = global.navigator.userAgent;\n                return __assign(__assign({}, event), { request: request });\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    UserAgent.id = 'UserAgent';\n    return UserAgent;\n}());\nexport { UserAgent };\n//# sourceMappingURL=useragent.js.map","export var SDK_NAME = 'sentry.javascript.browser';\nexport var SDK_VERSION = '5.22.3';\n//# sourceMappingURL=version.js.map","import { __assign, __extends, __read, __spread } from \"tslib\";\nimport { BaseClient } from '@sentry/core';\nimport { getGlobalObject, logger } from '@sentry/utils';\nimport { BrowserBackend } from './backend';\nimport { injectReportDialog } from './helpers';\nimport { Breadcrumbs } from './integrations';\nimport { SDK_NAME, SDK_VERSION } from './version';\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nvar BrowserClient = /** @class */ (function (_super) {\n    __extends(BrowserClient, _super);\n    /**\n     * Creates a new Browser SDK instance.\n     *\n     * @param options Configuration options for this SDK.\n     */\n    function BrowserClient(options) {\n        if (options === void 0) { options = {}; }\n        return _super.call(this, BrowserBackend, options) || this;\n    }\n    /**\n     * Show a report dialog to the user to send feedback to a specific event.\n     *\n     * @param options Set individual options for the dialog\n     */\n    BrowserClient.prototype.showReportDialog = function (options) {\n        if (options === void 0) { options = {}; }\n        // doesn't work without a document (React Native)\n        var document = getGlobalObject().document;\n        if (!document) {\n            return;\n        }\n        if (!this._isEnabled()) {\n            logger.error('Trying to call showReportDialog with Sentry Client disabled');\n            return;\n        }\n        injectReportDialog(__assign(__assign({}, options), { dsn: options.dsn || this.getDsn() }));\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserClient.prototype._prepareEvent = function (event, scope, hint) {\n        event.platform = event.platform || 'javascript';\n        event.sdk = __assign(__assign({}, event.sdk), { name: SDK_NAME, packages: __spread(((event.sdk && event.sdk.packages) || []), [\n                {\n                    name: 'npm:@sentry/browser',\n                    version: SDK_VERSION,\n                },\n            ]), version: SDK_VERSION });\n        return _super.prototype._prepareEvent.call(this, event, scope, hint);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserClient.prototype._sendEvent = function (event) {\n        var integration = this.getIntegration(Breadcrumbs);\n        if (integration) {\n            integration.addSentryBreadcrumb(event);\n        }\n        _super.prototype._sendEvent.call(this, event);\n    };\n    return BrowserClient;\n}(BaseClient));\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map","import { getCurrentHub, initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject, SyncPromise } from '@sentry/utils';\nimport { BrowserClient } from './client';\nimport { wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\nexport var defaultIntegrations = [\n    new CoreIntegrations.InboundFilters(),\n    new CoreIntegrations.FunctionToString(),\n    new TryCatch(),\n    new Breadcrumbs(),\n    new GlobalHandlers(),\n    new LinkedErrors(),\n    new UserAgent(),\n];\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options) {\n    if (options === void 0) { options = {}; }\n    if (options.defaultIntegrations === undefined) {\n        options.defaultIntegrations = defaultIntegrations;\n    }\n    if (options.release === undefined) {\n        var window_1 = getGlobalObject();\n        // This supports the variable that sentry-webpack-plugin injects\n        if (window_1.SENTRY_RELEASE && window_1.SENTRY_RELEASE.id) {\n            options.release = window_1.SENTRY_RELEASE.id;\n        }\n    }\n    initAndBind(BrowserClient, options);\n}\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options) {\n    if (options === void 0) { options = {}; }\n    if (!options.eventId) {\n        options.eventId = getCurrentHub().lastEventId();\n    }\n    var client = getCurrentHub().getClient();\n    if (client) {\n        client.showReportDialog(options);\n    }\n}\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId() {\n    return getCurrentHub().lastEventId();\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad() {\n    // Noop\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback) {\n    callback();\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function flush(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.flush(timeout);\n    }\n    return SyncPromise.reject(false);\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function close(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.close(timeout);\n    }\n    return SyncPromise.reject(false);\n}\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrap(fn) {\n    return internalWrap(fn)();\n}\n//# sourceMappingURL=sdk.js.map","import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instanciate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind(clientClass, options) {\n    if (options.debug === true) {\n        logger.enable();\n    }\n    var hub = getCurrentHub();\n    var client = new clientClass(options);\n    hub.bindClient(client);\n}\n//# sourceMappingURL=sdk.js.map","function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_nonIterableRest()}function _arrayWithHoles(e){if(Array.isArray(e))return e}function _iterableToArrayLimit(e,t){var n=[],r=!0,o=!1,i=void 0;try{for(var s,a=e[Symbol.iterator]();!(r=(s=a.next()).done)&&(n.push(s.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==a.return||a.return()}finally{if(o)throw i}}return n}function _nonIterableRest(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}var getConstructor=function(e){return null!=e?e.constructor:null},instanceOf=function(e,t){return!!(e&&t&&e instanceof t)},isNullOrUndefined=function(e){return null==e},isObject=function(e){return getConstructor(e)===Object},isNumber=function(e){return getConstructor(e)===Number&&!Number.isNaN(e)},isString=function(e){return getConstructor(e)===String},isBoolean=function(e){return getConstructor(e)===Boolean},isFunction=function(e){return getConstructor(e)===Function},isArray=function(e){return Array.isArray(e)},isNodeList=function(e){return instanceOf(e,NodeList)},isElement=function(e){return instanceOf(e,Element)},isEvent=function(e){return instanceOf(e,Event)},isEmpty=function(e){return isNullOrUndefined(e)||(isString(e)||isArray(e)||isNodeList(e))&&!e.length||isObject(e)&&!Object.keys(e).length},is={nullOrUndefined:isNullOrUndefined,object:isObject,number:isNumber,string:isString,boolean:isBoolean,function:isFunction,array:isArray,nodeList:isNodeList,element:isElement,event:isEvent,empty:isEmpty},constants={facebook:{domain:\"facebook.com\",url:function(e){return\"https://graph.facebook.com/?id=\".concat(e,\"&fields=og_object{engagement}\")},shareCount:function(e){return e.og_object.engagement.count},popup:{width:640,height:360}},twitter:{domain:\"twitter.com\",url:function(){return null},shareCount:function(){return null},popup:{width:640,height:240}},pinterest:{domain:\"pinterest.com\",url:function(e){return\"https://widgets.pinterest.com/v1/urls/count.json?url=\".concat(e)},shareCount:function(e){return e.count},popup:{width:830,height:700}},github:{domain:\"github.com\",url:function(e,t){return\"https://api.github.com/repos/\".concat(e).concat(is.string(t)?\"?access_token=\".concat(t):\"\")},shareCount:function(e){return e.data.stargazers_count}},youtube:{domain:\"youtube.com\",url:function(e,t){return\"https://www.googleapis.com/youtube/v3/channels?part=statistics&id=\".concat(e,\"&key=\").concat(t)},shareCount:function(e){if(!is.empty(e.error))return null;var t=_slicedToArray(e.items,1)[0];return is.empty(t)?null:t.statistics.subscriberCount}}},defaults={debug:!1,wrapper:{className:\"shr\"},count:{className:\"shr__count\",displayZero:!1,format:!0,position:\"after\",increment:!0},tokens:{github:\"\",youtube:\"\"},storage:{enabled:!0,key:\"shr\",ttl:3e5}};function getJSONP(e){return new Promise(function(t,n){var r=\"jsonp_callback_\".concat(Math.round(1e5*Math.random())),o=document.createElement(\"script\");o.addEventListener(\"error\",function(e){return n(e)}),window[r]=function(e){delete window[r],document.body.removeChild(o),t(e)};var i=new URL(e);i.searchParams.set(\"callback\",r),o.setAttribute(\"src\",i.toString()),document.body.appendChild(o)})}var noop=function(){},Console=function(){function e(){var t=!!(0<arguments.length&&void 0!==arguments[0])&&arguments[0];_classCallCheck(this,e),this.enabled=window.console&&t,this.enabled&&this.log(\"Debugging enabled\")}return _createClass(e,[{key:\"log\",get:function(){return this.enabled?Function.prototype.bind.call(console.log,console):noop}},{key:\"warn\",get:function(){return this.enabled?Function.prototype.bind.call(console.warn,console):noop}},{key:\"error\",get:function(){return this.enabled?Function.prototype.bind.call(console.error,console):noop}}]),e}();function matches(e,t){return function(){return Array.from(document.querySelectorAll(t)).includes(this)}.call(e,t)}function wrap(e,t){var n=e.length?e:[e];Array.from(n).reverse().forEach(function(e,n){var r=0<n?t.cloneNode(!0):t,o=e.parentNode,i=e.nextSibling;r.appendChild(e),i?o.insertBefore(r,i):o.appendChild(r)})}function setAttributes(e,t){!is.element(e)||is.empty(t)||Object.entries(t).filter(function(e){var t=_slicedToArray(e,2)[1];return!is.nullOrUndefined(t)}).forEach(function(t){var n=_slicedToArray(t,2),r=n[0],o=n[1];return e.setAttribute(r,o)})}function createElement(e,t,n){var r=document.createElement(e);return is.object(t)&&setAttributes(r,t),is.string(n)&&(r.innerText=n),r}function formatNumber(e){var t=/\\./.test(1.1.toLocaleString())?\".\":\",\",n=new RegExp(\"\\\\\".concat(t,\"\\\\d+$\"));return Math.round(e).toLocaleString().replace(n,\"\")}function extend(){for(var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length,n=Array(1<t?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];if(!n.length)return e;var o=n.shift();return is.object(o)?(Object.keys(o).forEach(function(t){is.object(o[t])?(!Object.keys(e).includes(t)&&Object.assign(e,_defineProperty({},t,{})),extend(e[t],o[t])):Object.assign(e,_defineProperty({},t,o[t]))}),extend.apply(void 0,[e].concat(n))):e}var Storage=function(){function e(t,n){var r=!(2<arguments.length&&void 0!==arguments[2])||arguments[2];_classCallCheck(this,e),this.enabled=r&&e.supported,this.key=t,this.ttl=n}return _createClass(e,[{key:\"get\",value:function(t){if(!e.supported||!this.enabled)return null;var n=window.localStorage.getItem(this.key);if(is.empty(n))return null;var r=window.localStorage.getItem(\"\".concat(this.key,\"_ttl\"));if(is.empty(r)||r<Date.now())return null;var o=JSON.parse(n);return is.string(t)&&t.length?o[t]:o}},{key:\"set\",value:function(t){if(e.supported&&this.enabled&&is.object(t)){var n=this.get();is.empty(n)&&(n={}),extend(n,t),window.localStorage.setItem(this.key,JSON.stringify(n)),window.localStorage.setItem(\"\".concat(this.key,\"_ttl\"),Date.now()+this.ttl)}}}],[{key:\"supported\",get:function(){try{return\"localStorage\"in window&&(window.localStorage.setItem(\"___test\",\"___test\"),window.localStorage.removeItem(\"___test\"),!0)}catch(e){return!1}}}]),e}();function getDomain(e){var t=new URL(e).hostname,n=t.split(\".\"),r=n.length;return 2<r&&(t=\"\".concat(n[r-2],\".\").concat(n[r-1]),2===n[r-2].length&&2===n[r-1].length&&(t=\"\".concat(n[r-3],\".\").concat(t))),t}var Shr=function(){function e(t,n){var r=this;_classCallCheck(this,e),this.elements={count:null,trigger:null,popup:null},is.element(t)?this.elements.trigger=t:is.string(t)&&(this.elements.trigger=document.querySelector(t)),is.element(this.elements.trigger)&&is.empty(this.elements.trigger.shr)&&(this.config=extend({},defaults,n,{networks:constants}),this.console=new Console(this.config.debug),this.storage=new Storage(this.config.storage.key,this.config.storage.ttl,this.config.storage.enabled),this.getCount().then(function(e){return r.updateDisplay(e)}).catch(function(){}),this.listeners(!0),this.elements.trigger.shr=this)}return _createClass(e,[{key:\"destroy\",value:function(){this.listeners(!1)}},{key:\"listeners\",value:function(){var e=this,t=!!(0<arguments.length&&void 0!==arguments[0])&&arguments[0]?\"addEventListener\":\"removeEventListener\";this.elements.trigger[t](\"click\",function(t){return e.share(t)},!1)}},{key:\"share\",value:function(e){var t=this;this.openPopup(e);var n=this.config.count.increment;this.getCount().then(function(e){return t.updateDisplay(e,n)}).catch(function(){})}},{key:\"openPopup\",value:function(e){if(!is.empty(this.network)&&this.networkConfig.popup){is.event(e)&&e.preventDefault();var t=this.networkConfig.popup,n=t.width,r=t.height,o=\"shr-popup--\".concat(this.network);if(this.popup&&!this.popup.closed)this.popup.focus(),this.console.log(\"Popup re-focused.\");else{var i=void 0===window.screenLeft?window.screen.left:window.screenLeft,s=void 0===window.screenTop?window.screen.top:window.screenTop,a=window.screen.width/2-n/2+i,c=window.screen.height/2-r/2+s;this.popup=window.open(this.href,o,\"top=\".concat(c,\",left=\").concat(a,\",width=\").concat(n,\",height=\").concat(r)),!this.popup||this.popup.closed||!is.boolean(this.popup.closed)?this.console.error(\"Popup blocked.\"):(this.popup.focus(),this.console.log(\"Popup opened.\"))}}}},{key:\"getCount\",value:function(){var e=this,t=!(0<arguments.length&&void 0!==arguments[0])||arguments[0];return new Promise(function(n,r){var o=e.apiUrl;if(is.empty(o))r(new Error(\"No URL available for \".concat(e.network,\".\")));else{if(t){var i=e.storage.get(e.target);if(!is.empty(i)&&Object.keys(i).includes(e.network)){var s=i[e.network];return n(is.number(s)?s:0),void e.console.log(\"getCount for '\".concat(e.target,\"' for '\").concat(e.network,\"' resolved from cache.\"))}}getJSONP(o).then(function(t){var r=0,o=e.elements.trigger.getAttribute(\"data-shr-display\");r=is.empty(o)?e.networkConfig.shareCount(t):t[o],is.empty(r)?r=0:(r=parseInt(r,10),!is.number(r)&&(r=0)),e.storage.set(_defineProperty({},e.target,_defineProperty({},e.network,r))),n(r)}).catch(r)}})}},{key:\"updateDisplay\",value:function(e){var t=!!(1<arguments.length&&void 0!==arguments[1])&&arguments[1],n=this.config,r=n.count,o=n.wrapper,i=t?e+1:e,s=r.position.toLowerCase();if(0<i||r.displayZero){var a=function(e){return Math.round(i/e*10)/10},c=formatNumber(i);r.format&&(1e6<i?c=\"\".concat(a(1e6),\"M\"):1e3<i&&(c=\"\".concat(a(1e3),\"K\"))),is.element(this.elements.count)?this.elements.count.textContent=c:(wrap(this.elements.trigger,createElement(\"span\",{class:o.className})),this.elements.count=createElement(\"span\",{class:\"\".concat(r.className,\" \").concat(r.className,\"--\").concat(s)},c),this.elements.trigger.insertAdjacentElement(\"after\"===s?\"afterend\":\"beforebegin\",this.elements.count))}}},{key:\"href\",get:function(){return is.element(this.elements.trigger)?this.elements.trigger.href:null}},{key:\"network\",get:function(){var e=this;if(!is.element(this.elements.trigger))return null;var t=this.config.networks;return Object.keys(t).find(function(n){return getDomain(e.href)===t[n].domain})}},{key:\"networkConfig\",get:function(){return is.empty(this.network)?null:this.config.networks[this.network]}},{key:\"target\",get:function(){if(is.empty(this.network))return null;var e=new URL(this.href);switch(this.network){case\"facebook\":return e.searchParams.get(\"u\");case\"github\":return e.pathname.substring(1);case\"youtube\":return e.pathname.split(\"/\").pop();default:return e.searchParams.get(\"url\")}}},{key:\"apiUrl\",get:function(){if(is.empty(this.network))return null;var e=this.config.tokens;switch(this.network){case\"github\":return this.networkConfig.url(this.target,e.github);case\"youtube\":return this.networkConfig.url(this.target,e.youtube);default:return this.networkConfig.url(encodeURIComponent(this.target))}}}],[{key:\"setup\",value:function(t){var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},r=null;if(is.string(t)?r=Array.from(document.querySelectorAll(t)):is.element(t)?r=[t]:is.nodeList(t)?r=Array.from(t):is.array(t)&&(r=t.filter(is.element)),is.empty(r))return null;var o=Object.assign({},defaults,n);is.string(t)&&o.watch&&new MutationObserver(function(n){Array.from(n).forEach(function(n){Array.from(n.addedNodes).forEach(function(n){is.element(n)&&matches(n,t)&&new e(n,o)})})}).observe(document.body,{childList:!0,subtree:!0});return r.map(function(t){return new e(t,n)})}}]),e}();export default Shr;","function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function ownKeys(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function _objectSpread2(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(Object(n),!0).forEach((function(t){_defineProperty(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ownKeys(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var defaults={addCSS:!0,thumbWidth:15,watch:!0};function matches(e,t){return function(){return Array.from(document.querySelectorAll(t)).includes(this)}.call(e,t)}function trigger(e,t){if(e&&t){var n=new Event(t,{bubbles:!0});e.dispatchEvent(n)}}var getConstructor=function(e){return null!=e?e.constructor:null},instanceOf=function(e,t){return!!(e&&t&&e instanceof t)},isNullOrUndefined=function(e){return null==e},isObject=function(e){return getConstructor(e)===Object},isNumber=function(e){return getConstructor(e)===Number&&!Number.isNaN(e)},isString=function(e){return getConstructor(e)===String},isBoolean=function(e){return getConstructor(e)===Boolean},isFunction=function(e){return getConstructor(e)===Function},isArray=function(e){return Array.isArray(e)},isNodeList=function(e){return instanceOf(e,NodeList)},isElement=function(e){return instanceOf(e,Element)},isEvent=function(e){return instanceOf(e,Event)},isEmpty=function(e){return isNullOrUndefined(e)||(isString(e)||isArray(e)||isNodeList(e))&&!e.length||isObject(e)&&!Object.keys(e).length},is={nullOrUndefined:isNullOrUndefined,object:isObject,number:isNumber,string:isString,boolean:isBoolean,function:isFunction,array:isArray,nodeList:isNodeList,element:isElement,event:isEvent,empty:isEmpty};function getDecimalPlaces(e){var t=\"\".concat(e).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);return t?Math.max(0,(t[1]?t[1].length:0)-(t[2]?+t[2]:0)):0}function round(e,t){if(1>t){var n=getDecimalPlaces(t);return parseFloat(e.toFixed(n))}return Math.round(e/t)*t}var RangeTouch=function(){function e(t,n){_classCallCheck(this,e),is.element(t)?this.element=t:is.string(t)&&(this.element=document.querySelector(t)),is.element(this.element)&&is.empty(this.element.rangeTouch)&&(this.config=_objectSpread2({},defaults,{},n),this.init())}return _createClass(e,[{key:\"init\",value:function(){e.enabled&&(this.config.addCSS&&(this.element.style.userSelect=\"none\",this.element.style.webKitUserSelect=\"none\",this.element.style.touchAction=\"manipulation\"),this.listeners(!0),this.element.rangeTouch=this)}},{key:\"destroy\",value:function(){e.enabled&&(this.config.addCSS&&(this.element.style.userSelect=\"\",this.element.style.webKitUserSelect=\"\",this.element.style.touchAction=\"\"),this.listeners(!1),this.element.rangeTouch=null)}},{key:\"listeners\",value:function(e){var t=this,n=e?\"addEventListener\":\"removeEventListener\";[\"touchstart\",\"touchmove\",\"touchend\"].forEach((function(e){t.element[n](e,(function(e){return t.set(e)}),!1)}))}},{key:\"get\",value:function(t){if(!e.enabled||!is.event(t))return null;var n,r=t.target,i=t.changedTouches[0],o=parseFloat(r.getAttribute(\"min\"))||0,s=parseFloat(r.getAttribute(\"max\"))||100,u=parseFloat(r.getAttribute(\"step\"))||1,c=r.getBoundingClientRect(),a=100/c.width*(this.config.thumbWidth/2)/100;return 0>(n=100/c.width*(i.clientX-c.left))?n=0:100<n&&(n=100),50>n?n-=(100-2*n)*a:50<n&&(n+=2*(n-50)*a),o+round(n/100*(s-o),u)}},{key:\"set\",value:function(t){e.enabled&&is.event(t)&&!t.target.disabled&&(t.preventDefault(),t.target.value=this.get(t),trigger(t.target,\"touchend\"===t.type?\"change\":\"input\"))}}],[{key:\"setup\",value:function(t){var n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},r=null;if(is.empty(t)||is.string(t)?r=Array.from(document.querySelectorAll(is.string(t)?t:'input[type=\"range\"]')):is.element(t)?r=[t]:is.nodeList(t)?r=Array.from(t):is.array(t)&&(r=t.filter(is.element)),is.empty(r))return null;var i=_objectSpread2({},defaults,{},n);if(is.string(t)&&i.watch){var o=new MutationObserver((function(n){Array.from(n).forEach((function(n){Array.from(n.addedNodes).forEach((function(n){is.element(n)&&matches(n,t)&&new e(n,i)}))}))}));o.observe(document.body,{childList:!0,subtree:!0})}return r.map((function(t){return new e(t,n)}))}},{key:\"enabled\",get:function(){return\"ontouchstart\"in document.documentElement}}]),e}();export default RangeTouch;","// ==========================================================================\n// Type checking utils\n// ==========================================================================\n\nconst getConstructor = (input) => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\nconst instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\nconst isNullOrUndefined = (input) => input === null || typeof input === 'undefined';\nconst isObject = (input) => getConstructor(input) === Object;\nconst isNumber = (input) => getConstructor(input) === Number && !Number.isNaN(input);\nconst isString = (input) => getConstructor(input) === String;\nconst isBoolean = (input) => getConstructor(input) === Boolean;\nconst isFunction = (input) => typeof input === 'function';\nconst isArray = (input) => Array.isArray(input);\nconst isWeakMap = (input) => instanceOf(input, WeakMap);\nconst isNodeList = (input) => instanceOf(input, NodeList);\nconst isTextNode = (input) => getConstructor(input) === Text;\nconst isEvent = (input) => instanceOf(input, Event);\nconst isKeyboardEvent = (input) => instanceOf(input, KeyboardEvent);\nconst isCue = (input) => instanceOf(input, window.TextTrackCue) || instanceOf(input, window.VTTCue);\nconst isTrack = (input) => instanceOf(input, TextTrack) || (!isNullOrUndefined(input) && isString(input.kind));\nconst isPromise = (input) => instanceOf(input, Promise) && isFunction(input.then);\n\nconst isElement = (input) =>\n  input !== null &&\n  typeof input === 'object' &&\n  input.nodeType === 1 &&\n  typeof input.style === 'object' &&\n  typeof input.ownerDocument === 'object';\n\nconst isEmpty = (input) =>\n  isNullOrUndefined(input) ||\n  ((isString(input) || isArray(input) || isNodeList(input)) && !input.length) ||\n  (isObject(input) && !Object.keys(input).length);\n\nconst isUrl = (input) => {\n  // Accept a URL object\n  if (instanceOf(input, window.URL)) {\n    return true;\n  }\n\n  // Must be string from here\n  if (!isString(input)) {\n    return false;\n  }\n\n  // Add the protocol if required\n  let string = input;\n  if (!input.startsWith('http://') || !input.startsWith('https://')) {\n    string = `http://${input}`;\n  }\n\n  try {\n    return !isEmpty(new URL(string).hostname);\n  } catch (_) {\n    return false;\n  }\n};\n\nexport default {\n  nullOrUndefined: isNullOrUndefined,\n  object: isObject,\n  number: isNumber,\n  string: isString,\n  boolean: isBoolean,\n  function: isFunction,\n  array: isArray,\n  weakMap: isWeakMap,\n  nodeList: isNodeList,\n  element: isElement,\n  textNode: isTextNode,\n  event: isEvent,\n  keyboardEvent: isKeyboardEvent,\n  cue: isCue,\n  track: isTrack,\n  promise: isPromise,\n  url: isUrl,\n  empty: isEmpty,\n};\n","// ==========================================================================\n// Animation utils\n// ==========================================================================\n\nimport is from './is';\n\nexport const transitionEndEvent = (() => {\n  const element = document.createElement('span');\n\n  const events = {\n    WebkitTransition: 'webkitTransitionEnd',\n    MozTransition: 'transitionend',\n    OTransition: 'oTransitionEnd otransitionend',\n    transition: 'transitionend',\n  };\n\n  const type = Object.keys(events).find((event) => element.style[event] !== undefined);\n\n  return is.string(type) ? events[type] : false;\n})();\n\n// Force repaint of element\nexport function repaint(element, delay) {\n  setTimeout(() => {\n    try {\n      // eslint-disable-next-line no-param-reassign\n      element.hidden = true;\n\n      // eslint-disable-next-line no-unused-expressions\n      element.offsetHeight;\n\n      // eslint-disable-next-line no-param-reassign\n      element.hidden = false;\n    } catch (_) {\n      // Do nothing\n    }\n  }, delay);\n}\n","// ==========================================================================\n// Browser sniffing\n// Unfortunately, due to mixed support, UA sniffing is required\n// ==========================================================================\n\nconst browser = {\n  isIE: Boolean(window.document.documentMode),\n  isEdge: /Edge/g.test(navigator.userAgent),\n  isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/g.test(navigator.userAgent),\n  isIPhone: /iPhone|iPod/gi.test(navigator.userAgent) && navigator.maxTouchPoints > 1,\n  isIos: /iPad|iPhone|iPod/gi.test(navigator.userAgent) && navigator.maxTouchPoints > 1,\n};\n\nexport default browser;\n","// ==========================================================================\n// Object utils\n// ==========================================================================\n\nimport is from './is';\n\n// Clone nested objects\nexport function cloneDeep(object) {\n  return JSON.parse(JSON.stringify(object));\n}\n\n// Get a nested value in an object\nexport function getDeep(object, path) {\n  return path.split('.').reduce((obj, key) => obj && obj[key], object);\n}\n\n// Deep extend destination object with N more objects\nexport function extend(target = {}, ...sources) {\n  if (!sources.length) {\n    return target;\n  }\n\n  const source = sources.shift();\n\n  if (!is.object(source)) {\n    return target;\n  }\n\n  Object.keys(source).forEach((key) => {\n    if (is.object(source[key])) {\n      if (!Object.keys(target).includes(key)) {\n        Object.assign(target, { [key]: {} });\n      }\n\n      extend(target[key], source[key]);\n    } else {\n      Object.assign(target, { [key]: source[key] });\n    }\n  });\n\n  return extend(target, ...sources);\n}\n","// ==========================================================================\n// Element utils\n// ==========================================================================\n\nimport is from './is';\nimport { extend } from './objects';\n\n// Wrap an element\nexport function wrap(elements, wrapper) {\n  // Convert `elements` to an array, if necessary.\n  const targets = elements.length ? elements : [elements];\n\n  // Loops backwards to prevent having to clone the wrapper on the\n  // first element (see `child` below).\n  Array.from(targets)\n    .reverse()\n    .forEach((element, index) => {\n      const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n      // Cache the current parent and sibling.\n      const parent = element.parentNode;\n      const sibling = element.nextSibling;\n\n      // Wrap the element (is automatically removed from its current\n      // parent).\n      child.appendChild(element);\n\n      // If the element had a sibling, insert the wrapper before\n      // the sibling to maintain the HTML structure; otherwise, just\n      // append it to the parent.\n      if (sibling) {\n        parent.insertBefore(child, sibling);\n      } else {\n        parent.appendChild(child);\n      }\n    });\n}\n\n// Set attributes\nexport function setAttributes(element, attributes) {\n  if (!is.element(element) || is.empty(attributes)) {\n    return;\n  }\n\n  // Assume null and undefined attributes should be left out,\n  // Setting them would otherwise convert them to \"null\" and \"undefined\"\n  Object.entries(attributes)\n    .filter(([, value]) => !is.nullOrUndefined(value))\n    .forEach(([key, value]) => element.setAttribute(key, value));\n}\n\n// Create a DocumentFragment\nexport function createElement(type, attributes, text) {\n  // Create a new <element>\n  const element = document.createElement(type);\n\n  // Set all passed attributes\n  if (is.object(attributes)) {\n    setAttributes(element, attributes);\n  }\n\n  // Add text node\n  if (is.string(text)) {\n    element.innerText = text;\n  }\n\n  // Return built element\n  return element;\n}\n\n// Inaert an element after another\nexport function insertAfter(element, target) {\n  if (!is.element(element) || !is.element(target)) {\n    return;\n  }\n\n  target.parentNode.insertBefore(element, target.nextSibling);\n}\n\n// Insert a DocumentFragment\nexport function insertElement(type, parent, attributes, text) {\n  if (!is.element(parent)) {\n    return;\n  }\n\n  parent.appendChild(createElement(type, attributes, text));\n}\n\n// Remove element(s)\nexport function removeElement(element) {\n  if (is.nodeList(element) || is.array(element)) {\n    Array.from(element).forEach(removeElement);\n    return;\n  }\n\n  if (!is.element(element) || !is.element(element.parentNode)) {\n    return;\n  }\n\n  element.parentNode.removeChild(element);\n}\n\n// Remove all child elements\nexport function emptyElement(element) {\n  if (!is.element(element)) {\n    return;\n  }\n\n  let { length } = element.childNodes;\n\n  while (length > 0) {\n    element.removeChild(element.lastChild);\n    length -= 1;\n  }\n}\n\n// Replace element\nexport function replaceElement(newChild, oldChild) {\n  if (!is.element(oldChild) || !is.element(oldChild.parentNode) || !is.element(newChild)) {\n    return null;\n  }\n\n  oldChild.parentNode.replaceChild(newChild, oldChild);\n\n  return newChild;\n}\n\n// Get an attribute object from a string selector\nexport function getAttributesFromSelector(sel, existingAttributes) {\n  // For example:\n  // '.test' to { class: 'test' }\n  // '#test' to { id: 'test' }\n  // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n  if (!is.string(sel) || is.empty(sel)) {\n    return {};\n  }\n\n  const attributes = {};\n  const existing = extend({}, existingAttributes);\n\n  sel.split(',').forEach((s) => {\n    // Remove whitespace\n    const selector = s.trim();\n    const className = selector.replace('.', '');\n    const stripped = selector.replace(/[[\\]]/g, '');\n    // Get the parts and value\n    const parts = stripped.split('=');\n    const [key] = parts;\n    const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n    // Get the first character\n    const start = selector.charAt(0);\n\n    switch (start) {\n      case '.':\n        // Add to existing classname\n        if (is.string(existing.class)) {\n          attributes.class = `${existing.class} ${className}`;\n        } else {\n          attributes.class = className;\n        }\n        break;\n\n      case '#':\n        // ID selector\n        attributes.id = selector.replace('#', '');\n        break;\n\n      case '[':\n        // Attribute selector\n        attributes[key] = value;\n\n        break;\n\n      default:\n        break;\n    }\n  });\n\n  return extend(existing, attributes);\n}\n\n// Toggle hidden\nexport function toggleHidden(element, hidden) {\n  if (!is.element(element)) {\n    return;\n  }\n\n  let hide = hidden;\n\n  if (!is.boolean(hide)) {\n    hide = !element.hidden;\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  element.hidden = hide;\n}\n\n// Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\nexport function toggleClass(element, className, force) {\n  if (is.nodeList(element)) {\n    return Array.from(element).map((e) => toggleClass(e, className, force));\n  }\n\n  if (is.element(element)) {\n    let method = 'toggle';\n    if (typeof force !== 'undefined') {\n      method = force ? 'add' : 'remove';\n    }\n\n    element.classList[method](className);\n    return element.classList.contains(className);\n  }\n\n  return false;\n}\n\n// Has class name\nexport function hasClass(element, className) {\n  return is.element(element) && element.classList.contains(className);\n}\n\n// Element matches selector\nexport function matches(element, selector) {\n  const { prototype } = Element;\n\n  function match() {\n    return Array.from(document.querySelectorAll(selector)).includes(this);\n  }\n\n  const method =\n    prototype.matches ||\n    prototype.webkitMatchesSelector ||\n    prototype.mozMatchesSelector ||\n    prototype.msMatchesSelector ||\n    match;\n\n  return method.call(element, selector);\n}\n\n// Closest ancestor element matching selector (also tests element itself)\nexport function closest(element, selector) {\n  const { prototype } = Element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\n  function closestElement() {\n    let el = this;\n\n    do {\n      if (matches.matches(el, selector)) return el;\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  }\n\n  const method = prototype.closest || closestElement;\n\n  return method.call(element, selector);\n}\n\n// Find all elements\nexport function getElements(selector) {\n  return this.elements.container.querySelectorAll(selector);\n}\n\n// Find a single element\nexport function getElement(selector) {\n  return this.elements.container.querySelector(selector);\n}\n\n// Set focus and tab focus class\nexport function setFocus(element = null, tabFocus = false) {\n  if (!is.element(element)) {\n    return;\n  }\n\n  // Set regular focus\n  element.focus({ preventScroll: true });\n\n  // If we want to mimic keyboard focus via tab\n  if (tabFocus) {\n    toggleClass(element, this.config.classNames.tabFocus);\n  }\n}\n","// ==========================================================================\n// Plyr support checks\n// ==========================================================================\n\nimport { transitionEndEvent } from './utils/animation';\nimport browser from './utils/browser';\nimport { createElement } from './utils/elements';\nimport is from './utils/is';\n\n// Default codecs for checking mimetype support\nconst defaultCodecs = {\n  'audio/ogg': 'vorbis',\n  'audio/wav': '1',\n  'video/webm': 'vp8, vorbis',\n  'video/mp4': 'avc1.42E01E, mp4a.40.2',\n  'video/ogg': 'theora',\n};\n\n// Check for feature support\nconst support = {\n  // Basic support\n  audio: 'canPlayType' in document.createElement('audio'),\n  video: 'canPlayType' in document.createElement('video'),\n\n  // Check for support\n  // Basic functionality vs full UI\n  check(type, provider, playsinline) {\n    const canPlayInline = browser.isIPhone && playsinline && support.playsinline;\n    const api = support[type] || provider !== 'html5';\n    const ui = api && support.rangeInput && (type !== 'video' || !browser.isIPhone || canPlayInline);\n\n    return {\n      api,\n      ui,\n    };\n  },\n\n  // Picture-in-picture support\n  // Safari & Chrome only currently\n  pip: (() => {\n    // While iPhone's support picture-in-picture for some apps, seemingly Safari isn't one of them\n    // It will throw the following error when trying to enter picture-in-picture\n    // `NotSupportedError: The Picture-in-Picture mode is not supported.`\n    if (browser.isIPhone) {\n      return false;\n    }\n\n    // Safari\n    // https://developer.apple.com/documentation/webkitjs/adding_picture_in_picture_to_your_safari_media_controls\n    if (is.function(createElement('video').webkitSetPresentationMode)) {\n      return true;\n    }\n\n    // Chrome\n    // https://developers.google.com/web/updates/2018/10/watch-video-using-picture-in-picture\n    if (document.pictureInPictureEnabled && !createElement('video').disablePictureInPicture) {\n      return true;\n    }\n\n    return false;\n  })(),\n\n  // Airplay support\n  // Safari only currently\n  airplay: is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n\n  // Inline playback support\n  // https://webkit.org/blog/6784/new-video-policies-for-ios/\n  playsinline: 'playsInline' in document.createElement('video'),\n\n  // Check for mime type support against a player instance\n  // Credits: http://diveintohtml5.info/everything.html\n  // Related: http://www.leanbackplayer.com/test/h5mt.html\n  mime(input) {\n    if (is.empty(input)) {\n      return false;\n    }\n\n    const [mediaType] = input.split('/');\n    let type = input;\n\n    // Verify we're using HTML5 and there's no media type mismatch\n    if (!this.isHTML5 || mediaType !== this.type) {\n      return false;\n    }\n\n    // Add codec if required\n    if (Object.keys(defaultCodecs).includes(type)) {\n      type += `; codecs=\"${defaultCodecs[input]}\"`;\n    }\n\n    try {\n      return Boolean(type && this.media.canPlayType(type).replace(/no/, ''));\n    } catch (_) {\n      return false;\n    }\n  },\n\n  // Check for textTracks support\n  textTracks: 'textTracks' in document.createElement('video'),\n\n  // <input type=\"range\"> Sliders\n  rangeInput: (() => {\n    const range = document.createElement('input');\n    range.type = 'range';\n    return range.type === 'range';\n  })(),\n\n  // Touch\n  // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n  touch: 'ontouchstart' in document.documentElement,\n\n  // Detect transitions support\n  transitions: transitionEndEvent !== false,\n\n  // Reduced motion iOS & MacOS setting\n  // https://webkit.org/blog/7551/responsive-design-for-motion/\n  reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches,\n};\n\nexport default support;\n","// ==========================================================================\n// Event utils\n// ==========================================================================\n\nimport is from './is';\n\n// Check for passive event listener support\n// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n// https://www.youtube.com/watch?v=NPM6172J22g\nconst supportsPassiveListeners = (() => {\n  // Test via a getter in the options object to see if the passive property is accessed\n  let supported = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get() {\n        supported = true;\n        return null;\n      },\n    });\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (_) {\n    // Do nothing\n  }\n\n  return supported;\n})();\n\n// Toggle event listener\nexport function toggleListener(element, event, callback, toggle = false, passive = true, capture = false) {\n  // Bail if no element, event, or callback\n  if (!element || !('addEventListener' in element) || is.empty(event) || !is.function(callback)) {\n    return;\n  }\n\n  // Allow multiple events\n  const events = event.split(' ');\n  // Build options\n  // Default to just the capture boolean for browsers with no passive listener support\n  let options = capture;\n\n  // If passive events listeners are supported\n  if (supportsPassiveListeners) {\n    options = {\n      // Whether the listener can be passive (i.e. default never prevented)\n      passive,\n      // Whether the listener is a capturing listener or not\n      capture,\n    };\n  }\n\n  // If a single node is passed, bind the event listener\n  events.forEach((type) => {\n    if (this && this.eventListeners && toggle) {\n      // Cache event listener\n      this.eventListeners.push({ element, type, callback, options });\n    }\n\n    element[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\n  });\n}\n\n// Bind event handler\nexport function on(element, events = '', callback, passive = true, capture = false) {\n  toggleListener.call(this, element, events, callback, true, passive, capture);\n}\n\n// Unbind event handler\nexport function off(element, events = '', callback, passive = true, capture = false) {\n  toggleListener.call(this, element, events, callback, false, passive, capture);\n}\n\n// Bind once-only event handler\nexport function once(element, events = '', callback, passive = true, capture = false) {\n  const onceCallback = (...args) => {\n    off(element, events, onceCallback, passive, capture);\n    callback.apply(this, args);\n  };\n\n  toggleListener.call(this, element, events, onceCallback, true, passive, capture);\n}\n\n// Trigger event\nexport function triggerEvent(element, type = '', bubbles = false, detail = {}) {\n  // Bail if no element\n  if (!is.element(element) || is.empty(type)) {\n    return;\n  }\n\n  // Create and dispatch the event\n  const event = new CustomEvent(type, {\n    bubbles,\n    detail: { ...detail, plyr: this },\n  });\n\n  // Dispatch the event\n  element.dispatchEvent(event);\n}\n\n// Unbind all cached event listeners\nexport function unbindListeners() {\n  if (this && this.eventListeners) {\n    this.eventListeners.forEach((item) => {\n      const { element, type, callback, options } = item;\n      element.removeEventListener(type, callback, options);\n    });\n\n    this.eventListeners = [];\n  }\n}\n\n// Run method when / if player is ready\nexport function ready() {\n  return new Promise((resolve) =>\n    this.ready ? setTimeout(resolve, 0) : on.call(this, this.elements.container, 'ready', resolve),\n  ).then(() => {});\n}\n","import is from './is';\n/**\n * Silence a Promise-like object.\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n * @param  {Object} value An object that may or may not be `Promise`-like.\n */\nexport function silencePromise(value) {\n  if (is.promise(value)) {\n    value.then(null, () => {});\n  }\n}\n\nexport default { silencePromise };\n","// ==========================================================================\n// Array utils\n// ==========================================================================\n\nimport is from './is';\n\n// Remove duplicates in an array\nexport function dedupe(array) {\n  if (!is.array(array)) {\n    return array;\n  }\n\n  return array.filter((item, index) => array.indexOf(item) === index);\n}\n\n// Get the closest value in an array\nexport function closest(array, value) {\n  if (!is.array(array) || !array.length) {\n    return null;\n  }\n\n  return array.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev));\n}\n","// ==========================================================================\n// Style utils\n// ==========================================================================\n\nimport { closest } from './arrays';\nimport is from './is';\n\n// Check support for a CSS declaration\nexport function supportsCSS(declaration) {\n  if (!window || !window.CSS) {\n    return false;\n  }\n\n  return window.CSS.supports(declaration);\n}\n\n// Standard/common aspect ratios\nconst standardRatios = [\n  [1, 1],\n  [4, 3],\n  [3, 4],\n  [5, 4],\n  [4, 5],\n  [3, 2],\n  [2, 3],\n  [16, 10],\n  [10, 16],\n  [16, 9],\n  [9, 16],\n  [21, 9],\n  [9, 21],\n  [32, 9],\n  [9, 32],\n].reduce((out, [x, y]) => ({ ...out, [x / y]: [x, y] }), {});\n\n// Validate an aspect ratio\nexport function validateAspectRatio(input) {\n  if (!is.array(input) && (!is.string(input) || !input.includes(':'))) {\n    return false;\n  }\n\n  const ratio = is.array(input) ? input : input.split(':');\n\n  return ratio.map(Number).every(is.number);\n}\n\n// Reduce an aspect ratio to it's lowest form\nexport function reduceAspectRatio(ratio) {\n  if (!is.array(ratio) || !ratio.every(is.number)) {\n    return null;\n  }\n\n  const [width, height] = ratio;\n  const getDivider = (w, h) => (h === 0 ? w : getDivider(h, w % h));\n  const divider = getDivider(width, height);\n\n  return [width / divider, height / divider];\n}\n\n// Calculate an aspect ratio\nexport function getAspectRatio(input) {\n  const parse = (ratio) => (validateAspectRatio(ratio) ? ratio.split(':').map(Number) : null);\n  // Try provided ratio\n  let ratio = parse(input);\n\n  // Get from config\n  if (ratio === null) {\n    ratio = parse(this.config.ratio);\n  }\n\n  // Get from embed\n  if (ratio === null && !is.empty(this.embed) && is.array(this.embed.ratio)) {\n    ({ ratio } = this.embed);\n  }\n\n  // Get from HTML5 video\n  if (ratio === null && this.isHTML5) {\n    const { videoWidth, videoHeight } = this.media;\n    ratio = [videoWidth, videoHeight];\n  }\n\n  return reduceAspectRatio(ratio);\n}\n\n// Set aspect ratio for responsive container\nexport function setAspectRatio(input) {\n  if (!this.isVideo) {\n    return {};\n  }\n\n  const { wrapper } = this.elements;\n  const ratio = getAspectRatio.call(this, input);\n\n  if (!is.array(ratio)) {\n    return {};\n  }\n\n  const [x, y] = reduceAspectRatio(ratio);\n  const useNative = supportsCSS(`aspect-ratio: ${x}/${y}`);\n  const padding = (100 / x) * y;\n\n  if (useNative) {\n    wrapper.style.aspectRatio = `${x}/${y}`;\n  } else {\n    wrapper.style.paddingBottom = `${padding}%`;\n  }\n\n  // For Vimeo we have an extra <div> to hide the standard controls and UI\n  if (this.isVimeo && !this.config.vimeo.premium && this.supported.ui) {\n    const height = (100 / this.media.offsetWidth) * parseInt(window.getComputedStyle(this.media).paddingBottom, 10);\n    const offset = (height - padding) / (height / 50);\n\n    if (this.fullscreen.active) {\n      wrapper.style.paddingBottom = null;\n    } else {\n      this.media.style.transform = `translateY(-${offset}%)`;\n    }\n  } else if (this.isHTML5) {\n    wrapper.classList.add(this.config.classNames.videoFixedRatio);\n  }\n\n  return { padding, ratio };\n}\n\n// Round an aspect ratio to closest standard ratio\nexport function roundAspectRatio(x, y, tolerance = 0.05) {\n  const ratio = x / y;\n  const closestRatio = closest(Object.keys(standardRatios), ratio);\n\n  // Check match is within tolerance\n  if (Math.abs(closestRatio - ratio) <= tolerance) {\n    return standardRatios[closestRatio];\n  }\n\n  // No match\n  return [x, y];\n}\n\n// Get the size of the viewport\n// https://stackoverflow.com/questions/1248081/how-to-get-the-browser-viewport-dimensions\nexport function getViewportSize() {\n  const width = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n  const height = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\n  return [width, height];\n}\n","// ==========================================================================\n// Plyr HTML5 helpers\n// ==========================================================================\n\nimport support from './support';\nimport { removeElement } from './utils/elements';\nimport { triggerEvent } from './utils/events';\nimport is from './utils/is';\nimport { silencePromise } from './utils/promise';\nimport { setAspectRatio } from './utils/style';\n\nconst html5 = {\n  getSources() {\n    if (!this.isHTML5) {\n      return [];\n    }\n\n    const sources = Array.from(this.media.querySelectorAll('source'));\n\n    // Filter out unsupported sources (if type is specified)\n    return sources.filter((source) => {\n      const type = source.getAttribute('type');\n\n      if (is.empty(type)) {\n        return true;\n      }\n\n      return support.mime.call(this, type);\n    });\n  },\n\n  // Get quality levels\n  getQualityOptions() {\n    // Whether we're forcing all options (e.g. for streaming)\n    if (this.config.quality.forced) {\n      return this.config.quality.options;\n    }\n\n    // Get sizes from <source> elements\n    return html5.getSources\n      .call(this)\n      .map((source) => Number(source.getAttribute('size')))\n      .filter(Boolean);\n  },\n\n  setup() {\n    if (!this.isHTML5) {\n      return;\n    }\n\n    const player = this;\n\n    // Set speed options from config\n    player.options.speed = player.config.speed.options;\n\n    // Set aspect ratio if fixed\n    if (!is.empty(this.config.ratio)) {\n      setAspectRatio.call(player);\n    }\n\n    // Quality\n    Object.defineProperty(player.media, 'quality', {\n      get() {\n        // Get sources\n        const sources = html5.getSources.call(player);\n        const source = sources.find((s) => s.getAttribute('src') === player.source);\n\n        // Return size, if match is found\n        return source && Number(source.getAttribute('size'));\n      },\n      set(input) {\n        if (player.quality === input) {\n          return;\n        }\n\n        // If we're using an external handler...\n        if (player.config.quality.forced && is.function(player.config.quality.onChange)) {\n          player.config.quality.onChange(input);\n        } else {\n          // Get sources\n          const sources = html5.getSources.call(player);\n          // Get first match for requested size\n          const source = sources.find((s) => Number(s.getAttribute('size')) === input);\n\n          // No matching source found\n          if (!source) {\n            return;\n          }\n\n          // Get current state\n          const { currentTime, paused, preload, readyState, playbackRate } = player.media;\n\n          // Set new source\n          player.media.src = source.getAttribute('src');\n\n          // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\n          if (preload !== 'none' || readyState) {\n            // Restore time\n            player.once('loadedmetadata', () => {\n              player.speed = playbackRate;\n              player.currentTime = currentTime;\n\n              // Resume playing\n              if (!paused) {\n                silencePromise(player.play());\n              }\n            });\n\n            // Load new source\n            player.media.load();\n          }\n        }\n\n        // Trigger change event\n        triggerEvent.call(player, player.media, 'qualitychange', false, {\n          quality: input,\n        });\n      },\n    });\n  },\n\n  // Cancel current network requests\n  // See https://github.com/sampotts/plyr/issues/174\n  cancelRequests() {\n    if (!this.isHTML5) {\n      return;\n    }\n\n    // Remove child sources\n    removeElement(html5.getSources.call(this));\n\n    // Set blank video src attribute\n    // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n    // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n    this.media.setAttribute('src', this.config.blankVideo);\n\n    // Load the new empty source\n    // This will cancel existing requests\n    // See https://github.com/sampotts/plyr/issues/174\n    this.media.load();\n\n    // Debugging\n    this.debug.log('Cancelled network requests');\n  },\n};\n\nexport default html5;\n","// ==========================================================================\n// String utils\n// ==========================================================================\n\nimport is from './is';\n\n// Generate a random ID\nexport function generateId(prefix) {\n  return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n}\n\n// Format string\nexport function format(input, ...args) {\n  if (is.empty(input)) return input;\n\n  return input.toString().replace(/{(\\d+)}/g, (match, i) => args[i].toString());\n}\n\n// Get percentage\nexport function getPercentage(current, max) {\n  if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n    return 0;\n  }\n\n  return ((current / max) * 100).toFixed(2);\n}\n\n// Replace all occurrences of a string in a string\nexport const replaceAll = (input = '', find = '', replace = '') =>\n  input.replace(new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'), replace.toString());\n\n// Convert to title case\nexport const toTitleCase = (input = '') =>\n  input.toString().replace(/\\w\\S*/g, (text) => text.charAt(0).toUpperCase() + text.slice(1).toLowerCase());\n\n// Convert string to pascalCase\nexport function toPascalCase(input = '') {\n  let string = input.toString();\n\n  // Convert kebab case\n  string = replaceAll(string, '-', ' ');\n\n  // Convert snake case\n  string = replaceAll(string, '_', ' ');\n\n  // Convert to title case\n  string = toTitleCase(string);\n\n  // Convert to pascal case\n  return replaceAll(string, ' ', '');\n}\n\n// Convert string to pascalCase\nexport function toCamelCase(input = '') {\n  let string = input.toString();\n\n  // Convert to pascal case\n  string = toPascalCase(string);\n\n  // Convert first character to lowercase\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\n// Remove HTML from a string\nexport function stripHTML(source) {\n  const fragment = document.createDocumentFragment();\n  const element = document.createElement('div');\n  fragment.appendChild(element);\n  element.innerHTML = source;\n  return fragment.firstChild.innerText;\n}\n\n// Like outerHTML, but also works for DocumentFragment\nexport function getHTML(element) {\n  const wrapper = document.createElement('div');\n  wrapper.appendChild(element);\n  return wrapper.innerHTML;\n}\n","// ==========================================================================\n// Plyr internationalization\n// ==========================================================================\n\nimport is from './is';\nimport { getDeep } from './objects';\nimport { replaceAll } from './strings';\n\n// Skip i18n for abbreviations and brand names\nconst resources = {\n  pip: 'PIP',\n  airplay: 'AirPlay',\n  html5: 'HTML5',\n  vimeo: 'Vimeo',\n  youtube: 'YouTube',\n};\n\nconst i18n = {\n  get(key = '', config = {}) {\n    if (is.empty(key) || is.empty(config)) {\n      return '';\n    }\n\n    let string = getDeep(config.i18n, key);\n\n    if (is.empty(string)) {\n      if (Object.keys(resources).includes(key)) {\n        return resources[key];\n      }\n\n      return '';\n    }\n\n    const replace = {\n      '{seektime}': config.seekTime,\n      '{title}': config.title,\n    };\n\n    Object.entries(replace).forEach(([k, v]) => {\n      string = replaceAll(string, k, v);\n    });\n\n    return string;\n  },\n};\n\nexport default i18n;\n","// ==========================================================================\n// Plyr storage\n// ==========================================================================\n\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nclass Storage {\n  constructor(player) {\n    this.enabled = player.config.storage.enabled;\n    this.key = player.config.storage.key;\n  }\n\n  // Check for actual support (see if we can use it)\n  static get supported() {\n    try {\n      if (!('localStorage' in window)) {\n        return false;\n      }\n\n      const test = '___test';\n\n      // Try to use it (it might be disabled, e.g. user is in private mode)\n      // see: https://github.com/sampotts/plyr/issues/131\n      window.localStorage.setItem(test, test);\n      window.localStorage.removeItem(test);\n\n      return true;\n    } catch (_) {\n      return false;\n    }\n  }\n\n  get = (key) => {\n    if (!Storage.supported || !this.enabled) {\n      return null;\n    }\n\n    const store = window.localStorage.getItem(this.key);\n\n    if (is.empty(store)) {\n      return null;\n    }\n\n    const json = JSON.parse(store);\n\n    return is.string(key) && key.length ? json[key] : json;\n  };\n\n  set = (object) => {\n    // Bail if we don't have localStorage support or it's disabled\n    if (!Storage.supported || !this.enabled) {\n      return;\n    }\n\n    // Can only store objectst\n    if (!is.object(object)) {\n      return;\n    }\n\n    // Get current storage\n    let storage = this.get();\n\n    // Default to empty object\n    if (is.empty(storage)) {\n      storage = {};\n    }\n\n    // Update the working copy of the values\n    extend(storage, object);\n\n    // Update storage\n    try {\n      window.localStorage.setItem(this.key, JSON.stringify(storage));\n    } catch (_) {\n      // Do nothing\n    }\n  };\n}\n\nexport default Storage;\n","// ==========================================================================\n// Fetch wrapper\n// Using XHR to avoid issues with older browsers\n// ==========================================================================\n\nexport default function fetch(url, responseType = 'text') {\n  return new Promise((resolve, reject) => {\n    try {\n      const request = new XMLHttpRequest();\n\n      // Check for CORS support\n      if (!('withCredentials' in request)) {\n        return;\n      }\n\n      request.addEventListener('load', () => {\n        if (responseType === 'text') {\n          try {\n            resolve(JSON.parse(request.responseText));\n          } catch (_) {\n            resolve(request.responseText);\n          }\n        } else {\n          resolve(request.response);\n        }\n      });\n\n      request.addEventListener('error', () => {\n        throw new Error(request.status);\n      });\n\n      request.open('GET', url, true);\n\n      // Set the required response type\n      request.responseType = responseType;\n\n      request.send();\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n","// ==========================================================================\n// Sprite loader\n// ==========================================================================\n\nimport Storage from '../storage';\nimport fetch from './fetch';\nimport is from './is';\n\n// Load an external SVG sprite\nexport default function loadSprite(url, id) {\n  if (!is.string(url)) {\n    return;\n  }\n\n  const prefix = 'cache';\n  const hasId = is.string(id);\n  let isCached = false;\n  const exists = () => document.getElementById(id) !== null;\n\n  const update = (container, data) => {\n    // eslint-disable-next-line no-param-reassign\n    container.innerHTML = data;\n\n    // Check again incase of race condition\n    if (hasId && exists()) {\n      return;\n    }\n\n    // Inject the SVG to the body\n    document.body.insertAdjacentElement('afterbegin', container);\n  };\n\n  // Only load once if ID set\n  if (!hasId || !exists()) {\n    const useStorage = Storage.supported;\n    // Create container\n    const container = document.createElement('div');\n    container.setAttribute('hidden', '');\n\n    if (hasId) {\n      container.setAttribute('id', id);\n    }\n\n    // Check in cache\n    if (useStorage) {\n      const cached = window.localStorage.getItem(`${prefix}-${id}`);\n      isCached = cached !== null;\n\n      if (isCached) {\n        const data = JSON.parse(cached);\n        update(container, data.content);\n      }\n    }\n\n    // Get the sprite\n    fetch(url)\n      .then((result) => {\n        if (is.empty(result)) {\n          return;\n        }\n\n        if (useStorage) {\n          try {\n            window.localStorage.setItem(\n              `${prefix}-${id}`,\n              JSON.stringify({\n                content: result,\n              }),\n            );\n          } catch (_) {\n            // Do nothing\n          }\n        }\n\n        update(container, result);\n      })\n      .catch(() => {});\n  }\n}\n","// ==========================================================================\n// Time utils\n// ==========================================================================\n\nimport is from './is';\n\n// Time helpers\nexport const getHours = (value) => Math.trunc((value / 60 / 60) % 60, 10);\nexport const getMinutes = (value) => Math.trunc((value / 60) % 60, 10);\nexport const getSeconds = (value) => Math.trunc(value % 60, 10);\n\n// Format time to UI friendly string\nexport function formatTime(time = 0, displayHours = false, inverted = false) {\n  // Bail if the value isn't a number\n  if (!is.number(time)) {\n    return formatTime(undefined, displayHours, inverted);\n  }\n\n  // Format time component to add leading zero\n  const format = (value) => `0${value}`.slice(-2);\n  // Breakdown to hours, mins, secs\n  let hours = getHours(time);\n  const mins = getMinutes(time);\n  const secs = getSeconds(time);\n\n  // Do we need to display hours?\n  if (displayHours || hours > 0) {\n    hours = `${hours}:`;\n  } else {\n    hours = '';\n  }\n\n  // Render\n  return `${inverted && time > 0 ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n}\n","// ==========================================================================\n// Plyr controls\n// TODO: This needs to be split into smaller files and cleaned up\n// ==========================================================================\n\nimport RangeTouch from 'rangetouch';\n\nimport captions from './captions';\nimport html5 from './html5';\nimport support from './support';\nimport { repaint, transitionEndEvent } from './utils/animation';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n  createElement,\n  emptyElement,\n  getAttributesFromSelector,\n  getElement,\n  getElements,\n  hasClass,\n  matches,\n  removeElement,\n  setAttributes,\n  setFocus,\n  toggleClass,\n  toggleHidden,\n} from './utils/elements';\nimport { off, on } from './utils/events';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport loadSprite from './utils/load-sprite';\nimport { extend } from './utils/objects';\nimport { getPercentage, replaceAll, toCamelCase, toTitleCase } from './utils/strings';\nimport { formatTime, getHours } from './utils/time';\n\n// TODO: Don't export a massive object - break down and create class\nconst controls = {\n  // Get icon URL\n  getIconUrl() {\n    const url = new URL(this.config.iconUrl, window.location);\n    const host = window.location.host ? window.location.host : window.top.location.host;\n    const cors = url.host !== host || (browser.isIE && !window.svg4everybody);\n\n    return {\n      url: this.config.iconUrl,\n      cors,\n    };\n  },\n\n  // Find the UI controls\n  findElements() {\n    try {\n      this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper);\n\n      // Buttons\n      this.elements.buttons = {\n        play: getElements.call(this, this.config.selectors.buttons.play),\n        pause: getElement.call(this, this.config.selectors.buttons.pause),\n        restart: getElement.call(this, this.config.selectors.buttons.restart),\n        rewind: getElement.call(this, this.config.selectors.buttons.rewind),\n        fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\n        mute: getElement.call(this, this.config.selectors.buttons.mute),\n        pip: getElement.call(this, this.config.selectors.buttons.pip),\n        airplay: getElement.call(this, this.config.selectors.buttons.airplay),\n        settings: getElement.call(this, this.config.selectors.buttons.settings),\n        captions: getElement.call(this, this.config.selectors.buttons.captions),\n        fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen),\n      };\n\n      // Progress\n      this.elements.progress = getElement.call(this, this.config.selectors.progress);\n\n      // Inputs\n      this.elements.inputs = {\n        seek: getElement.call(this, this.config.selectors.inputs.seek),\n        volume: getElement.call(this, this.config.selectors.inputs.volume),\n      };\n\n      // Display\n      this.elements.display = {\n        buffer: getElement.call(this, this.config.selectors.display.buffer),\n        currentTime: getElement.call(this, this.config.selectors.display.currentTime),\n        duration: getElement.call(this, this.config.selectors.display.duration),\n      };\n\n      // Seek tooltip\n      if (is.element(this.elements.progress)) {\n        this.elements.display.seekTooltip = this.elements.progress.querySelector(`.${this.config.classNames.tooltip}`);\n      }\n\n      return true;\n    } catch (error) {\n      // Log it\n      this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n      // Restore native video controls\n      this.toggleNativeControls(true);\n\n      return false;\n    }\n  },\n\n  // Create <svg> icon\n  createIcon(type, attributes) {\n    const namespace = 'http://www.w3.org/2000/svg';\n    const iconUrl = controls.getIconUrl.call(this);\n    const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n    // Create <svg>\n    const icon = document.createElementNS(namespace, 'svg');\n    setAttributes(\n      icon,\n      extend(attributes, {\n        'aria-hidden': 'true',\n        focusable: 'false',\n      }),\n    );\n\n    // Create the <use> to reference sprite\n    const use = document.createElementNS(namespace, 'use');\n    const path = `${iconPath}-${type}`;\n\n    // Set `href` attributes\n    // https://github.com/sampotts/plyr/issues/460\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n    if ('href' in use) {\n      use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n    }\n\n    // Always set the older attribute even though it's \"deprecated\" (it'll be around for ages)\n    use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n\n    // Add <use> to <svg>\n    icon.appendChild(use);\n\n    return icon;\n  },\n\n  // Create hidden text label\n  createLabel(key, attr = {}) {\n    const text = i18n.get(key, this.config);\n    const attributes = { ...attr, class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' ') };\n\n    return createElement('span', attributes, text);\n  },\n\n  // Create a badge\n  createBadge(text) {\n    if (is.empty(text)) {\n      return null;\n    }\n\n    const badge = createElement('span', {\n      class: this.config.classNames.menu.value,\n    });\n\n    badge.appendChild(\n      createElement(\n        'span',\n        {\n          class: this.config.classNames.menu.badge,\n        },\n        text,\n      ),\n    );\n\n    return badge;\n  },\n\n  // Create a <button>\n  createButton(buttonType, attr) {\n    const attributes = extend({}, attr);\n    let type = toCamelCase(buttonType);\n\n    const props = {\n      element: 'button',\n      toggle: false,\n      label: null,\n      icon: null,\n      labelPressed: null,\n      iconPressed: null,\n    };\n\n    ['element', 'icon', 'label'].forEach((key) => {\n      if (Object.keys(attributes).includes(key)) {\n        props[key] = attributes[key];\n        delete attributes[key];\n      }\n    });\n\n    // Default to 'button' type to prevent form submission\n    if (props.element === 'button' && !Object.keys(attributes).includes('type')) {\n      attributes.type = 'button';\n    }\n\n    // Set class name\n    if (Object.keys(attributes).includes('class')) {\n      if (!attributes.class.split(' ').some((c) => c === this.config.classNames.control)) {\n        extend(attributes, {\n          class: `${attributes.class} ${this.config.classNames.control}`,\n        });\n      }\n    } else {\n      attributes.class = this.config.classNames.control;\n    }\n\n    // Large play button\n    switch (buttonType) {\n      case 'play':\n        props.toggle = true;\n        props.label = 'play';\n        props.labelPressed = 'pause';\n        props.icon = 'play';\n        props.iconPressed = 'pause';\n        break;\n\n      case 'mute':\n        props.toggle = true;\n        props.label = 'mute';\n        props.labelPressed = 'unmute';\n        props.icon = 'volume';\n        props.iconPressed = 'muted';\n        break;\n\n      case 'captions':\n        props.toggle = true;\n        props.label = 'enableCaptions';\n        props.labelPressed = 'disableCaptions';\n        props.icon = 'captions-off';\n        props.iconPressed = 'captions-on';\n        break;\n\n      case 'fullscreen':\n        props.toggle = true;\n        props.label = 'enterFullscreen';\n        props.labelPressed = 'exitFullscreen';\n        props.icon = 'enter-fullscreen';\n        props.iconPressed = 'exit-fullscreen';\n        break;\n\n      case 'play-large':\n        attributes.class += ` ${this.config.classNames.control}--overlaid`;\n        type = 'play';\n        props.label = 'play';\n        props.icon = 'play';\n        break;\n\n      default:\n        if (is.empty(props.label)) {\n          props.label = type;\n        }\n        if (is.empty(props.icon)) {\n          props.icon = buttonType;\n        }\n    }\n\n    const button = createElement(props.element);\n\n    // Setup toggle icon and labels\n    if (props.toggle) {\n      // Icon\n      button.appendChild(\n        controls.createIcon.call(this, props.iconPressed, {\n          class: 'icon--pressed',\n        }),\n      );\n      button.appendChild(\n        controls.createIcon.call(this, props.icon, {\n          class: 'icon--not-pressed',\n        }),\n      );\n\n      // Label/Tooltip\n      button.appendChild(\n        controls.createLabel.call(this, props.labelPressed, {\n          class: 'label--pressed',\n        }),\n      );\n      button.appendChild(\n        controls.createLabel.call(this, props.label, {\n          class: 'label--not-pressed',\n        }),\n      );\n    } else {\n      button.appendChild(controls.createIcon.call(this, props.icon));\n      button.appendChild(controls.createLabel.call(this, props.label));\n    }\n\n    // Merge and set attributes\n    extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n    setAttributes(button, attributes);\n\n    // We have multiple play buttons\n    if (type === 'play') {\n      if (!is.array(this.elements.buttons[type])) {\n        this.elements.buttons[type] = [];\n      }\n\n      this.elements.buttons[type].push(button);\n    } else {\n      this.elements.buttons[type] = button;\n    }\n\n    return button;\n  },\n\n  // Create an <input type='range'>\n  createRange(type, attributes) {\n    // Seek input\n    const input = createElement(\n      'input',\n      extend(\n        getAttributesFromSelector(this.config.selectors.inputs[type]),\n        {\n          type: 'range',\n          min: 0,\n          max: 100,\n          step: 0.01,\n          value: 0,\n          autocomplete: 'off',\n          // A11y fixes for https://github.com/sampotts/plyr/issues/905\n          role: 'slider',\n          'aria-label': i18n.get(type, this.config),\n          'aria-valuemin': 0,\n          'aria-valuemax': 100,\n          'aria-valuenow': 0,\n        },\n        attributes,\n      ),\n    );\n\n    this.elements.inputs[type] = input;\n\n    // Set the fill for webkit now\n    controls.updateRangeFill.call(this, input);\n\n    // Improve support on touch devices\n    RangeTouch.setup(input);\n\n    return input;\n  },\n\n  // Create a <progress>\n  createProgress(type, attributes) {\n    const progress = createElement(\n      'progress',\n      extend(\n        getAttributesFromSelector(this.config.selectors.display[type]),\n        {\n          min: 0,\n          max: 100,\n          value: 0,\n          role: 'progressbar',\n          'aria-hidden': true,\n        },\n        attributes,\n      ),\n    );\n\n    // Create the label inside\n    if (type !== 'volume') {\n      progress.appendChild(createElement('span', null, '0'));\n\n      const suffixKey = {\n        played: 'played',\n        buffer: 'buffered',\n      }[type];\n      const suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\n\n      progress.innerText = `% ${suffix.toLowerCase()}`;\n    }\n\n    this.elements.display[type] = progress;\n\n    return progress;\n  },\n\n  // Create time display\n  createTime(type, attrs) {\n    const attributes = getAttributesFromSelector(this.config.selectors.display[type], attrs);\n\n    const container = createElement(\n      'div',\n      extend(attributes, {\n        class: `${attributes.class ? attributes.class : ''} ${this.config.classNames.display.time} `.trim(),\n        'aria-label': i18n.get(type, this.config),\n      }),\n      '00:00',\n    );\n\n    // Reference for updates\n    this.elements.display[type] = container;\n\n    return container;\n  },\n\n  // Bind keyboard shortcuts for a menu item\n  // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n  bindMenuItemShortcuts(menuItem, type) {\n    // Navigate through menus via arrow keys and space\n    on.call(\n      this,\n      menuItem,\n      'keydown keyup',\n      (event) => {\n        // We only care about space and ⬆️ ⬇️️ ➡️\n        if (![' ', 'ArrowUp', 'ArrowDown', 'ArrowRight'].includes(event.key)) {\n          return;\n        }\n\n        // Prevent play / seek\n        event.preventDefault();\n        event.stopPropagation();\n\n        // We're just here to prevent the keydown bubbling\n        if (event.type === 'keydown') {\n          return;\n        }\n\n        const isRadioButton = matches(menuItem, '[role=\"menuitemradio\"]');\n\n        // Show the respective menu\n        if (!isRadioButton && [' ', 'ArrowRight'].includes(event.key)) {\n          controls.showMenuPanel.call(this, type, true);\n        } else {\n          let target;\n\n          if (event.key !== ' ') {\n            if (event.key === 'ArrowDown' || (isRadioButton && event.key === 'ArrowRight')) {\n              target = menuItem.nextElementSibling;\n\n              if (!is.element(target)) {\n                target = menuItem.parentNode.firstElementChild;\n              }\n            } else {\n              target = menuItem.previousElementSibling;\n\n              if (!is.element(target)) {\n                target = menuItem.parentNode.lastElementChild;\n              }\n            }\n\n            setFocus.call(this, target, true);\n          }\n        }\n      },\n      false,\n    );\n\n    // Enter will fire a `click` event but we still need to manage focus\n    // So we bind to keyup which fires after and set focus here\n    on.call(this, menuItem, 'keyup', (event) => {\n      if (event.key !== 'Return') return;\n\n      controls.focusFirstMenuItem.call(this, null, true);\n    });\n  },\n\n  // Create a settings menu item\n  createMenuItem({ value, list, type, title, badge = null, checked = false }) {\n    const attributes = getAttributesFromSelector(this.config.selectors.inputs[type]);\n\n    const menuItem = createElement(\n      'button',\n      extend(attributes, {\n        type: 'button',\n        role: 'menuitemradio',\n        class: `${this.config.classNames.control} ${attributes.class ? attributes.class : ''}`.trim(),\n        'aria-checked': checked,\n        value,\n      }),\n    );\n\n    const flex = createElement('span');\n\n    // We have to set as HTML incase of special characters\n    flex.innerHTML = title;\n\n    if (is.element(badge)) {\n      flex.appendChild(badge);\n    }\n\n    menuItem.appendChild(flex);\n\n    // Replicate radio button behavior\n    Object.defineProperty(menuItem, 'checked', {\n      enumerable: true,\n      get() {\n        return menuItem.getAttribute('aria-checked') === 'true';\n      },\n      set(check) {\n        // Ensure exclusivity\n        if (check) {\n          Array.from(menuItem.parentNode.children)\n            .filter((node) => matches(node, '[role=\"menuitemradio\"]'))\n            .forEach((node) => node.setAttribute('aria-checked', 'false'));\n        }\n\n        menuItem.setAttribute('aria-checked', check ? 'true' : 'false');\n      },\n    });\n\n    this.listeners.bind(\n      menuItem,\n      'click keyup',\n      (event) => {\n        if (is.keyboardEvent(event) && event.key !== ' ') {\n          return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        menuItem.checked = true;\n\n        switch (type) {\n          case 'language':\n            this.currentTrack = Number(value);\n            break;\n\n          case 'quality':\n            this.quality = value;\n            break;\n\n          case 'speed':\n            this.speed = parseFloat(value);\n            break;\n\n          default:\n            break;\n        }\n\n        controls.showMenuPanel.call(this, 'home', is.keyboardEvent(event));\n      },\n      type,\n      false,\n    );\n\n    controls.bindMenuItemShortcuts.call(this, menuItem, type);\n\n    list.appendChild(menuItem);\n  },\n\n  // Format a time for display\n  formatTime(time = 0, inverted = false) {\n    // Bail if the value isn't a number\n    if (!is.number(time)) {\n      return time;\n    }\n\n    // Always display hours if duration is over an hour\n    const forceHours = getHours(this.duration) > 0;\n\n    return formatTime(time, forceHours, inverted);\n  },\n\n  // Update the displayed time\n  updateTimeDisplay(target = null, time = 0, inverted = false) {\n    // Bail if there's no element to display or the value isn't a number\n    if (!is.element(target) || !is.number(time)) {\n      return;\n    }\n\n    // eslint-disable-next-line no-param-reassign\n    target.innerText = controls.formatTime(time, inverted);\n  },\n\n  // Update volume UI and storage\n  updateVolume() {\n    if (!this.supported.ui) {\n      return;\n    }\n\n    // Update range\n    if (is.element(this.elements.inputs.volume)) {\n      controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n    }\n\n    // Update mute state\n    if (is.element(this.elements.buttons.mute)) {\n      this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\n    }\n  },\n\n  // Update seek value and lower fill\n  setRange(target, value = 0) {\n    if (!is.element(target)) {\n      return;\n    }\n\n    // eslint-disable-next-line\n    target.value = value;\n\n    // Webkit range fill\n    controls.updateRangeFill.call(this, target);\n  },\n\n  // Update <progress> elements\n  updateProgress(event) {\n    if (!this.supported.ui || !is.event(event)) {\n      return;\n    }\n\n    let value = 0;\n\n    const setProgress = (target, input) => {\n      const val = is.number(input) ? input : 0;\n      const progress = is.element(target) ? target : this.elements.display.buffer;\n\n      // Update value and label\n      if (is.element(progress)) {\n        progress.value = val;\n\n        // Update text label inside\n        const label = progress.getElementsByTagName('span')[0];\n        if (is.element(label)) {\n          label.childNodes[0].nodeValue = val;\n        }\n      }\n    };\n\n    if (event) {\n      switch (event.type) {\n        // Video playing\n        case 'timeupdate':\n        case 'seeking':\n        case 'seeked':\n          value = getPercentage(this.currentTime, this.duration);\n\n          // Set seek range value only if it's a 'natural' time event\n          if (event.type === 'timeupdate') {\n            controls.setRange.call(this, this.elements.inputs.seek, value);\n          }\n\n          break;\n\n        // Check buffer status\n        case 'playing':\n        case 'progress':\n          setProgress(this.elements.display.buffer, this.buffered * 100);\n\n          break;\n\n        default:\n          break;\n      }\n    }\n  },\n\n  // Webkit polyfill for lower fill range\n  updateRangeFill(target) {\n    // Get range from event if event passed\n    const range = is.event(target) ? target.target : target;\n\n    // Needs to be a valid <input type='range'>\n    if (!is.element(range) || range.getAttribute('type') !== 'range') {\n      return;\n    }\n\n    // Set aria values for https://github.com/sampotts/plyr/issues/905\n    if (matches(range, this.config.selectors.inputs.seek)) {\n      range.setAttribute('aria-valuenow', this.currentTime);\n      const currentTime = controls.formatTime(this.currentTime);\n      const duration = controls.formatTime(this.duration);\n      const format = i18n.get('seekLabel', this.config);\n      range.setAttribute(\n        'aria-valuetext',\n        format.replace('{currentTime}', currentTime).replace('{duration}', duration),\n      );\n    } else if (matches(range, this.config.selectors.inputs.volume)) {\n      const percent = range.value * 100;\n      range.setAttribute('aria-valuenow', percent);\n      range.setAttribute('aria-valuetext', `${percent.toFixed(1)}%`);\n    } else {\n      range.setAttribute('aria-valuenow', range.value);\n    }\n\n    // WebKit only\n    if (!browser.isWebkit) {\n      return;\n    }\n\n    // Set CSS custom property\n    range.style.setProperty('--value', `${(range.value / range.max) * 100}%`);\n  },\n\n  // Update hover tooltip for seeking\n  updateSeekTooltip(event) {\n    // Bail if setting not true\n    if (\n      !this.config.tooltips.seek ||\n      !is.element(this.elements.inputs.seek) ||\n      !is.element(this.elements.display.seekTooltip) ||\n      this.duration === 0\n    ) {\n      return;\n    }\n\n    const tipElement = this.elements.display.seekTooltip;\n    const visible = `${this.config.classNames.tooltip}--visible`;\n    const toggle = (show) => toggleClass(tipElement, visible, show);\n\n    // Hide on touch\n    if (this.touch) {\n      toggle(false);\n      return;\n    }\n\n    // Determine percentage, if already visible\n    let percent = 0;\n    const clientRect = this.elements.progress.getBoundingClientRect();\n\n    if (is.event(event)) {\n      percent = (100 / clientRect.width) * (event.pageX - clientRect.left);\n    } else if (hasClass(tipElement, visible)) {\n      percent = parseFloat(tipElement.style.left, 10);\n    } else {\n      return;\n    }\n\n    // Set bounds\n    if (percent < 0) {\n      percent = 0;\n    } else if (percent > 100) {\n      percent = 100;\n    }\n\n    const time = (this.duration / 100) * percent;\n\n    // Display the time a click would seek to\n    tipElement.innerText = controls.formatTime(time);\n\n    // Get marker point for time\n    const point = this.config.markers?.points?.find(({ time: t }) => t === Math.round(time));\n\n    // Append the point label to the tooltip\n    if (point) {\n      tipElement.insertAdjacentHTML('afterbegin', `${point.label}<br>`);\n    }\n\n    // Set position\n    tipElement.style.left = `${percent}%`;\n\n    // Show/hide the tooltip\n    // If the event is a moues in/out and percentage is inside bounds\n    if (is.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\n      toggle(event.type === 'mouseenter');\n    }\n  },\n\n  // Handle time change event\n  timeUpdate(event) {\n    // Only invert if only one time element is displayed and used for both duration and currentTime\n    const invert = !is.element(this.elements.display.duration) && this.config.invertTime;\n\n    // Duration\n    controls.updateTimeDisplay.call(\n      this,\n      this.elements.display.currentTime,\n      invert ? this.duration - this.currentTime : this.currentTime,\n      invert,\n    );\n\n    // Ignore updates while seeking\n    if (event && event.type === 'timeupdate' && this.media.seeking) {\n      return;\n    }\n\n    // Playing progress\n    controls.updateProgress.call(this, event);\n  },\n\n  // Show the duration on metadataloaded or durationchange events\n  durationUpdate() {\n    // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\n    if (!this.supported.ui || (!this.config.invertTime && this.currentTime)) {\n      return;\n    }\n\n    // If duration is the 2**32 (shaka), Infinity (HLS), DASH-IF (Number.MAX_SAFE_INTEGER || Number.MAX_VALUE) indicating live we hide the currentTime and progressbar.\n    // https://github.com/video-dev/hls.js/blob/5820d29d3c4c8a46e8b75f1e3afa3e68c1a9a2db/src/controller/buffer-controller.js#L415\n    // https://github.com/google/shaka-player/blob/4d889054631f4e1cf0fbd80ddd2b71887c02e232/lib/media/streaming_engine.js#L1062\n    // https://github.com/Dash-Industry-Forum/dash.js/blob/69859f51b969645b234666800d4cb596d89c602d/src/dash/models/DashManifestModel.js#L338\n    if (this.duration >= 2 ** 32) {\n      toggleHidden(this.elements.display.currentTime, true);\n      toggleHidden(this.elements.progress, true);\n      return;\n    }\n\n    // Update ARIA values\n    if (is.element(this.elements.inputs.seek)) {\n      this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\n    }\n\n    // If there's a spot to display duration\n    const hasDuration = is.element(this.elements.display.duration);\n\n    // If there's only one time display, display duration there\n    if (!hasDuration && this.config.displayDuration && this.paused) {\n      controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n    }\n\n    // If there's a duration element, update content\n    if (hasDuration) {\n      controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n    }\n\n    if (this.config.markers.enabled) {\n      controls.setMarkers.call(this);\n    }\n\n    // Update the tooltip (if visible)\n    controls.updateSeekTooltip.call(this);\n  },\n\n  // Hide/show a tab\n  toggleMenuButton(setting, toggle) {\n    toggleHidden(this.elements.settings.buttons[setting], !toggle);\n  },\n\n  // Update the selected setting\n  updateSetting(setting, container, input) {\n    const pane = this.elements.settings.panels[setting];\n    let value = null;\n    let list = container;\n\n    if (setting === 'captions') {\n      value = this.currentTrack;\n    } else {\n      value = !is.empty(input) ? input : this[setting];\n\n      // Get default\n      if (is.empty(value)) {\n        value = this.config[setting].default;\n      }\n\n      // Unsupported value\n      if (!is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n        this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n        return;\n      }\n\n      // Disabled value\n      if (!this.config[setting].options.includes(value)) {\n        this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n        return;\n      }\n    }\n\n    // Get the list if we need to\n    if (!is.element(list)) {\n      list = pane && pane.querySelector('[role=\"menu\"]');\n    }\n\n    // If there's no list it means it's not been rendered...\n    if (!is.element(list)) {\n      return;\n    }\n\n    // Update the label\n    const label = this.elements.settings.buttons[setting].querySelector(`.${this.config.classNames.menu.value}`);\n    label.innerHTML = controls.getLabel.call(this, setting, value);\n\n    // Find the radio option and check it\n    const target = list && list.querySelector(`[value=\"${value}\"]`);\n\n    if (is.element(target)) {\n      target.checked = true;\n    }\n  },\n\n  // Translate a value into a nice label\n  getLabel(setting, value) {\n    switch (setting) {\n      case 'speed':\n        return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n\n      case 'quality':\n        if (is.number(value)) {\n          const label = i18n.get(`qualityLabel.${value}`, this.config);\n\n          if (!label.length) {\n            return `${value}p`;\n          }\n\n          return label;\n        }\n\n        return toTitleCase(value);\n\n      case 'captions':\n        return captions.getLabel.call(this);\n\n      default:\n        return null;\n    }\n  },\n\n  // Set the quality menu\n  setQualityMenu(options) {\n    // Menu required\n    if (!is.element(this.elements.settings.panels.quality)) {\n      return;\n    }\n\n    const type = 'quality';\n    const list = this.elements.settings.panels.quality.querySelector('[role=\"menu\"]');\n\n    // Set options if passed and filter based on uniqueness and config\n    if (is.array(options)) {\n      this.options.quality = dedupe(options).filter((quality) => this.config.quality.options.includes(quality));\n    }\n\n    // Toggle the pane and tab\n    const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n    controls.toggleMenuButton.call(this, type, toggle);\n\n    // Empty the menu\n    emptyElement(list);\n\n    // Check if we need to toggle the parent\n    controls.checkMenu.call(this);\n\n    // If we're hiding, nothing more to do\n    if (!toggle) {\n      return;\n    }\n\n    // Get the badge HTML for HD, 4K etc\n    const getBadge = (quality) => {\n      const label = i18n.get(`qualityBadge.${quality}`, this.config);\n\n      if (!label.length) {\n        return null;\n      }\n\n      return controls.createBadge.call(this, label);\n    };\n\n    // Sort options by the config and then render options\n    this.options.quality\n      .sort((a, b) => {\n        const sorting = this.config.quality.options;\n        return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n      })\n      .forEach((quality) => {\n        controls.createMenuItem.call(this, {\n          value: quality,\n          list,\n          type,\n          title: controls.getLabel.call(this, 'quality', quality),\n          badge: getBadge(quality),\n        });\n      });\n\n    controls.updateSetting.call(this, type, list);\n  },\n\n  // Set the looping options\n  /* setLoopMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panels.loop)) {\n            return;\n        }\n\n        const options = ['start', 'end', 'all', 'reset'];\n        const list = this.elements.settings.panels.loop.querySelector('[role=\"menu\"]');\n\n        // Show the pane and tab\n        toggleHidden(this.elements.settings.buttons.loop, false);\n        toggleHidden(this.elements.settings.panels.loop, false);\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.loop.options);\n        controls.toggleMenuButton.call(this, 'loop', toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        options.forEach(option => {\n            const item = createElement('li');\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                    type: 'button',\n                    class: this.config.classNames.control,\n                    'data-plyr-loop-action': option,\n                }),\n                i18n.get(option, this.config)\n            );\n\n            if (['start', 'end'].includes(option)) {\n                const badge = controls.createBadge.call(this, '00:00');\n                button.appendChild(badge);\n            }\n\n            item.appendChild(button);\n            list.appendChild(item);\n        });\n    }, */\n\n  // Get current selected caption language\n  // TODO: rework this to user the getter in the API?\n\n  // Set a list of available captions languages\n  setCaptionsMenu() {\n    // Menu required\n    if (!is.element(this.elements.settings.panels.captions)) {\n      return;\n    }\n\n    // TODO: Captions or language? Currently it's mixed\n    const type = 'captions';\n    const list = this.elements.settings.panels.captions.querySelector('[role=\"menu\"]');\n    const tracks = captions.getTracks.call(this);\n    const toggle = Boolean(tracks.length);\n\n    // Toggle the pane and tab\n    controls.toggleMenuButton.call(this, type, toggle);\n\n    // Empty the menu\n    emptyElement(list);\n\n    // Check if we need to toggle the parent\n    controls.checkMenu.call(this);\n\n    // If there's no captions, bail\n    if (!toggle) {\n      return;\n    }\n\n    // Generate options data\n    const options = tracks.map((track, value) => ({\n      value,\n      checked: this.captions.toggled && this.currentTrack === value,\n      title: captions.getLabel.call(this, track),\n      badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n      list,\n      type: 'language',\n    }));\n\n    // Add the \"Disabled\" option to turn off captions\n    options.unshift({\n      value: -1,\n      checked: !this.captions.toggled,\n      title: i18n.get('disabled', this.config),\n      list,\n      type: 'language',\n    });\n\n    // Generate options\n    options.forEach(controls.createMenuItem.bind(this));\n\n    controls.updateSetting.call(this, type, list);\n  },\n\n  // Set a list of available captions languages\n  setSpeedMenu() {\n    // Menu required\n    if (!is.element(this.elements.settings.panels.speed)) {\n      return;\n    }\n\n    const type = 'speed';\n    const list = this.elements.settings.panels.speed.querySelector('[role=\"menu\"]');\n\n    // Filter out invalid speeds\n    this.options.speed = this.options.speed.filter((o) => o >= this.minimumSpeed && o <= this.maximumSpeed);\n\n    // Toggle the pane and tab\n    const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n    controls.toggleMenuButton.call(this, type, toggle);\n\n    // Empty the menu\n    emptyElement(list);\n\n    // Check if we need to toggle the parent\n    controls.checkMenu.call(this);\n\n    // If we're hiding, nothing more to do\n    if (!toggle) {\n      return;\n    }\n\n    // Create items\n    this.options.speed.forEach((speed) => {\n      controls.createMenuItem.call(this, {\n        value: speed,\n        list,\n        type,\n        title: controls.getLabel.call(this, 'speed', speed),\n      });\n    });\n\n    controls.updateSetting.call(this, type, list);\n  },\n\n  // Check if we need to hide/show the settings menu\n  checkMenu() {\n    const { buttons } = this.elements.settings;\n    const visible = !is.empty(buttons) && Object.values(buttons).some((button) => !button.hidden);\n\n    toggleHidden(this.elements.settings.menu, !visible);\n  },\n\n  // Focus the first menu item in a given (or visible) menu\n  focusFirstMenuItem(pane, tabFocus = false) {\n    if (this.elements.settings.popup.hidden) {\n      return;\n    }\n\n    let target = pane;\n\n    if (!is.element(target)) {\n      target = Object.values(this.elements.settings.panels).find((p) => !p.hidden);\n    }\n\n    const firstItem = target.querySelector('[role^=\"menuitem\"]');\n\n    setFocus.call(this, firstItem, tabFocus);\n  },\n\n  // Show/hide menu\n  toggleMenu(input) {\n    const { popup } = this.elements.settings;\n    const button = this.elements.buttons.settings;\n\n    // Menu and button are required\n    if (!is.element(popup) || !is.element(button)) {\n      return;\n    }\n\n    // True toggle by default\n    const { hidden } = popup;\n    let show = hidden;\n\n    if (is.boolean(input)) {\n      show = input;\n    } else if (is.keyboardEvent(input) && input.key === 'Escape') {\n      show = false;\n    } else if (is.event(input)) {\n      // If Plyr is in a shadowDOM, the event target is set to the component, instead of the\n      // Element in the shadowDOM. The path, if available, is complete.\n      const target = is.function(input.composedPath) ? input.composedPath()[0] : input.target;\n      const isMenuItem = popup.contains(target);\n\n      // If the click was inside the menu or if the click\n      // wasn't the button or menu item and we're trying to\n      // show the menu (a doc click shouldn't show the menu)\n      if (isMenuItem || (!isMenuItem && input.target !== button && show)) {\n        return;\n      }\n    }\n\n    // Set button attributes\n    button.setAttribute('aria-expanded', show);\n\n    // Show the actual popup\n    toggleHidden(popup, !show);\n\n    // Add class hook\n    toggleClass(this.elements.container, this.config.classNames.menu.open, show);\n\n    // Focus the first item if key interaction\n    if (show && is.keyboardEvent(input)) {\n      controls.focusFirstMenuItem.call(this, null, true);\n    } else if (!show && !hidden) {\n      // If closing, re-focus the button\n      setFocus.call(this, button, is.keyboardEvent(input));\n    }\n  },\n\n  // Get the natural size of a menu panel\n  getMenuSize(tab) {\n    const clone = tab.cloneNode(true);\n    clone.style.position = 'absolute';\n    clone.style.opacity = 0;\n    clone.removeAttribute('hidden');\n\n    // Append to parent so we get the \"real\" size\n    tab.parentNode.appendChild(clone);\n\n    // Get the sizes before we remove\n    const width = clone.scrollWidth;\n    const height = clone.scrollHeight;\n\n    // Remove from the DOM\n    removeElement(clone);\n\n    return {\n      width,\n      height,\n    };\n  },\n\n  // Show a panel in the menu\n  showMenuPanel(type = '', tabFocus = false) {\n    const target = this.elements.container.querySelector(`#plyr-settings-${this.id}-${type}`);\n\n    // Nothing to show, bail\n    if (!is.element(target)) {\n      return;\n    }\n\n    // Hide all other panels\n    const container = target.parentNode;\n    const current = Array.from(container.children).find((node) => !node.hidden);\n\n    // If we can do fancy animations, we'll animate the height/width\n    if (support.transitions && !support.reducedMotion) {\n      // Set the current width as a base\n      container.style.width = `${current.scrollWidth}px`;\n      container.style.height = `${current.scrollHeight}px`;\n\n      // Get potential sizes\n      const size = controls.getMenuSize.call(this, target);\n\n      // Restore auto height/width\n      const restore = (event) => {\n        // We're only bothered about height and width on the container\n        if (event.target !== container || !['width', 'height'].includes(event.propertyName)) {\n          return;\n        }\n\n        // Revert back to auto\n        container.style.width = '';\n        container.style.height = '';\n\n        // Only listen once\n        off.call(this, container, transitionEndEvent, restore);\n      };\n\n      // Listen for the transition finishing and restore auto height/width\n      on.call(this, container, transitionEndEvent, restore);\n\n      // Set dimensions to target\n      container.style.width = `${size.width}px`;\n      container.style.height = `${size.height}px`;\n    }\n\n    // Set attributes on current tab\n    toggleHidden(current, true);\n\n    // Set attributes on target\n    toggleHidden(target, false);\n\n    // Focus the first item\n    controls.focusFirstMenuItem.call(this, target, tabFocus);\n  },\n\n  // Set the download URL\n  setDownloadUrl() {\n    const button = this.elements.buttons.download;\n\n    // Bail if no button\n    if (!is.element(button)) {\n      return;\n    }\n\n    // Set attribute\n    button.setAttribute('href', this.download);\n  },\n\n  // Build the default HTML\n  create(data) {\n    const {\n      bindMenuItemShortcuts,\n      createButton,\n      createProgress,\n      createRange,\n      createTime,\n      setQualityMenu,\n      setSpeedMenu,\n      showMenuPanel,\n    } = controls;\n    this.elements.controls = null;\n\n    // Larger overlaid play button\n    if (is.array(this.config.controls) && this.config.controls.includes('play-large')) {\n      this.elements.container.appendChild(createButton.call(this, 'play-large'));\n    }\n\n    // Create the container\n    const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n    this.elements.controls = container;\n\n    // Default item attributes\n    const defaultAttributes = { class: 'plyr__controls__item' };\n\n    // Loop through controls in order\n    dedupe(is.array(this.config.controls) ? this.config.controls : []).forEach((control) => {\n      // Restart button\n      if (control === 'restart') {\n        container.appendChild(createButton.call(this, 'restart', defaultAttributes));\n      }\n\n      // Rewind button\n      if (control === 'rewind') {\n        container.appendChild(createButton.call(this, 'rewind', defaultAttributes));\n      }\n\n      // Play/Pause button\n      if (control === 'play') {\n        container.appendChild(createButton.call(this, 'play', defaultAttributes));\n      }\n\n      // Fast forward button\n      if (control === 'fast-forward') {\n        container.appendChild(createButton.call(this, 'fast-forward', defaultAttributes));\n      }\n\n      // Progress\n      if (control === 'progress') {\n        const progressContainer = createElement('div', {\n          class: `${defaultAttributes.class} plyr__progress__container`,\n        });\n\n        const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n        // Seek range slider\n        progress.appendChild(\n          createRange.call(this, 'seek', {\n            id: `plyr-seek-${data.id}`,\n          }),\n        );\n\n        // Buffer progress\n        progress.appendChild(createProgress.call(this, 'buffer'));\n\n        // TODO: Add loop display indicator\n\n        // Seek tooltip\n        if (this.config.tooltips.seek) {\n          const tooltip = createElement(\n            'span',\n            {\n              class: this.config.classNames.tooltip,\n            },\n            '00:00',\n          );\n\n          progress.appendChild(tooltip);\n          this.elements.display.seekTooltip = tooltip;\n        }\n\n        this.elements.progress = progress;\n        progressContainer.appendChild(this.elements.progress);\n        container.appendChild(progressContainer);\n      }\n\n      // Media current time display\n      if (control === 'current-time') {\n        container.appendChild(createTime.call(this, 'currentTime', defaultAttributes));\n      }\n\n      // Media duration display\n      if (control === 'duration') {\n        container.appendChild(createTime.call(this, 'duration', defaultAttributes));\n      }\n\n      // Volume controls\n      if (control === 'mute' || control === 'volume') {\n        let { volume } = this.elements;\n\n        // Create the volume container if needed\n        if (!is.element(volume) || !container.contains(volume)) {\n          volume = createElement(\n            'div',\n            extend({}, defaultAttributes, {\n              class: `${defaultAttributes.class} plyr__volume`.trim(),\n            }),\n          );\n\n          this.elements.volume = volume;\n\n          container.appendChild(volume);\n        }\n\n        // Toggle mute button\n        if (control === 'mute') {\n          volume.appendChild(createButton.call(this, 'mute'));\n        }\n\n        // Volume range control\n        // Ignored on iOS as it's handled globally\n        // https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/Device-SpecificConsiderations/Device-SpecificConsiderations.html\n        if (control === 'volume' && !browser.isIos) {\n          // Set the attributes\n          const attributes = {\n            max: 1,\n            step: 0.05,\n            value: this.config.volume,\n          };\n\n          // Create the volume range slider\n          volume.appendChild(\n            createRange.call(\n              this,\n              'volume',\n              extend(attributes, {\n                id: `plyr-volume-${data.id}`,\n              }),\n            ),\n          );\n        }\n      }\n\n      // Toggle captions button\n      if (control === 'captions') {\n        container.appendChild(createButton.call(this, 'captions', defaultAttributes));\n      }\n\n      // Settings button / menu\n      if (control === 'settings' && !is.empty(this.config.settings)) {\n        const wrapper = createElement(\n          'div',\n          extend({}, defaultAttributes, {\n            class: `${defaultAttributes.class} plyr__menu`.trim(),\n            hidden: '',\n          }),\n        );\n\n        wrapper.appendChild(\n          createButton.call(this, 'settings', {\n            'aria-haspopup': true,\n            'aria-controls': `plyr-settings-${data.id}`,\n            'aria-expanded': false,\n          }),\n        );\n\n        const popup = createElement('div', {\n          class: 'plyr__menu__container',\n          id: `plyr-settings-${data.id}`,\n          hidden: '',\n        });\n\n        const inner = createElement('div');\n\n        const home = createElement('div', {\n          id: `plyr-settings-${data.id}-home`,\n        });\n\n        // Create the menu\n        const menu = createElement('div', {\n          role: 'menu',\n        });\n\n        home.appendChild(menu);\n        inner.appendChild(home);\n        this.elements.settings.panels.home = home;\n\n        // Build the menu items\n        this.config.settings.forEach((type) => {\n          // TODO: bundle this with the createMenuItem helper and bindings\n          const menuItem = createElement(\n            'button',\n            extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n              type: 'button',\n              class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n              role: 'menuitem',\n              'aria-haspopup': true,\n              hidden: '',\n            }),\n          );\n\n          // Bind menu shortcuts for keyboard users\n          bindMenuItemShortcuts.call(this, menuItem, type);\n\n          // Show menu on click\n          on.call(this, menuItem, 'click', () => {\n            showMenuPanel.call(this, type, false);\n          });\n\n          const flex = createElement('span', null, i18n.get(type, this.config));\n\n          const value = createElement('span', {\n            class: this.config.classNames.menu.value,\n          });\n\n          // Speed contains HTML entities\n          value.innerHTML = data[type];\n\n          flex.appendChild(value);\n          menuItem.appendChild(flex);\n          menu.appendChild(menuItem);\n\n          // Build the panes\n          const pane = createElement('div', {\n            id: `plyr-settings-${data.id}-${type}`,\n            hidden: '',\n          });\n\n          // Back button\n          const backButton = createElement('button', {\n            type: 'button',\n            class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n          });\n\n          // Visible label\n          backButton.appendChild(\n            createElement(\n              'span',\n              {\n                'aria-hidden': true,\n              },\n              i18n.get(type, this.config),\n            ),\n          );\n\n          // Screen reader label\n          backButton.appendChild(\n            createElement(\n              'span',\n              {\n                class: this.config.classNames.hidden,\n              },\n              i18n.get('menuBack', this.config),\n            ),\n          );\n\n          // Go back via keyboard\n          on.call(\n            this,\n            pane,\n            'keydown',\n            (event) => {\n              if (event.key !== 'ArrowLeft') return;\n\n              // Prevent seek\n              event.preventDefault();\n              event.stopPropagation();\n\n              // Show the respective menu\n              showMenuPanel.call(this, 'home', true);\n            },\n            false,\n          );\n\n          // Go back via button click\n          on.call(this, backButton, 'click', () => {\n            showMenuPanel.call(this, 'home', false);\n          });\n\n          // Add to pane\n          pane.appendChild(backButton);\n\n          // Menu\n          pane.appendChild(\n            createElement('div', {\n              role: 'menu',\n            }),\n          );\n\n          inner.appendChild(pane);\n\n          this.elements.settings.buttons[type] = menuItem;\n          this.elements.settings.panels[type] = pane;\n        });\n\n        popup.appendChild(inner);\n        wrapper.appendChild(popup);\n        container.appendChild(wrapper);\n\n        this.elements.settings.popup = popup;\n        this.elements.settings.menu = wrapper;\n      }\n\n      // Picture in picture button\n      if (control === 'pip' && support.pip) {\n        container.appendChild(createButton.call(this, 'pip', defaultAttributes));\n      }\n\n      // Airplay button\n      if (control === 'airplay' && support.airplay) {\n        container.appendChild(createButton.call(this, 'airplay', defaultAttributes));\n      }\n\n      // Download button\n      if (control === 'download') {\n        const attributes = extend({}, defaultAttributes, {\n          element: 'a',\n          href: this.download,\n          // target: '_blank',\n        });\n\n        // Set download attribute for HTML5 only\n        if (this.isHTML5) {\n          attributes.download = '';\n        }\n\n        const { download } = this.config.urls;\n\n        if (!is.url(download) && this.isEmbed) {\n          extend(attributes, {\n            icon: `logo-${this.provider}`,\n            label: this.provider,\n          });\n        }\n\n        container.appendChild(createButton.call(this, 'download', attributes));\n      }\n\n      // Toggle fullscreen button\n      if (control === 'fullscreen') {\n        container.appendChild(createButton.call(this, 'fullscreen', defaultAttributes));\n      }\n    });\n\n    // Set available quality levels\n    if (this.isHTML5) {\n      setQualityMenu.call(this, html5.getQualityOptions.call(this));\n    }\n\n    setSpeedMenu.call(this);\n\n    return container;\n  },\n\n  // Insert controls\n  inject() {\n    // Sprite\n    if (this.config.loadSprite) {\n      const icon = controls.getIconUrl.call(this);\n\n      // Only load external sprite using AJAX\n      if (icon.cors) {\n        loadSprite(icon.url, 'sprite-plyr');\n      }\n    }\n\n    // Create a unique ID\n    this.id = Math.floor(Math.random() * 10000);\n\n    // Null by default\n    let container = null;\n    this.elements.controls = null;\n\n    // Set template properties\n    const props = {\n      id: this.id,\n      seektime: this.config.seekTime,\n      title: this.config.title,\n    };\n    let update = true;\n\n    // If function, run it and use output\n    if (is.function(this.config.controls)) {\n      this.config.controls = this.config.controls.call(this, props);\n    }\n\n    // Convert falsy controls to empty array (primarily for empty strings)\n    if (!this.config.controls) {\n      this.config.controls = [];\n    }\n\n    if (is.element(this.config.controls) || is.string(this.config.controls)) {\n      // HTMLElement or Non-empty string passed as the option\n      container = this.config.controls;\n    } else {\n      // Create controls\n      container = controls.create.call(this, {\n        id: this.id,\n        seektime: this.config.seekTime,\n        speed: this.speed,\n        quality: this.quality,\n        captions: captions.getLabel.call(this),\n        // TODO: Looping\n        // loop: 'None',\n      });\n      update = false;\n    }\n\n    // Replace props with their value\n    const replace = (input) => {\n      let result = input;\n\n      Object.entries(props).forEach(([key, value]) => {\n        result = replaceAll(result, `{${key}}`, value);\n      });\n\n      return result;\n    };\n\n    // Update markup\n    if (update) {\n      if (is.string(this.config.controls)) {\n        container = replace(container);\n      }\n    }\n\n    // Controls container\n    let target;\n\n    // Inject to custom location\n    if (is.string(this.config.selectors.controls.container)) {\n      target = document.querySelector(this.config.selectors.controls.container);\n    }\n\n    // Inject into the container by default\n    if (!is.element(target)) {\n      target = this.elements.container;\n    }\n\n    // Inject controls HTML (needs to be before captions, hence \"afterbegin\")\n    const insertMethod = is.element(container) ? 'insertAdjacentElement' : 'insertAdjacentHTML';\n    target[insertMethod]('afterbegin', container);\n\n    // Find the elements if need be\n    if (!is.element(this.elements.controls)) {\n      controls.findElements.call(this);\n    }\n\n    // Add pressed property to buttons\n    if (!is.empty(this.elements.buttons)) {\n      const addProperty = (button) => {\n        const className = this.config.classNames.controlPressed;\n        button.setAttribute('aria-pressed', 'false');\n\n        Object.defineProperty(button, 'pressed', {\n          configurable: true,\n          enumerable: true,\n          get() {\n            return hasClass(button, className);\n          },\n          set(pressed = false) {\n            toggleClass(button, className, pressed);\n            button.setAttribute('aria-pressed', pressed ? 'true' : 'false');\n          },\n        });\n      };\n\n      // Toggle classname when pressed property is set\n      Object.values(this.elements.buttons)\n        .filter(Boolean)\n        .forEach((button) => {\n          if (is.array(button) || is.nodeList(button)) {\n            Array.from(button).filter(Boolean).forEach(addProperty);\n          } else {\n            addProperty(button);\n          }\n        });\n    }\n\n    // Edge sometimes doesn't finish the paint so force a repaint\n    if (browser.isEdge) {\n      repaint(target);\n    }\n\n    // Setup tooltips\n    if (this.config.tooltips.controls) {\n      const { classNames, selectors } = this.config;\n      const selector = `${selectors.controls.wrapper} ${selectors.labels} .${classNames.hidden}`;\n      const labels = getElements.call(this, selector);\n\n      Array.from(labels).forEach((label) => {\n        toggleClass(label, this.config.classNames.hidden, false);\n        toggleClass(label, this.config.classNames.tooltip, true);\n      });\n    }\n  },\n\n  // Set media metadata\n  setMediaMetadata() {\n    try {\n      if ('mediaSession' in navigator) {\n        navigator.mediaSession.metadata = new window.MediaMetadata({\n          title: this.config.mediaMetadata.title,\n          artist: this.config.mediaMetadata.artist,\n          album: this.config.mediaMetadata.album,\n          artwork: this.config.mediaMetadata.artwork,\n        });\n      }\n    } catch (_) {\n      // Do nothing\n    }\n  },\n\n  // Add markers\n  setMarkers() {\n    if (!this.duration || this.elements.markers) return;\n\n    // Get valid points\n    const points = this.config.markers?.points?.filter(({ time }) => time > 0 && time < this.duration);\n    if (!points?.length) return;\n\n    const containerFragment = document.createDocumentFragment();\n    const pointsFragment = document.createDocumentFragment();\n    let tipElement = null;\n    const tipVisible = `${this.config.classNames.tooltip}--visible`;\n    const toggleTip = (show) => toggleClass(tipElement, tipVisible, show);\n\n    // Inject markers to progress container\n    points.forEach((point) => {\n      const markerElement = createElement(\n        'span',\n        {\n          class: this.config.classNames.marker,\n        },\n        '',\n      );\n\n      const left = `${(point.time / this.duration) * 100}%`;\n\n      if (tipElement) {\n        // Show on hover\n        markerElement.addEventListener('mouseenter', () => {\n          if (point.label) return;\n          tipElement.style.left = left;\n          tipElement.innerHTML = point.label;\n          toggleTip(true);\n        });\n\n        // Hide on leave\n        markerElement.addEventListener('mouseleave', () => {\n          toggleTip(false);\n        });\n      }\n\n      markerElement.addEventListener('click', () => {\n        this.currentTime = point.time;\n      });\n\n      markerElement.style.left = left;\n      pointsFragment.appendChild(markerElement);\n    });\n\n    containerFragment.appendChild(pointsFragment);\n\n    // Inject a tooltip if needed\n    if (!this.config.tooltips.seek) {\n      tipElement = createElement(\n        'span',\n        {\n          class: this.config.classNames.tooltip,\n        },\n        '',\n      );\n\n      containerFragment.appendChild(tipElement);\n    }\n\n    this.elements.markers = {\n      points: pointsFragment,\n      tip: tipElement,\n    };\n\n    this.elements.progress.appendChild(containerFragment);\n  },\n};\n\nexport default controls;\n","// ==========================================================================\n// URL utils\n// ==========================================================================\n\nimport is from './is';\n\n/**\n * Parse a string to a URL object\n * @param {String} input - the URL to be parsed\n * @param {Boolean} safe - failsafe parsing\n */\nexport function parseUrl(input, safe = true) {\n  let url = input;\n\n  if (safe) {\n    const parser = document.createElement('a');\n    parser.href = url;\n    url = parser.href;\n  }\n\n  try {\n    return new URL(url);\n  } catch (_) {\n    return null;\n  }\n}\n\n// Convert object to URLSearchParams\nexport function buildUrlParams(input) {\n  const params = new URLSearchParams();\n\n  if (is.object(input)) {\n    Object.entries(input).forEach(([key, value]) => {\n      params.set(key, value);\n    });\n  }\n\n  return params;\n}\n","// ==========================================================================\n// Plyr Captions\n// TODO: Create as class\n// ==========================================================================\n\nimport controls from './controls';\nimport support from './support';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n  createElement,\n  emptyElement,\n  getAttributesFromSelector,\n  insertAfter,\n  removeElement,\n  toggleClass,\n} from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport fetch from './utils/fetch';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport { getHTML } from './utils/strings';\nimport { parseUrl } from './utils/urls';\n\nconst captions = {\n  // Setup captions\n  setup() {\n    // Requires UI support\n    if (!this.supported.ui) {\n      return;\n    }\n\n    // Only Vimeo and HTML5 video supported at this point\n    if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\n      // Clear menu and hide\n      if (\n        is.array(this.config.controls) &&\n        this.config.controls.includes('settings') &&\n        this.config.settings.includes('captions')\n      ) {\n        controls.setCaptionsMenu.call(this);\n      }\n\n      return;\n    }\n\n    // Inject the container\n    if (!is.element(this.elements.captions)) {\n      this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\n      this.elements.captions.setAttribute('dir', 'auto');\n\n      insertAfter(this.elements.captions, this.elements.wrapper);\n    }\n\n    // Fix IE captions if CORS is used\n    // Fetch captions and inject as blobs instead (data URIs not supported!)\n    if (browser.isIE && window.URL) {\n      const elements = this.media.querySelectorAll('track');\n\n      Array.from(elements).forEach((track) => {\n        const src = track.getAttribute('src');\n        const url = parseUrl(src);\n\n        if (\n          url !== null &&\n          url.hostname !== window.location.href.hostname &&\n          ['http:', 'https:'].includes(url.protocol)\n        ) {\n          fetch(src, 'blob')\n            .then((blob) => {\n              track.setAttribute('src', window.URL.createObjectURL(blob));\n            })\n            .catch(() => {\n              removeElement(track);\n            });\n        }\n      });\n    }\n\n    // Get and set initial data\n    // The \"preferred\" options are not realized unless / until the wanted language has a match\n    // * languages: Array of user's browser languages.\n    // * language:  The language preferred by user settings or config\n    // * active:    The state preferred by user settings or config\n    // * toggled:   The real captions state\n\n    const browserLanguages = navigator.languages || [navigator.language || navigator.userLanguage || 'en'];\n    const languages = dedupe(browserLanguages.map((language) => language.split('-')[0]));\n    let language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase();\n\n    // Use first browser language when language is 'auto'\n    if (language === 'auto') {\n      [language] = languages;\n    }\n\n    let active = this.storage.get('captions');\n    if (!is.boolean(active)) {\n      ({ active } = this.config.captions);\n    }\n\n    Object.assign(this.captions, {\n      toggled: false,\n      active,\n      language,\n      languages,\n    });\n\n    // Watch changes to textTracks and update captions menu\n    if (this.isHTML5) {\n      const trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\n      on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\n    }\n\n    // Update available languages in list next tick (the event must not be triggered before the listeners)\n    setTimeout(captions.update.bind(this), 0);\n  },\n\n  // Update available language options in settings based on tracks\n  update() {\n    const tracks = captions.getTracks.call(this, true);\n    // Get the wanted language\n    const { active, language, meta, currentTrackNode } = this.captions;\n    const languageExists = Boolean(tracks.find((track) => track.language === language));\n\n    // Handle tracks (add event listener and \"pseudo\"-default)\n    if (this.isHTML5 && this.isVideo) {\n      tracks\n        .filter((track) => !meta.get(track))\n        .forEach((track) => {\n          this.debug.log('Track added', track);\n\n          // Attempt to store if the original dom element was \"default\"\n          meta.set(track, {\n            default: track.mode === 'showing',\n          });\n\n          // Turn off native caption rendering to avoid double captions\n          // Note: mode='hidden' forces a track to download. To ensure every track\n          // isn't downloaded at once, only 'showing' tracks should be reassigned\n          // eslint-disable-next-line no-param-reassign\n          if (track.mode === 'showing') {\n            // eslint-disable-next-line no-param-reassign\n            track.mode = 'hidden';\n          }\n\n          // Add event listener for cue changes\n          on.call(this, track, 'cuechange', () => captions.updateCues.call(this));\n        });\n    }\n\n    // Update language first time it matches, or if the previous matching track was removed\n    if ((languageExists && this.language !== language) || !tracks.includes(currentTrackNode)) {\n      captions.setLanguage.call(this, language);\n      captions.toggle.call(this, active && languageExists);\n    }\n\n    // Enable or disable captions based on track length\n    if (this.elements) {\n      toggleClass(this.elements.container, this.config.classNames.captions.enabled, !is.empty(tracks));\n    }\n\n    // Update available languages in list\n    if (\n      is.array(this.config.controls) &&\n      this.config.controls.includes('settings') &&\n      this.config.settings.includes('captions')\n    ) {\n      controls.setCaptionsMenu.call(this);\n    }\n  },\n\n  // Toggle captions display\n  // Used internally for the toggleCaptions method, with the passive option forced to false\n  toggle(input, passive = true) {\n    // If there's no full support\n    if (!this.supported.ui) {\n      return;\n    }\n\n    const { toggled } = this.captions; // Current state\n    const activeClass = this.config.classNames.captions.active;\n    // Get the next state\n    // If the method is called without parameter, toggle based on current value\n    const active = is.nullOrUndefined(input) ? !toggled : input;\n\n    // Update state and trigger event\n    if (active !== toggled) {\n      // When passive, don't override user preferences\n      if (!passive) {\n        this.captions.active = active;\n        this.storage.set({ captions: active });\n      }\n\n      // Force language if the call isn't passive and there is no matching language to toggle to\n      if (!this.language && active && !passive) {\n        const tracks = captions.getTracks.call(this);\n        const track = captions.findTrack.call(this, [this.captions.language, ...this.captions.languages], true);\n\n        // Override user preferences to avoid switching languages if a matching track is added\n        this.captions.language = track.language;\n\n        // Set caption, but don't store in localStorage as user preference\n        captions.set.call(this, tracks.indexOf(track));\n        return;\n      }\n\n      // Toggle button if it's enabled\n      if (this.elements.buttons.captions) {\n        this.elements.buttons.captions.pressed = active;\n      }\n\n      // Add class hook\n      toggleClass(this.elements.container, activeClass, active);\n\n      this.captions.toggled = active;\n\n      // Update settings menu\n      controls.updateSetting.call(this, 'captions');\n\n      // Trigger event (not used internally)\n      triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\n    }\n\n    // Wait for the call stack to clear before setting mode='hidden'\n    // on the active track - forcing the browser to download it\n    setTimeout(() => {\n      if (active && this.captions.toggled) {\n        this.captions.currentTrackNode.mode = 'hidden';\n      }\n    });\n  },\n\n  // Set captions by track index\n  // Used internally for the currentTrack setter with the passive option forced to false\n  set(index, passive = true) {\n    const tracks = captions.getTracks.call(this);\n\n    // Disable captions if setting to -1\n    if (index === -1) {\n      captions.toggle.call(this, false, passive);\n      return;\n    }\n\n    if (!is.number(index)) {\n      this.debug.warn('Invalid caption argument', index);\n      return;\n    }\n\n    if (!(index in tracks)) {\n      this.debug.warn('Track not found', index);\n      return;\n    }\n\n    if (this.captions.currentTrack !== index) {\n      this.captions.currentTrack = index;\n      const track = tracks[index];\n      const { language } = track || {};\n\n      // Store reference to node for invalidation on remove\n      this.captions.currentTrackNode = track;\n\n      // Update settings menu\n      controls.updateSetting.call(this, 'captions');\n\n      // When passive, don't override user preferences\n      if (!passive) {\n        this.captions.language = language;\n        this.storage.set({ language });\n      }\n\n      // Handle Vimeo captions\n      if (this.isVimeo) {\n        this.embed.enableTextTrack(language);\n      }\n\n      // Trigger event\n      triggerEvent.call(this, this.media, 'languagechange');\n    }\n\n    // Show captions\n    captions.toggle.call(this, true, passive);\n\n    if (this.isHTML5 && this.isVideo) {\n      // If we change the active track while a cue is already displayed we need to update it\n      captions.updateCues.call(this);\n    }\n  },\n\n  // Set captions by language\n  // Used internally for the language setter with the passive option forced to false\n  setLanguage(input, passive = true) {\n    if (!is.string(input)) {\n      this.debug.warn('Invalid language argument', input);\n      return;\n    }\n    // Normalize\n    const language = input.toLowerCase();\n    this.captions.language = language;\n\n    // Set currentTrack\n    const tracks = captions.getTracks.call(this);\n    const track = captions.findTrack.call(this, [language]);\n    captions.set.call(this, tracks.indexOf(track), passive);\n  },\n\n  // Get current valid caption tracks\n  // If update is false it will also ignore tracks without metadata\n  // This is used to \"freeze\" the language options when captions.update is false\n  getTracks(update = false) {\n    // Handle media or textTracks missing or null\n    const tracks = Array.from((this.media || {}).textTracks || []);\n    // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\n    // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\n    return tracks\n      .filter((track) => !this.isHTML5 || update || this.captions.meta.has(track))\n      .filter((track) => ['captions', 'subtitles'].includes(track.kind));\n  },\n\n  // Match tracks based on languages and get the first\n  findTrack(languages, force = false) {\n    const tracks = captions.getTracks.call(this);\n    const sortIsDefault = (track) => Number((this.captions.meta.get(track) || {}).default);\n    const sorted = Array.from(tracks).sort((a, b) => sortIsDefault(b) - sortIsDefault(a));\n    let track;\n\n    languages.every((language) => {\n      track = sorted.find((t) => t.language === language);\n      return !track; // Break iteration if there is a match\n    });\n\n    // If no match is found but is required, get first\n    return track || (force ? sorted[0] : undefined);\n  },\n\n  // Get the current track\n  getCurrentTrack() {\n    return captions.getTracks.call(this)[this.currentTrack];\n  },\n\n  // Get UI label for track\n  getLabel(track) {\n    let currentTrack = track;\n\n    if (!is.track(currentTrack) && support.textTracks && this.captions.toggled) {\n      currentTrack = captions.getCurrentTrack.call(this);\n    }\n\n    if (is.track(currentTrack)) {\n      if (!is.empty(currentTrack.label)) {\n        return currentTrack.label;\n      }\n\n      if (!is.empty(currentTrack.language)) {\n        return track.language.toUpperCase();\n      }\n\n      return i18n.get('enabled', this.config);\n    }\n\n    return i18n.get('disabled', this.config);\n  },\n\n  // Update captions using current track's active cues\n  // Also optional array argument in case there isn't any track (ex: vimeo)\n  updateCues(input) {\n    // Requires UI\n    if (!this.supported.ui) {\n      return;\n    }\n\n    if (!is.element(this.elements.captions)) {\n      this.debug.warn('No captions element to render to');\n      return;\n    }\n\n    // Only accept array or empty input\n    if (!is.nullOrUndefined(input) && !Array.isArray(input)) {\n      this.debug.warn('updateCues: Invalid input', input);\n      return;\n    }\n\n    let cues = input;\n\n    // Get cues from track\n    if (!cues) {\n      const track = captions.getCurrentTrack.call(this);\n\n      cues = Array.from((track || {}).activeCues || [])\n        .map((cue) => cue.getCueAsHTML())\n        .map(getHTML);\n    }\n\n    // Set new caption text\n    const content = cues.map((cueText) => cueText.trim()).join('\\n');\n    const changed = content !== this.elements.captions.innerHTML;\n\n    if (changed) {\n      // Empty the container and create a new child element\n      emptyElement(this.elements.captions);\n      const caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\n      caption.innerHTML = content;\n      this.elements.captions.appendChild(caption);\n\n      // Trigger event\n      triggerEvent.call(this, this.media, 'cuechange');\n    }\n  },\n};\n\nexport default captions;\n","// ==========================================================================\n// Plyr default config\n// ==========================================================================\n\nconst defaults = {\n  // Disable\n  enabled: true,\n\n  // Custom media title\n  title: '',\n\n  // Logging to console\n  debug: false,\n\n  // Auto play (if supported)\n  autoplay: false,\n\n  // Only allow one media playing at once (vimeo only)\n  autopause: true,\n\n  // Allow inline playback on iOS (this effects YouTube/Vimeo - HTML5 requires the attribute present)\n  // TODO: Remove iosNative fullscreen option in favour of this (logic needs work)\n  playsinline: true,\n\n  // Default time to skip when rewind/fast forward\n  seekTime: 10,\n\n  // Default volume\n  volume: 1,\n  muted: false,\n\n  // Pass a custom duration\n  duration: null,\n\n  // Display the media duration on load in the current time position\n  // If you have opted to display both duration and currentTime, this is ignored\n  displayDuration: true,\n\n  // Invert the current time to be a countdown\n  invertTime: true,\n\n  // Clicking the currentTime inverts it's value to show time left rather than elapsed\n  toggleInvert: true,\n\n  // Force an aspect ratio\n  // The format must be `'w:h'` (e.g. `'16:9'`)\n  ratio: null,\n\n  // Click video container to play/pause\n  clickToPlay: true,\n\n  // Auto hide the controls\n  hideControls: true,\n\n  // Reset to start when playback ended\n  resetOnEnd: false,\n\n  // Disable the standard context menu\n  disableContextMenu: true,\n\n  // Sprite (for icons)\n  loadSprite: true,\n  iconPrefix: 'plyr',\n  iconUrl: 'https://cdn.plyr.io/3.7.3/plyr.svg',\n\n  // Blank video (used to prevent errors on source change)\n  blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n\n  // Quality default\n  quality: {\n    default: 576,\n    // The options to display in the UI, if available for the source media\n    options: [4320, 2880, 2160, 1440, 1080, 720, 576, 480, 360, 240],\n    forced: false,\n    onChange: null,\n  },\n\n  // Set loops\n  loop: {\n    active: false,\n    // start: null,\n    // end: null,\n  },\n\n  // Speed default and options to display\n  speed: {\n    selected: 1,\n    // The options to display in the UI, if available for the source media (e.g. Vimeo and YouTube only support 0.5x-4x)\n    options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2, 4],\n  },\n\n  // Keyboard shortcut settings\n  keyboard: {\n    focused: true,\n    global: false,\n  },\n\n  // Display tooltips\n  tooltips: {\n    controls: false,\n    seek: true,\n  },\n\n  // Captions settings\n  captions: {\n    active: false,\n    language: 'auto',\n    // Listen to new tracks added after Plyr is initialized.\n    // This is needed for streaming captions, but may result in unselectable options\n    update: false,\n  },\n\n  // Fullscreen settings\n  fullscreen: {\n    enabled: true, // Allow fullscreen?\n    fallback: true, // Fallback using full viewport/window\n    iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\n    // Selector for the fullscreen container so contextual / non-player content can remain visible in fullscreen mode\n    // Non-ancestors of the player element will be ignored\n    // container: null, // defaults to the player element\n  },\n\n  // Local storage\n  storage: {\n    enabled: true,\n    key: 'plyr',\n  },\n\n  // Default controls\n  controls: [\n    'play-large',\n    // 'restart',\n    // 'rewind',\n    'play',\n    // 'fast-forward',\n    'progress',\n    'current-time',\n    // 'duration',\n    'mute',\n    'volume',\n    'captions',\n    'settings',\n    'pip',\n    'airplay',\n    // 'download',\n    'fullscreen',\n  ],\n  settings: ['captions', 'quality', 'speed'],\n\n  // Localisation\n  i18n: {\n    restart: 'Restart',\n    rewind: 'Rewind {seektime}s',\n    play: 'Play',\n    pause: 'Pause',\n    fastForward: 'Forward {seektime}s',\n    seek: 'Seek',\n    seekLabel: '{currentTime} of {duration}',\n    played: 'Played',\n    buffered: 'Buffered',\n    currentTime: 'Current time',\n    duration: 'Duration',\n    volume: 'Volume',\n    mute: 'Mute',\n    unmute: 'Unmute',\n    enableCaptions: 'Enable captions',\n    disableCaptions: 'Disable captions',\n    download: 'Download',\n    enterFullscreen: 'Enter fullscreen',\n    exitFullscreen: 'Exit fullscreen',\n    frameTitle: 'Player for {title}',\n    captions: 'Captions',\n    settings: 'Settings',\n    pip: 'PIP',\n    menuBack: 'Go back to previous menu',\n    speed: 'Speed',\n    normal: 'Normal',\n    quality: 'Quality',\n    loop: 'Loop',\n    start: 'Start',\n    end: 'End',\n    all: 'All',\n    reset: 'Reset',\n    disabled: 'Disabled',\n    enabled: 'Enabled',\n    advertisement: 'Ad',\n    qualityBadge: {\n      2160: '4K',\n      1440: 'HD',\n      1080: 'HD',\n      720: 'HD',\n      576: 'SD',\n      480: 'SD',\n    },\n  },\n\n  // URLs\n  urls: {\n    download: null,\n    vimeo: {\n      sdk: 'https://player.vimeo.com/api/player.js',\n      iframe: 'https://player.vimeo.com/video/{0}?{1}',\n      api: 'https://vimeo.com/api/oembed.json?url={0}',\n    },\n    youtube: {\n      sdk: 'https://www.youtube.com/iframe_api',\n      api: 'https://noembed.com/embed?url=https://www.youtube.com/watch?v={0}',\n    },\n    googleIMA: {\n      sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n    },\n  },\n\n  // Custom control listeners\n  listeners: {\n    seek: null,\n    play: null,\n    pause: null,\n    restart: null,\n    rewind: null,\n    fastForward: null,\n    mute: null,\n    volume: null,\n    captions: null,\n    download: null,\n    fullscreen: null,\n    pip: null,\n    airplay: null,\n    speed: null,\n    quality: null,\n    loop: null,\n    language: null,\n  },\n\n  // Events to watch and bubble\n  events: [\n    // Events to watch on HTML5 media elements and bubble\n    // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n    'ended',\n    'progress',\n    'stalled',\n    'playing',\n    'waiting',\n    'canplay',\n    'canplaythrough',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'timeupdate',\n    'volumechange',\n    'play',\n    'pause',\n    'error',\n    'seeking',\n    'seeked',\n    'emptied',\n    'ratechange',\n    'cuechange',\n\n    // Custom events\n    'download',\n    'enterfullscreen',\n    'exitfullscreen',\n    'captionsenabled',\n    'captionsdisabled',\n    'languagechange',\n    'controlshidden',\n    'controlsshown',\n    'ready',\n\n    // YouTube\n    'statechange',\n\n    // Quality\n    'qualitychange',\n\n    // Ads\n    'adsloaded',\n    'adscontentpause',\n    'adscontentresume',\n    'adstarted',\n    'adsmidpoint',\n    'adscomplete',\n    'adsallcomplete',\n    'adsimpression',\n    'adsclick',\n  ],\n\n  // Selectors\n  // Change these to match your template if using custom HTML\n  selectors: {\n    editable: 'input, textarea, select, [contenteditable]',\n    container: '.plyr',\n    controls: {\n      container: null,\n      wrapper: '.plyr__controls',\n    },\n    labels: '[data-plyr]',\n    buttons: {\n      play: '[data-plyr=\"play\"]',\n      pause: '[data-plyr=\"pause\"]',\n      restart: '[data-plyr=\"restart\"]',\n      rewind: '[data-plyr=\"rewind\"]',\n      fastForward: '[data-plyr=\"fast-forward\"]',\n      mute: '[data-plyr=\"mute\"]',\n      captions: '[data-plyr=\"captions\"]',\n      download: '[data-plyr=\"download\"]',\n      fullscreen: '[data-plyr=\"fullscreen\"]',\n      pip: '[data-plyr=\"pip\"]',\n      airplay: '[data-plyr=\"airplay\"]',\n      settings: '[data-plyr=\"settings\"]',\n      loop: '[data-plyr=\"loop\"]',\n    },\n    inputs: {\n      seek: '[data-plyr=\"seek\"]',\n      volume: '[data-plyr=\"volume\"]',\n      speed: '[data-plyr=\"speed\"]',\n      language: '[data-plyr=\"language\"]',\n      quality: '[data-plyr=\"quality\"]',\n    },\n    display: {\n      currentTime: '.plyr__time--current',\n      duration: '.plyr__time--duration',\n      buffer: '.plyr__progress__buffer',\n      loop: '.plyr__progress__loop', // Used later\n      volume: '.plyr__volume--display',\n    },\n    progress: '.plyr__progress',\n    captions: '.plyr__captions',\n    caption: '.plyr__caption',\n  },\n\n  // Class hooks added to the player in different states\n  classNames: {\n    type: 'plyr--{0}',\n    provider: 'plyr--{0}',\n    video: 'plyr__video-wrapper',\n    embed: 'plyr__video-embed',\n    videoFixedRatio: 'plyr__video-wrapper--fixed-ratio',\n    embedContainer: 'plyr__video-embed__container',\n    poster: 'plyr__poster',\n    posterEnabled: 'plyr__poster-enabled',\n    ads: 'plyr__ads',\n    control: 'plyr__control',\n    controlPressed: 'plyr__control--pressed',\n    playing: 'plyr--playing',\n    paused: 'plyr--paused',\n    stopped: 'plyr--stopped',\n    loading: 'plyr--loading',\n    hover: 'plyr--hover',\n    tooltip: 'plyr__tooltip',\n    cues: 'plyr__cues',\n    marker: 'plyr__progress__marker',\n    hidden: 'plyr__sr-only',\n    hideControls: 'plyr--hide-controls',\n    isIos: 'plyr--is-ios',\n    isTouch: 'plyr--is-touch',\n    uiSupported: 'plyr--full-ui',\n    noTransition: 'plyr--no-transition',\n    display: {\n      time: 'plyr__time',\n    },\n    menu: {\n      value: 'plyr__menu__value',\n      badge: 'plyr__badge',\n      open: 'plyr--menu-open',\n    },\n    captions: {\n      enabled: 'plyr--captions-enabled',\n      active: 'plyr--captions-active',\n    },\n    fullscreen: {\n      enabled: 'plyr--fullscreen-enabled',\n      fallback: 'plyr--fullscreen-fallback',\n    },\n    pip: {\n      supported: 'plyr--pip-supported',\n      active: 'plyr--pip-active',\n    },\n    airplay: {\n      supported: 'plyr--airplay-supported',\n      active: 'plyr--airplay-active',\n    },\n    tabFocus: 'plyr__tab-focus',\n    previewThumbnails: {\n      // Tooltip thumbs\n      thumbContainer: 'plyr__preview-thumb',\n      thumbContainerShown: 'plyr__preview-thumb--is-shown',\n      imageContainer: 'plyr__preview-thumb__image-container',\n      timeContainer: 'plyr__preview-thumb__time-container',\n      // Scrubbing\n      scrubbingContainer: 'plyr__preview-scrubbing',\n      scrubbingContainerShown: 'plyr__preview-scrubbing--is-shown',\n    },\n  },\n\n  // Embed attributes\n  attributes: {\n    embed: {\n      provider: 'data-plyr-provider',\n      id: 'data-plyr-embed-id',\n      hash: 'data-plyr-embed-hash',\n    },\n  },\n\n  // Advertisements plugin\n  // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n  ads: {\n    enabled: false,\n    publisherId: '',\n    tagUrl: '',\n  },\n\n  // Preview Thumbnails plugin\n  previewThumbnails: {\n    enabled: false,\n    src: '',\n  },\n\n  // Vimeo plugin\n  vimeo: {\n    byline: false,\n    portrait: false,\n    title: false,\n    speed: true,\n    transparent: false,\n    // Custom settings from Plyr\n    customControls: true,\n    referrerPolicy: null, // https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/referrerPolicy\n    // Whether the owner of the video has a Pro or Business account\n    // (which allows us to properly hide controls without CSS hacks, etc)\n    premium: false,\n  },\n\n  // YouTube plugin\n  youtube: {\n    rel: 0, // No related vids\n    showinfo: 0, // Hide info\n    iv_load_policy: 3, // Hide annotations\n    modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\n    // Custom settings from Plyr\n    customControls: true,\n    noCookie: false, // Whether to use an alternative version of YouTube without cookies\n  },\n\n  // Media Metadata\n  mediaMetadata: {\n    title: '',\n    artist: '',\n    album: '',\n    artwork: [],\n  },\n\n  // Markers\n  markers: {\n    enabled: false,\n    points: [],\n  },\n};\n\nexport default defaults;\n","// ==========================================================================\n// Plyr states\n// ==========================================================================\n\nexport const pip = {\n  active: 'picture-in-picture',\n  inactive: 'inline',\n};\n\nexport default { pip };\n","// ==========================================================================\n// Plyr supported types and providers\n// ==========================================================================\n\nexport const providers = {\n  html5: 'html5',\n  youtube: 'youtube',\n  vimeo: 'vimeo',\n};\n\nexport const types = {\n  audio: 'audio',\n  video: 'video',\n};\n\n/**\n * Get provider by URL\n * @param {String} url\n */\nexport function getProviderByUrl(url) {\n  // YouTube\n  if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtube-nocookie\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n    return providers.youtube;\n  }\n\n  // Vimeo\n  if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\n    return providers.vimeo;\n  }\n\n  return null;\n}\n\nexport default { providers, types };\n","// ==========================================================================\n// Console wrapper\n// ==========================================================================\n\nconst noop = () => {};\n\nexport default class Console {\n  constructor(enabled = false) {\n    this.enabled = window.console && enabled;\n\n    if (this.enabled) {\n      this.log('Debugging enabled');\n    }\n  }\n\n  get log() {\n    // eslint-disable-next-line no-console\n    return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n  }\n\n  get warn() {\n    // eslint-disable-next-line no-console\n    return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n  }\n\n  get error() {\n    // eslint-disable-next-line no-console\n    return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n  }\n}\n","// ==========================================================================\n// Fullscreen wrapper\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\n// https://webkit.org/blog/7929/designing-websites-for-iphone-x/\n// ==========================================================================\n\nimport browser from './utils/browser';\nimport { closest, getElements, hasClass, toggleClass } from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport is from './utils/is';\nimport { silencePromise } from './utils/promise';\n\nclass Fullscreen {\n  constructor(player) {\n    // Keep reference to parent\n    this.player = player;\n\n    // Get prefix\n    this.prefix = Fullscreen.prefix;\n    this.property = Fullscreen.property;\n\n    // Scroll position\n    this.scrollPosition = { x: 0, y: 0 };\n\n    // Force the use of 'full window/browser' rather than fullscreen\n    this.forceFallback = player.config.fullscreen.fallback === 'force';\n\n    // Get the fullscreen element\n    // Checks container is an ancestor, defaults to null\n    this.player.elements.fullscreen =\n      player.config.fullscreen.container && closest(this.player.elements.container, player.config.fullscreen.container);\n\n    // Register event listeners\n    // Handle event (incase user presses escape etc)\n    on.call(\n      this.player,\n      document,\n      this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`,\n      () => {\n        // TODO: Filter for target??\n        this.onChange();\n      },\n    );\n\n    // Fullscreen toggle on double click\n    on.call(this.player, this.player.elements.container, 'dblclick', (event) => {\n      // Ignore double click in controls\n      if (is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\n        return;\n      }\n\n      this.player.listeners.proxy(event, this.toggle, 'fullscreen');\n    });\n\n    // Tap focus when in fullscreen\n    on.call(this, this.player.elements.container, 'keydown', (event) => this.trapFocus(event));\n\n    // Update the UI\n    this.update();\n\n    // this.toggle = this.toggle.bind(this);\n  }\n\n  // Determine if native supported\n  static get native() {\n    return !!(\n      document.fullscreenEnabled ||\n      document.webkitFullscreenEnabled ||\n      document.mozFullScreenEnabled ||\n      document.msFullscreenEnabled\n    );\n  }\n\n  // If we're actually using native\n  get usingNative() {\n    return Fullscreen.native && !this.forceFallback;\n  }\n\n  // Get the prefix for handlers\n  static get prefix() {\n    // No prefix\n    if (is.function(document.exitFullscreen)) {\n      return '';\n    }\n\n    // Check for fullscreen support by vendor prefix\n    let value = '';\n    const prefixes = ['webkit', 'moz', 'ms'];\n\n    prefixes.some((pre) => {\n      if (is.function(document[`${pre}ExitFullscreen`]) || is.function(document[`${pre}CancelFullScreen`])) {\n        value = pre;\n        return true;\n      }\n\n      return false;\n    });\n\n    return value;\n  }\n\n  static get property() {\n    return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n  }\n\n  // Determine if fullscreen is enabled\n  get enabled() {\n    return (\n      (Fullscreen.native || this.player.config.fullscreen.fallback) &&\n      this.player.config.fullscreen.enabled &&\n      this.player.supported.ui &&\n      this.player.isVideo\n    );\n  }\n\n  // Get active state\n  get active() {\n    if (!this.enabled) {\n      return false;\n    }\n\n    // Fallback using classname\n    if (!Fullscreen.native || this.forceFallback) {\n      return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n    }\n\n    const element = !this.prefix\n      ? this.target.getRootNode().fullscreenElement\n      : this.target.getRootNode()[`${this.prefix}${this.property}Element`];\n\n    return element && element.shadowRoot ? element === this.target.getRootNode().host : element === this.target;\n  }\n\n  // Get target element\n  get target() {\n    return browser.isIos && this.player.config.fullscreen.iosNative\n      ? this.player.media\n      : this.player.elements.fullscreen || this.player.elements.container;\n  }\n\n  onChange = () => {\n    if (!this.enabled) {\n      return;\n    }\n\n    // Update toggle button\n    const button = this.player.elements.buttons.fullscreen;\n    if (is.element(button)) {\n      button.pressed = this.active;\n    }\n\n    // Always trigger events on the plyr / media element (not a fullscreen container) and let them bubble up\n    const target = this.target === this.player.media ? this.target : this.player.elements.container;\n    // Trigger an event\n    triggerEvent.call(this.player, target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n  };\n\n  toggleFallback = (toggle = false) => {\n    // Store or restore scroll position\n    if (toggle) {\n      this.scrollPosition = {\n        x: window.scrollX || 0,\n        y: window.scrollY || 0,\n      };\n    } else {\n      window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n    }\n\n    // Toggle scroll\n    document.body.style.overflow = toggle ? 'hidden' : '';\n\n    // Toggle class hook\n    toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n\n    // Force full viewport on iPhone X+\n    if (browser.isIos) {\n      let viewport = document.head.querySelector('meta[name=\"viewport\"]');\n      const property = 'viewport-fit=cover';\n\n      // Inject the viewport meta if required\n      if (!viewport) {\n        viewport = document.createElement('meta');\n        viewport.setAttribute('name', 'viewport');\n      }\n\n      // Check if the property already exists\n      const hasProperty = is.string(viewport.content) && viewport.content.includes(property);\n\n      if (toggle) {\n        this.cleanupViewport = !hasProperty;\n\n        if (!hasProperty) {\n          viewport.content += `,${property}`;\n        }\n      } else if (this.cleanupViewport) {\n        viewport.content = viewport.content\n          .split(',')\n          .filter((part) => part.trim() !== property)\n          .join(',');\n      }\n    }\n\n    // Toggle button and fire events\n    this.onChange();\n  };\n\n  // Trap focus inside container\n  trapFocus = (event) => {\n    // Bail if iOS, not active, not the tab key\n    if (browser.isIos || !this.active || event.key !== 'Tab') {\n      return;\n    }\n\n    // Get the current focused element\n    const focused = document.activeElement;\n    const focusable = getElements.call(this.player, 'a[href], button:not(:disabled), input:not(:disabled), [tabindex]');\n    const [first] = focusable;\n    const last = focusable[focusable.length - 1];\n\n    if (focused === last && !event.shiftKey) {\n      // Move focus to first element that can be tabbed if Shift isn't used\n      first.focus();\n      event.preventDefault();\n    } else if (focused === first && event.shiftKey) {\n      // Move focus to last element that can be tabbed if Shift is used\n      last.focus();\n      event.preventDefault();\n    }\n  };\n\n  // Update UI\n  update = () => {\n    if (this.enabled) {\n      let mode;\n\n      if (this.forceFallback) {\n        mode = 'Fallback (forced)';\n      } else if (Fullscreen.native) {\n        mode = 'Native';\n      } else {\n        mode = 'Fallback';\n      }\n\n      this.player.debug.log(`${mode} fullscreen enabled`);\n    } else {\n      this.player.debug.log('Fullscreen not supported and fallback disabled');\n    }\n\n    // Add styling hook to show button\n    toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\n  };\n\n  // Make an element fullscreen\n  enter = () => {\n    if (!this.enabled) {\n      return;\n    }\n\n    // iOS native fullscreen doesn't need the request step\n    if (browser.isIos && this.player.config.fullscreen.iosNative) {\n      if (this.player.isVimeo) {\n        this.player.embed.requestFullscreen();\n      } else {\n        this.target.webkitEnterFullscreen();\n      }\n    } else if (!Fullscreen.native || this.forceFallback) {\n      this.toggleFallback(true);\n    } else if (!this.prefix) {\n      this.target.requestFullscreen({ navigationUI: 'hide' });\n    } else if (!is.empty(this.prefix)) {\n      this.target[`${this.prefix}Request${this.property}`]();\n    }\n  };\n\n  // Bail from fullscreen\n  exit = () => {\n    if (!this.enabled) {\n      return;\n    }\n\n    // iOS native fullscreen\n    if (browser.isIos && this.player.config.fullscreen.iosNative) {\n      this.target.webkitExitFullscreen();\n      silencePromise(this.player.play());\n    } else if (!Fullscreen.native || this.forceFallback) {\n      this.toggleFallback(false);\n    } else if (!this.prefix) {\n      (document.cancelFullScreen || document.exitFullscreen).call(document);\n    } else if (!is.empty(this.prefix)) {\n      const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n      document[`${this.prefix}${action}${this.property}`]();\n    }\n  };\n\n  // Toggle state\n  toggle = () => {\n    if (!this.active) {\n      this.enter();\n    } else {\n      this.exit();\n    }\n  };\n}\n\nexport default Fullscreen;\n","// ==========================================================================\n// Load image avoiding xhr/fetch CORS issues\n// Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\n// By default it checks if it is at least 1px, but you can add a second argument to change this\n// ==========================================================================\n\nexport default function loadImage(src, minWidth = 1) {\n  return new Promise((resolve, reject) => {\n    const image = new Image();\n\n    const handler = () => {\n      delete image.onload;\n      delete image.onerror;\n      (image.naturalWidth >= minWidth ? resolve : reject)(image);\n    };\n\n    Object.assign(image, { onload: handler, onerror: handler, src });\n  });\n}\n","// ==========================================================================\n// Plyr UI\n// ==========================================================================\n\nimport captions from './captions';\nimport controls from './controls';\nimport support from './support';\nimport browser from './utils/browser';\nimport { getElement, toggleClass } from './utils/elements';\nimport { ready, triggerEvent } from './utils/events';\nimport i18n from './utils/i18n';\nimport is from './utils/is';\nimport loadImage from './utils/load-image';\n\nconst ui = {\n  addStyleHook() {\n    toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n    toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n  },\n\n  // Toggle native HTML5 media controls\n  toggleNativeControls(toggle = false) {\n    if (toggle && this.isHTML5) {\n      this.media.setAttribute('controls', '');\n    } else {\n      this.media.removeAttribute('controls');\n    }\n  },\n\n  // Setup the UI\n  build() {\n    // Re-attach media element listeners\n    // TODO: Use event bubbling?\n    this.listeners.media();\n\n    // Don't setup interface if no support\n    if (!this.supported.ui) {\n      this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\n\n      // Restore native controls\n      ui.toggleNativeControls.call(this, true);\n\n      // Bail\n      return;\n    }\n\n    // Inject custom controls if not present\n    if (!is.element(this.elements.controls)) {\n      // Inject custom controls\n      controls.inject.call(this);\n\n      // Re-attach control listeners\n      this.listeners.controls();\n    }\n\n    // Remove native controls\n    ui.toggleNativeControls.call(this);\n\n    // Setup captions for HTML5\n    if (this.isHTML5) {\n      captions.setup.call(this);\n    }\n\n    // Reset volume\n    this.volume = null;\n\n    // Reset mute state\n    this.muted = null;\n\n    // Reset loop state\n    this.loop = null;\n\n    // Reset quality setting\n    this.quality = null;\n\n    // Reset speed\n    this.speed = null;\n\n    // Reset volume display\n    controls.updateVolume.call(this);\n\n    // Reset time display\n    controls.timeUpdate.call(this);\n\n    // Reset duration display\n    controls.durationUpdate.call(this);\n\n    // Update the UI\n    ui.checkPlaying.call(this);\n\n    // Check for picture-in-picture support\n    toggleClass(\n      this.elements.container,\n      this.config.classNames.pip.supported,\n      support.pip && this.isHTML5 && this.isVideo,\n    );\n\n    // Check for airplay support\n    toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\n\n    // Add iOS class\n    toggleClass(this.elements.container, this.config.classNames.isIos, browser.isIos);\n\n    // Add touch class\n    toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch);\n\n    // Ready for API calls\n    this.ready = true;\n\n    // Ready event at end of execution stack\n    setTimeout(() => {\n      triggerEvent.call(this, this.media, 'ready');\n    }, 0);\n\n    // Set the title\n    ui.setTitle.call(this);\n\n    // Assure the poster image is set, if the property was added before the element was created\n    if (this.poster) {\n      ui.setPoster.call(this, this.poster, false).catch(() => {});\n    }\n\n    // Manually set the duration if user has overridden it.\n    // The event listeners for it doesn't get called if preload is disabled (#701)\n    if (this.config.duration) {\n      controls.durationUpdate.call(this);\n    }\n\n    // Media metadata\n    if (this.config.mediaMetadata) {\n      controls.setMediaMetadata.call(this);\n    }\n  },\n\n  // Setup aria attribute for play and iframe title\n  setTitle() {\n    // Find the current text\n    let label = i18n.get('play', this.config);\n\n    // If there's a media title set, use that for the label\n    if (is.string(this.config.title) && !is.empty(this.config.title)) {\n      label += `, ${this.config.title}`;\n    }\n\n    // If there's a play button, set label\n    Array.from(this.elements.buttons.play || []).forEach((button) => {\n      button.setAttribute('aria-label', label);\n    });\n\n    // Set iframe title\n    // https://github.com/sampotts/plyr/issues/124\n    if (this.isEmbed) {\n      const iframe = getElement.call(this, 'iframe');\n\n      if (!is.element(iframe)) {\n        return;\n      }\n\n      // Default to media type\n      const title = !is.empty(this.config.title) ? this.config.title : 'video';\n      const format = i18n.get('frameTitle', this.config);\n\n      iframe.setAttribute('title', format.replace('{title}', title));\n    }\n  },\n\n  // Toggle poster\n  togglePoster(enable) {\n    toggleClass(this.elements.container, this.config.classNames.posterEnabled, enable);\n  },\n\n  // Set the poster image (async)\n  // Used internally for the poster setter, with the passive option forced to false\n  setPoster(poster, passive = true) {\n    // Don't override if call is passive\n    if (passive && this.poster) {\n      return Promise.reject(new Error('Poster already set'));\n    }\n\n    // Set property synchronously to respect the call order\n    this.media.setAttribute('data-poster', poster);\n\n    // Show the poster\n    this.elements.poster.removeAttribute('hidden');\n\n    // Wait until ui is ready\n    return (\n      ready\n        .call(this)\n        // Load image\n        .then(() => {\n          if (!this.media.dataset.posterLazyload) {\n            loadImage(poster);\n          }\n        })\n        .catch((error) => {\n          // Hide poster on error unless it's been set by another call\n          if (poster === this.poster) {\n            ui.togglePoster.call(this, false);\n          }\n          // Rethrow\n          throw error;\n        })\n        .then(() => {\n          // Prevent race conditions\n          if (poster !== this.poster) {\n            throw new Error('setPoster cancelled by later call to setPoster');\n          }\n        })\n        .then(() => {\n          if (this.media.dataset.posterLazyload) {\n            this.elements.poster.classList.add('lazyload');\n            this.elements.poster.dataset.bg = this.media.dataset.posterLazyload;\n            Object.assign(this.elements.poster.style, {\n              // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n              backgroundSize: '',\n            });\n          } else {\n            Object.assign(this.elements.poster.style, {\n              backgroundImage: `url('${poster}')`,\n              // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n              backgroundSize: '',\n            });\n          }\n\n          ui.togglePoster.call(this, true);\n\n          return poster;\n        })\n    );\n  },\n\n  // Check playing state\n  checkPlaying(event) {\n    // Class hooks\n    toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\n    toggleClass(this.elements.container, this.config.classNames.paused, this.paused);\n    toggleClass(this.elements.container, this.config.classNames.stopped, this.stopped);\n\n    // Set state\n    Array.from(this.elements.buttons.play || []).forEach((target) => {\n      Object.assign(target, { pressed: this.playing });\n      target.setAttribute('aria-label', i18n.get(this.playing ? 'pause' : 'play', this.config));\n    });\n\n    // Only update controls on non timeupdate events\n    if (is.event(event) && event.type === 'timeupdate') {\n      return;\n    }\n\n    // Toggle controls\n    ui.toggleControls.call(this);\n  },\n\n  // Check if media is loading\n  checkLoading(event) {\n    this.loading = ['stalled', 'waiting'].includes(event.type);\n\n    // Clear timer\n    clearTimeout(this.timers.loading);\n\n    // Timer to prevent flicker when seeking\n    this.timers.loading = setTimeout(\n      () => {\n        // Update progress bar loading class state\n        toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n        // Update controls visibility\n        ui.toggleControls.call(this);\n      },\n      this.loading ? 250 : 0,\n    );\n  },\n\n  // Toggle controls based on state and `force` argument\n  toggleControls(force) {\n    const { controls: controlsElement } = this.elements;\n\n    if (controlsElement && this.config.hideControls) {\n      // Don't hide controls if a touch-device user recently seeked. (Must be limited to touch devices, or it occasionally prevents desktop controls from hiding.)\n      const recentTouchSeek = this.touch && this.lastSeekTime + 2000 > Date.now();\n\n      // Show controls if force, loading, paused, button interaction, or recent seek, otherwise hide\n      this.toggleControls(\n        Boolean(\n          force || this.loading || this.paused || controlsElement.pressed || controlsElement.hover || recentTouchSeek,\n        ),\n      );\n    }\n  },\n\n  // Migrate any custom properties from the media to the parent\n  migrateStyles() {\n    // Loop through values (as they are the keys when the object is spread 🤔)\n    Object.values({ ...this.media.style })\n      // We're only fussed about Plyr specific properties\n      .filter((key) => !is.empty(key) && is.string(key) && key.startsWith('--plyr'))\n      .forEach((key) => {\n        // Set on the container\n        this.elements.container.style.setProperty(key, this.media.style.getPropertyValue(key));\n\n        // Clean up from media element\n        this.media.style.removeProperty(key);\n      });\n\n    // Remove attribute if empty\n    if (is.empty(this.media.style)) {\n      this.media.removeAttribute('style');\n    }\n  },\n};\n\nexport default ui;\n","// ==========================================================================\n// Plyr Event Listeners\n// ==========================================================================\n\nimport controls from './controls';\nimport ui from './ui';\nimport { repaint } from './utils/animation';\nimport browser from './utils/browser';\nimport { getElement, getElements, matches, toggleClass } from './utils/elements';\nimport { off, on, once, toggleListener, triggerEvent } from './utils/events';\nimport is from './utils/is';\nimport { silencePromise } from './utils/promise';\nimport { getAspectRatio, getViewportSize, supportsCSS } from './utils/style';\n\nclass Listeners {\n  constructor(player) {\n    this.player = player;\n    this.lastKey = null;\n    this.focusTimer = null;\n    this.lastKeyDown = null;\n\n    this.handleKey = this.handleKey.bind(this);\n    this.toggleMenu = this.toggleMenu.bind(this);\n    this.setTabFocus = this.setTabFocus.bind(this);\n    this.firstTouch = this.firstTouch.bind(this);\n  }\n\n  // Handle key presses\n  handleKey(event) {\n    const { player } = this;\n    const { elements } = player;\n    const { key, type, altKey, ctrlKey, metaKey, shiftKey } = event;\n    const pressed = type === 'keydown';\n    const repeat = pressed && key === this.lastKey;\n\n    // Bail if a modifier key is set\n    if (altKey || ctrlKey || metaKey || shiftKey) {\n      return;\n    }\n\n    // If the event is bubbled from the media element\n    // Firefox doesn't get the key for whatever reason\n    if (!key) {\n      return;\n    }\n\n    // Seek by increment\n    const seekByIncrement = (increment) => {\n      // Divide the max duration into 10th's and times by the number value\n      player.currentTime = (player.duration / 10) * increment;\n    };\n\n    // Handle the key on keydown\n    // Reset on keyup\n    if (pressed) {\n      // Check focused element\n      // and if the focused element is not editable (e.g. text input)\n      // and any that accept key input http://webaim.org/techniques/keyboard/\n      const focused = document.activeElement;\n      if (is.element(focused)) {\n        const { editable } = player.config.selectors;\n        const { seek } = elements.inputs;\n\n        if (focused !== seek && matches(focused, editable)) {\n          return;\n        }\n\n        if (event.key === ' ' && matches(focused, 'button, [role^=\"menuitem\"]')) {\n          return;\n        }\n      }\n\n      // Which keys should we prevent default\n      const preventDefault = [\n        ' ',\n        'ArrowLeft',\n        'ArrowUp',\n        'ArrowRight',\n        'ArrowDown',\n\n        '0',\n        '1',\n        '2',\n        '3',\n        '4',\n        '5',\n        '6',\n        '7',\n        '8',\n        '9',\n\n        'c',\n        'f',\n        'k',\n        'l',\n        'm',\n      ];\n\n      // If the key is found prevent default (e.g. prevent scrolling for arrows)\n      if (preventDefault.includes(key)) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      switch (key) {\n        case '0':\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n          if (!repeat) {\n            seekByIncrement(parseInt(key, 10));\n          }\n          break;\n\n        case ' ':\n        case 'k':\n          if (!repeat) {\n            silencePromise(player.togglePlay());\n          }\n          break;\n\n        case 'ArrowUp':\n          player.increaseVolume(0.1);\n          break;\n\n        case 'ArrowDown':\n          player.decreaseVolume(0.1);\n          break;\n\n        case 'm':\n          if (!repeat) {\n            player.muted = !player.muted;\n          }\n          break;\n\n        case 'ArrowRight':\n          player.forward();\n          break;\n\n        case 'ArrowLeft':\n          player.rewind();\n          break;\n\n        case 'f':\n          player.fullscreen.toggle();\n          break;\n\n        case 'c':\n          if (!repeat) {\n            player.toggleCaptions();\n          }\n          break;\n\n        case 'l':\n          player.loop = !player.loop;\n          break;\n\n        default:\n          break;\n      }\n\n      // Escape is handle natively when in full screen\n      // So we only need to worry about non native\n      if (key === 'Escape' && !player.fullscreen.usingNative && player.fullscreen.active) {\n        player.fullscreen.toggle();\n      }\n\n      // Store last key for next cycle\n      this.lastKey = key;\n    } else {\n      this.lastKey = null;\n    }\n  }\n\n  // Toggle menu\n  toggleMenu(event) {\n    controls.toggleMenu.call(this.player, event);\n  }\n\n  // Device is touch enabled\n  firstTouch = () => {\n    const { player } = this;\n    const { elements } = player;\n\n    player.touch = true;\n\n    // Add touch class\n    toggleClass(elements.container, player.config.classNames.isTouch, true);\n  };\n\n  setTabFocus = (event) => {\n    const { player } = this;\n    const { elements } = player;\n    const { key, type, timeStamp } = event;\n\n    clearTimeout(this.focusTimer);\n\n    // Ignore any key other than tab\n    if (type === 'keydown' && key !== 'Tab') {\n      return;\n    }\n\n    // Store reference to event timeStamp\n    if (type === 'keydown') {\n      this.lastKeyDown = timeStamp;\n    }\n\n    // Remove current classes\n    const removeCurrent = () => {\n      const className = player.config.classNames.tabFocus;\n      const current = getElements.call(player, `.${className}`);\n      toggleClass(current, className, false);\n    };\n\n    // Determine if a key was pressed to trigger this event\n    const wasKeyDown = timeStamp - this.lastKeyDown <= 20;\n\n    // Ignore focus events if a key was pressed prior\n    if (type === 'focus' && !wasKeyDown) {\n      return;\n    }\n\n    // Remove all current\n    removeCurrent();\n\n    // Delay the adding of classname until the focus has changed\n    // This event fires before the focusin event\n    if (type !== 'focusout') {\n      this.focusTimer = setTimeout(() => {\n        const focused = document.activeElement;\n\n        // Ignore if current focus element isn't inside the player\n        if (!elements.container.contains(focused)) {\n          return;\n        }\n\n        toggleClass(document.activeElement, player.config.classNames.tabFocus, true);\n      }, 10);\n    }\n  };\n\n  // Global window & document listeners\n  global = (toggle = true) => {\n    const { player } = this;\n\n    // Keyboard shortcuts\n    if (player.config.keyboard.global) {\n      toggleListener.call(player, window, 'keydown keyup', this.handleKey, toggle, false);\n    }\n\n    // Click anywhere closes menu\n    toggleListener.call(player, document.body, 'click', this.toggleMenu, toggle);\n\n    // Detect touch by events\n    once.call(player, document.body, 'touchstart', this.firstTouch);\n\n    // Tab focus detection\n    toggleListener.call(player, document.body, 'keydown focus blur focusout', this.setTabFocus, toggle, false, true);\n  };\n\n  // Container listeners\n  container = () => {\n    const { player } = this;\n    const { config, elements, timers } = player;\n\n    // Keyboard shortcuts\n    if (!config.keyboard.global && config.keyboard.focused) {\n      on.call(player, elements.container, 'keydown keyup', this.handleKey, false);\n    }\n\n    // Toggle controls on mouse events and entering fullscreen\n    on.call(\n      player,\n      elements.container,\n      'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen',\n      (event) => {\n        const { controls: controlsElement } = elements;\n\n        // Remove button states for fullscreen\n        if (controlsElement && event.type === 'enterfullscreen') {\n          controlsElement.pressed = false;\n          controlsElement.hover = false;\n        }\n\n        // Show, then hide after a timeout unless another control event occurs\n        const show = ['touchstart', 'touchmove', 'mousemove'].includes(event.type);\n        let delay = 0;\n\n        if (show) {\n          ui.toggleControls.call(player, true);\n          // Use longer timeout for touch devices\n          delay = player.touch ? 3000 : 2000;\n        }\n\n        // Clear timer\n        clearTimeout(timers.controls);\n\n        // Set new timer to prevent flicker when seeking\n        timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\n      },\n    );\n\n    // Set a gutter for Vimeo\n    const setGutter = () => {\n      if (!player.isVimeo || player.config.vimeo.premium) {\n        return;\n      }\n\n      const target = elements.wrapper;\n      const { active } = player.fullscreen;\n      const [videoWidth, videoHeight] = getAspectRatio.call(player);\n      const useNativeAspectRatio = supportsCSS(`aspect-ratio: ${videoWidth} / ${videoHeight}`);\n\n      // If not active, remove styles\n      if (!active) {\n        if (useNativeAspectRatio) {\n          target.style.width = null;\n          target.style.height = null;\n        } else {\n          target.style.maxWidth = null;\n          target.style.margin = null;\n        }\n        return;\n      }\n\n      // Determine which dimension will overflow and constrain view\n      const [viewportWidth, viewportHeight] = getViewportSize();\n      const overflow = viewportWidth / viewportHeight > videoWidth / videoHeight;\n\n      if (useNativeAspectRatio) {\n        target.style.width = overflow ? 'auto' : '100%';\n        target.style.height = overflow ? '100%' : 'auto';\n      } else {\n        target.style.maxWidth = overflow ? `${(viewportHeight / videoHeight) * videoWidth}px` : null;\n        target.style.margin = overflow ? '0 auto' : null;\n      }\n    };\n\n    // Handle resizing\n    const resized = () => {\n      clearTimeout(timers.resized);\n      timers.resized = setTimeout(setGutter, 50);\n    };\n\n    on.call(player, elements.container, 'enterfullscreen exitfullscreen', (event) => {\n      const { target } = player.fullscreen;\n\n      // Ignore events not from target\n      if (target !== elements.container) {\n        return;\n      }\n\n      // If it's not an embed and no ratio specified\n      if (!player.isEmbed && is.empty(player.config.ratio)) {\n        return;\n      }\n\n      // Set Vimeo gutter\n      setGutter();\n\n      // Watch for resizes\n      const method = event.type === 'enterfullscreen' ? on : off;\n      method.call(player, window, 'resize', resized);\n    });\n  };\n\n  // Listen for media events\n  media = () => {\n    const { player } = this;\n    const { elements } = player;\n\n    // Time change on media\n    on.call(player, player.media, 'timeupdate seeking seeked', (event) => controls.timeUpdate.call(player, event));\n\n    // Display duration\n    on.call(player, player.media, 'durationchange loadeddata loadedmetadata', (event) =>\n      controls.durationUpdate.call(player, event),\n    );\n\n    // Handle the media finishing\n    on.call(player, player.media, 'ended', () => {\n      // Show poster on end\n      if (player.isHTML5 && player.isVideo && player.config.resetOnEnd) {\n        // Restart\n        player.restart();\n\n        // Call pause otherwise IE11 will start playing the video again\n        player.pause();\n      }\n    });\n\n    // Check for buffer progress\n    on.call(player, player.media, 'progress playing seeking seeked', (event) =>\n      controls.updateProgress.call(player, event),\n    );\n\n    // Handle volume changes\n    on.call(player, player.media, 'volumechange', (event) => controls.updateVolume.call(player, event));\n\n    // Handle play/pause\n    on.call(player, player.media, 'playing play pause ended emptied timeupdate', (event) =>\n      ui.checkPlaying.call(player, event),\n    );\n\n    // Loading state\n    on.call(player, player.media, 'waiting canplay seeked playing', (event) => ui.checkLoading.call(player, event));\n\n    // Click video\n    if (player.supported.ui && player.config.clickToPlay && !player.isAudio) {\n      // Re-fetch the wrapper\n      const wrapper = getElement.call(player, `.${player.config.classNames.video}`);\n\n      // Bail if there's no wrapper (this should never happen)\n      if (!is.element(wrapper)) {\n        return;\n      }\n\n      // On click play, pause or restart\n      on.call(player, elements.container, 'click', (event) => {\n        const targets = [elements.container, wrapper];\n\n        // Ignore if click if not container or in video wrapper\n        if (!targets.includes(event.target) && !wrapper.contains(event.target)) {\n          return;\n        }\n\n        // Touch devices will just show controls (if hidden)\n        if (player.touch && player.config.hideControls) {\n          return;\n        }\n\n        if (player.ended) {\n          this.proxy(event, player.restart, 'restart');\n          this.proxy(\n            event,\n            () => {\n              silencePromise(player.play());\n            },\n            'play',\n          );\n        } else {\n          this.proxy(\n            event,\n            () => {\n              silencePromise(player.togglePlay());\n            },\n            'play',\n          );\n        }\n      });\n    }\n\n    // Disable right click\n    if (player.supported.ui && player.config.disableContextMenu) {\n      on.call(\n        player,\n        elements.wrapper,\n        'contextmenu',\n        (event) => {\n          event.preventDefault();\n        },\n        false,\n      );\n    }\n\n    // Volume change\n    on.call(player, player.media, 'volumechange', () => {\n      // Save to storage\n      player.storage.set({\n        volume: player.volume,\n        muted: player.muted,\n      });\n    });\n\n    // Speed change\n    on.call(player, player.media, 'ratechange', () => {\n      // Update UI\n      controls.updateSetting.call(player, 'speed');\n\n      // Save to storage\n      player.storage.set({ speed: player.speed });\n    });\n\n    // Quality change\n    on.call(player, player.media, 'qualitychange', (event) => {\n      // Update UI\n      controls.updateSetting.call(player, 'quality', null, event.detail.quality);\n    });\n\n    // Update download link when ready and if quality changes\n    on.call(player, player.media, 'ready qualitychange', () => {\n      controls.setDownloadUrl.call(player);\n    });\n\n    // Proxy events to container\n    // Bubble up key events for Edge\n    const proxyEvents = player.config.events.concat(['keyup', 'keydown']).join(' ');\n\n    on.call(player, player.media, proxyEvents, (event) => {\n      let { detail = {} } = event;\n\n      // Get error details from media\n      if (event.type === 'error') {\n        detail = player.media.error;\n      }\n\n      triggerEvent.call(player, elements.container, event.type, true, detail);\n    });\n  };\n\n  // Run default and custom handlers\n  proxy = (event, defaultHandler, customHandlerKey) => {\n    const { player } = this;\n    const customHandler = player.config.listeners[customHandlerKey];\n    const hasCustomHandler = is.function(customHandler);\n    let returned = true;\n\n    // Execute custom handler\n    if (hasCustomHandler) {\n      returned = customHandler.call(player, event);\n    }\n\n    // Only call default handler if not prevented in custom handler\n    if (returned !== false && is.function(defaultHandler)) {\n      defaultHandler.call(player, event);\n    }\n  };\n\n  // Trigger custom and default handlers\n  bind = (element, type, defaultHandler, customHandlerKey, passive = true) => {\n    const { player } = this;\n    const customHandler = player.config.listeners[customHandlerKey];\n    const hasCustomHandler = is.function(customHandler);\n\n    on.call(\n      player,\n      element,\n      type,\n      (event) => this.proxy(event, defaultHandler, customHandlerKey),\n      passive && !hasCustomHandler,\n    );\n  };\n\n  // Listen for control events\n  controls = () => {\n    const { player } = this;\n    const { elements } = player;\n    // NOTE: Currently only using change to avoid indirect over-eager segment fetch\n    // requests for HTTP Adaptive Streaming cases, since 'change' will only fire\n    // after the thumb is released for an input[type=range] (CJP).\n    const inputEvent = 'change';\n\n    // Play/pause toggle\n    if (elements.buttons.play) {\n      Array.from(elements.buttons.play).forEach((button) => {\n        this.bind(\n          button,\n          'click',\n          () => {\n            silencePromise(player.togglePlay());\n          },\n          'play',\n        );\n      });\n    }\n\n    // Pause\n    this.bind(elements.buttons.restart, 'click', player.restart, 'restart');\n\n    // Rewind\n    this.bind(\n      elements.buttons.rewind,\n      'click',\n      () => {\n        // Record seek time so we can prevent hiding controls for a few seconds after rewind\n        player.lastSeekTime = Date.now();\n        player.rewind();\n      },\n      'rewind',\n    );\n\n    // Rewind\n    this.bind(\n      elements.buttons.fastForward,\n      'click',\n      () => {\n        // Record seek time so we can prevent hiding controls for a few seconds after fast forward\n        player.lastSeekTime = Date.now();\n        player.forward();\n      },\n      'fastForward',\n    );\n\n    // Mute toggle\n    this.bind(\n      elements.buttons.mute,\n      'click',\n      () => {\n        player.muted = !player.muted;\n      },\n      'mute',\n    );\n\n    // Captions toggle\n    this.bind(elements.buttons.captions, 'click', () => player.toggleCaptions());\n\n    // Download\n    this.bind(\n      elements.buttons.download,\n      'click',\n      () => {\n        triggerEvent.call(player, player.media, 'download');\n      },\n      'download',\n    );\n\n    // Fullscreen toggle\n    this.bind(\n      elements.buttons.fullscreen,\n      'click',\n      () => {\n        player.fullscreen.toggle();\n      },\n      'fullscreen',\n    );\n\n    // Picture-in-Picture\n    this.bind(\n      elements.buttons.pip,\n      'click',\n      () => {\n        player.pip = 'toggle';\n      },\n      'pip',\n    );\n\n    // Airplay\n    this.bind(elements.buttons.airplay, 'click', player.airplay, 'airplay');\n\n    // Settings menu - click toggle\n    this.bind(\n      elements.buttons.settings,\n      'click',\n      (event) => {\n        // Prevent the document click listener closing the menu\n        event.stopPropagation();\n        event.preventDefault();\n\n        controls.toggleMenu.call(player, event);\n      },\n      null,\n      false,\n    ); // Can't be passive as we're preventing default\n\n    // Settings menu - keyboard toggle\n    // We have to bind to keyup otherwise Firefox triggers a click when a keydown event handler shifts focus\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n    this.bind(\n      elements.buttons.settings,\n      'keyup',\n      (event) => {\n        if (![' ', 'Enter'].includes(event.key)) {\n          return;\n        }\n\n        // Because return triggers a click anyway, all we need to do is set focus\n        if (event.key === 'Enter') {\n          controls.focusFirstMenuItem.call(player, null, true);\n          return;\n        }\n\n        // Prevent scroll\n        event.preventDefault();\n\n        // Prevent playing video (Firefox)\n        event.stopPropagation();\n\n        // Toggle menu\n        controls.toggleMenu.call(player, event);\n      },\n      null,\n      false, // Can't be passive as we're preventing default\n    );\n\n    // Escape closes menu\n    this.bind(elements.settings.menu, 'keydown', (event) => {\n      if (event.key === 'Escape') {\n        controls.toggleMenu.call(player, event);\n      }\n    });\n\n    // Set range input alternative \"value\", which matches the tooltip time (#954)\n    this.bind(elements.inputs.seek, 'mousedown mousemove', (event) => {\n      const rect = elements.progress.getBoundingClientRect();\n      const percent = (100 / rect.width) * (event.pageX - rect.left);\n      event.currentTarget.setAttribute('seek-value', percent);\n    });\n\n    // Pause while seeking\n    this.bind(elements.inputs.seek, 'mousedown mouseup keydown keyup touchstart touchend', (event) => {\n      const seek = event.currentTarget;\n      const attribute = 'play-on-seeked';\n\n      if (is.keyboardEvent(event) && !['ArrowLeft', 'ArrowRight'].includes(event.key)) {\n        return;\n      }\n\n      // Record seek time so we can prevent hiding controls for a few seconds after seek\n      player.lastSeekTime = Date.now();\n\n      // Was playing before?\n      const play = seek.hasAttribute(attribute);\n      // Done seeking\n      const done = ['mouseup', 'touchend', 'keyup'].includes(event.type);\n      // Copy of code from seek input bind\n      let seekTo = seek.getAttribute('seek-value');\n\n      if (is.empty(seekTo)) {\n        seekTo = seek.value;\n      }\n\n      seek.removeAttribute('seek-value');\n\n      player.currentTime = (seekTo / seek.max) * player.duration;\n\n      // If we're done seeking and it was playing, resume playback\n      if (play && done) {\n        seek.removeAttribute(attribute);\n        silencePromise(player.play());\n      } else if (!done && player.playing) {\n        seek.setAttribute(attribute, '');\n        player.pause();\n      }\n    });\n\n    // Fix range inputs on iOS\n    // Super weird iOS bug where after you interact with an <input type=\"range\">,\n    // it takes over further interactions on the page. This is a hack\n    if (browser.isIos) {\n      const inputs = getElements.call(player, 'input[type=\"range\"]');\n      Array.from(inputs).forEach((input) => this.bind(input, inputEvent, (event) => repaint(event.target)));\n    }\n\n    // Seek\n    this.bind(\n      elements.inputs.seek,\n      inputEvent,\n      (event) => {\n        const seek = event.currentTarget;\n        // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\n        let seekTo = seek.getAttribute('seek-value');\n\n        if (is.empty(seekTo)) {\n          seekTo = seek.value;\n        }\n\n        seek.removeAttribute('seek-value');\n\n        player.currentTime = (seekTo / seek.max) * player.duration;\n      },\n      'seek',\n    );\n\n    // Seek tooltip\n    this.bind(elements.progress, 'mouseenter mouseleave mousemove', (event) =>\n      controls.updateSeekTooltip.call(player, event),\n    );\n\n    // Preview thumbnails plugin\n    // TODO: Really need to work on some sort of plug-in wide event bus or pub-sub for this\n    this.bind(elements.progress, 'mousemove touchmove', (event) => {\n      const { previewThumbnails } = player;\n\n      if (previewThumbnails && previewThumbnails.loaded) {\n        previewThumbnails.startMove(event);\n      }\n    });\n\n    // Hide thumbnail preview - on mouse click, mouse leave, and video play/seek. All four are required, e.g., for buffering\n    this.bind(elements.progress, 'mouseleave touchend click', () => {\n      const { previewThumbnails } = player;\n\n      if (previewThumbnails && previewThumbnails.loaded) {\n        previewThumbnails.endMove(false, true);\n      }\n    });\n\n    // Show scrubbing preview\n    this.bind(elements.progress, 'mousedown touchstart', (event) => {\n      const { previewThumbnails } = player;\n\n      if (previewThumbnails && previewThumbnails.loaded) {\n        previewThumbnails.startScrubbing(event);\n      }\n    });\n\n    this.bind(elements.progress, 'mouseup touchend', (event) => {\n      const { previewThumbnails } = player;\n\n      if (previewThumbnails && previewThumbnails.loaded) {\n        previewThumbnails.endScrubbing(event);\n      }\n    });\n\n    // Polyfill for lower fill in <input type=\"range\"> for webkit\n    if (browser.isWebkit) {\n      Array.from(getElements.call(player, 'input[type=\"range\"]')).forEach((element) => {\n        this.bind(element, 'input', (event) => controls.updateRangeFill.call(player, event.target));\n      });\n    }\n\n    // Current time invert\n    // Only if one time element is used for both currentTime and duration\n    if (player.config.toggleInvert && !is.element(elements.display.duration)) {\n      this.bind(elements.display.currentTime, 'click', () => {\n        // Do nothing if we're at the start\n        if (player.currentTime === 0) {\n          return;\n        }\n\n        player.config.invertTime = !player.config.invertTime;\n\n        controls.timeUpdate.call(player);\n      });\n    }\n\n    // Volume\n    this.bind(\n      elements.inputs.volume,\n      inputEvent,\n      (event) => {\n        player.volume = event.target.value;\n      },\n      'volume',\n    );\n\n    // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\n    this.bind(elements.controls, 'mouseenter mouseleave', (event) => {\n      elements.controls.hover = !player.touch && event.type === 'mouseenter';\n    });\n\n    // Also update controls.hover state for any non-player children of fullscreen element (as above)\n    if (elements.fullscreen) {\n      Array.from(elements.fullscreen.children)\n        .filter((c) => !c.contains(elements.container))\n        .forEach((child) => {\n          this.bind(child, 'mouseenter mouseleave', (event) => {\n            if (elements.controls) {\n              elements.controls.hover = !player.touch && event.type === 'mouseenter';\n            }\n          });\n        });\n    }\n\n    // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\n    this.bind(elements.controls, 'mousedown mouseup touchstart touchend touchcancel', (event) => {\n      elements.controls.pressed = ['mousedown', 'touchstart'].includes(event.type);\n    });\n\n    // Show controls when they receive focus (e.g., when using keyboard tab key)\n    this.bind(elements.controls, 'focusin', () => {\n      const { config, timers } = player;\n\n      // Skip transition to prevent focus from scrolling the parent element\n      toggleClass(elements.controls, config.classNames.noTransition, true);\n\n      // Toggle\n      ui.toggleControls.call(player, true);\n\n      // Restore transition\n      setTimeout(() => {\n        toggleClass(elements.controls, config.classNames.noTransition, false);\n      }, 0);\n\n      // Delay a little more for mouse users\n      const delay = this.touch ? 3000 : 4000;\n\n      // Clear timer\n      clearTimeout(timers.controls);\n\n      // Hide again after delay\n      timers.controls = setTimeout(() => ui.toggleControls.call(player, false), delay);\n    });\n\n    // Mouse wheel for volume\n    this.bind(\n      elements.inputs.volume,\n      'wheel',\n      (event) => {\n        // Detect \"natural\" scroll - supported on OS X Safari only\n        // Other browsers on OS X will be inverted until support improves\n        const inverted = event.webkitDirectionInvertedFromDevice;\n        // Get delta from event. Invert if `inverted` is true\n        const [x, y] = [event.deltaX, -event.deltaY].map((value) => (inverted ? -value : value));\n        // Using the biggest delta, normalize to 1 or -1 (or 0 if no delta)\n        const direction = Math.sign(Math.abs(x) > Math.abs(y) ? x : y);\n\n        // Change the volume by 2%\n        player.increaseVolume(direction / 50);\n\n        // Don't break page scrolling at max and min\n        const { volume } = player.media;\n        if ((direction === 1 && volume < 1) || (direction === -1 && volume > 0)) {\n          event.preventDefault();\n        }\n      },\n      'volume',\n      false,\n    );\n  };\n}\n\nexport default Listeners;\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathname = path.replace(/[\\?|#].*$/, ''),\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isLegacyIECss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(pathname)) {\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped;\n\n    // tag IE9+\n    isLegacyIECss = 'hideFocus' in e;\n\n    // use preload in IE Edge (to detect load errors)\n    if (isLegacyIECss && e.relList) {\n      isLegacyIECss = 0;\n      e.rel = 'preload';\n      e.as = 'style';\n    }\n  } else if (/(^img!|\\.(png|gif|jpg|svg|webp)$)/.test(pathname)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // treat empty stylesheets as failures to get around lack of onerror\n    // support in IE9-11\n    if (isLegacyIECss) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText` (unless error is Code:18 SecurityError)\n        if (x.code != 18) result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    } else if (e.rel == 'preload' && e.as == 'style') {\n      // activate preloaded stylesheets\n      return e.rel = 'stylesheet'; // jshint ignore:line\n    }\n    \n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function|Object)} [arg1] - The (1) bundleId or (2) success\n *   callback or (3) object literal with success/error arguments, numRetries,\n *   etc.\n * @param {(Function|Object)} [arg2] - The (1) success callback or (2) object\n *   literal with success/error arguments, numRetries, etc.\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  function loadFn(resolve, reject) {\n    loadFiles(paths, function (pathsNotFound) {\n      // execute callbacks\n      executeCallbacks(args, pathsNotFound);\n      \n      // resolve Promise\n      if (resolve) {\n        executeCallbacks({success: resolve, error: reject}, pathsNotFound);\n      }\n\n      // publish bundle load event\n      publish(bundleId, pathsNotFound);\n    }, args);\n  }\n  \n  if (args.returnPromise) return new Promise(loadFn);\n  else loadFn();\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","// ==========================================================================\n// Load an external script\n// ==========================================================================\n\nimport loadjs from 'loadjs';\n\nexport default function loadScript(url) {\n  return new Promise((resolve, reject) => {\n    loadjs(url, {\n      success: resolve,\n      error: reject,\n    });\n  });\n}\n","// ==========================================================================\n// Vimeo plugin\n// ==========================================================================\n\nimport captions from '../captions';\nimport controls from '../controls';\nimport ui from '../ui';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadScript from '../utils/load-script';\nimport { format, stripHTML } from '../utils/strings';\nimport { roundAspectRatio, setAspectRatio } from '../utils/style';\nimport { buildUrlParams } from '../utils/urls';\n\n// Parse Vimeo ID from URL\nfunction parseId(url) {\n  if (is.empty(url)) {\n    return null;\n  }\n\n  if (is.number(Number(url))) {\n    return url;\n  }\n\n  const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n  return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Try to extract a hash for private videos from the URL\nfunction parseHash(url) {\n  /* This regex matches a hexadecimal hash if given in any of these forms:\n   *  - [https://player.]vimeo.com/video/{id}/{hash}[?params]\n   *  - [https://player.]vimeo.com/video/{id}?h={hash}[&params]\n   *  - [https://player.]vimeo.com/video/{id}?[params]&h={hash}\n   *  - video/{id}/{hash}\n   * If matched, the hash is available in capture group 4\n   */\n  const regex = /^.*(vimeo.com\\/|video\\/)(\\d+)(\\?.*&*h=|\\/)+([\\d,a-f]+)/;\n  const found = url.match(regex);\n\n  return found && found.length === 5 ? found[4] : null;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n  if (play && !this.embed.hasPlayed) {\n    this.embed.hasPlayed = true;\n  }\n  if (this.media.paused === play) {\n    this.media.paused = !play;\n    triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n  }\n}\n\nconst vimeo = {\n  setup() {\n    const player = this;\n\n    // Add embed class for responsive\n    toggleClass(player.elements.wrapper, player.config.classNames.embed, true);\n\n    // Set speed options from config\n    player.options.speed = player.config.speed.options;\n\n    // Set intial ratio\n    setAspectRatio.call(player);\n\n    // Load the SDK if not already\n    if (!is.object(window.Vimeo)) {\n      loadScript(player.config.urls.vimeo.sdk)\n        .then(() => {\n          vimeo.ready.call(player);\n        })\n        .catch((error) => {\n          player.debug.warn('Vimeo SDK (player.js) failed to load', error);\n        });\n    } else {\n      vimeo.ready.call(player);\n    }\n  },\n\n  // API Ready\n  ready() {\n    const player = this;\n    const config = player.config.vimeo;\n    const { premium, referrerPolicy, ...frameParams } = config;\n    // Get the source URL or ID\n    let source = player.media.getAttribute('src');\n    let hash = '';\n    // Get from <div> if needed\n    if (is.empty(source)) {\n      source = player.media.getAttribute(player.config.attributes.embed.id);\n      // hash can also be set as attribute on the <div>\n      hash = player.media.getAttribute(player.config.attributes.embed.hash);\n    } else {\n      hash = parseHash(source);\n    }\n    const hashParam = hash ? { h: hash } : {};\n\n    // If the owner has a pro or premium account then we can hide controls etc\n    if (premium) {\n      Object.assign(frameParams, {\n        controls: false,\n        sidedock: false,\n      });\n    }\n\n    // Get Vimeo params for the iframe\n    const params = buildUrlParams({\n      loop: player.config.loop.active,\n      autoplay: player.autoplay,\n      muted: player.muted,\n      gesture: 'media',\n      playsinline: !this.config.fullscreen.iosNative,\n      // hash has to be added to iframe-URL\n      ...hashParam,\n      ...frameParams,\n    });\n\n    const id = parseId(source);\n    // Build an iframe\n    const iframe = createElement('iframe');\n    const src = format(player.config.urls.vimeo.iframe, id, params);\n    iframe.setAttribute('src', src);\n    iframe.setAttribute('allowfullscreen', '');\n    iframe.setAttribute(\n      'allow',\n      ['autoplay', 'fullscreen', 'picture-in-picture', 'encrypted-media', 'accelerometer', 'gyroscope'].join('; '),\n    );\n\n    // Set the referrer policy if required\n    if (!is.empty(referrerPolicy)) {\n      iframe.setAttribute('referrerPolicy', referrerPolicy);\n    }\n\n    // Inject the package\n    if (premium || !config.customControls) {\n      iframe.setAttribute('data-poster', player.poster);\n      player.media = replaceElement(iframe, player.media);\n    } else {\n      const wrapper = createElement('div', {\n        class: player.config.classNames.embedContainer,\n        'data-poster': player.poster,\n      });\n      wrapper.appendChild(iframe);\n      player.media = replaceElement(wrapper, player.media);\n    }\n\n    // Get poster image\n    if (!config.customControls) {\n      fetch(format(player.config.urls.vimeo.api, src)).then((response) => {\n        if (is.empty(response) || !response.thumbnail_url) {\n          return;\n        }\n\n        // Set and show poster\n        ui.setPoster.call(player, response.thumbnail_url).catch(() => {});\n      });\n    }\n\n    // Setup instance\n    // https://github.com/vimeo/player.js\n    player.embed = new window.Vimeo.Player(iframe, {\n      autopause: player.config.autopause,\n      muted: player.muted,\n    });\n\n    player.media.paused = true;\n    player.media.currentTime = 0;\n\n    // Disable native text track rendering\n    if (player.supported.ui) {\n      player.embed.disableTextTrack();\n    }\n\n    // Create a faux HTML5 API using the Vimeo API\n    player.media.play = () => {\n      assurePlaybackState.call(player, true);\n      return player.embed.play();\n    };\n\n    player.media.pause = () => {\n      assurePlaybackState.call(player, false);\n      return player.embed.pause();\n    };\n\n    player.media.stop = () => {\n      player.pause();\n      player.currentTime = 0;\n    };\n\n    // Seeking\n    let { currentTime } = player.media;\n    Object.defineProperty(player.media, 'currentTime', {\n      get() {\n        return currentTime;\n      },\n      set(time) {\n        // Vimeo will automatically play on seek if the video hasn't been played before\n\n        // Get current paused state and volume etc\n        const { embed, media, paused, volume } = player;\n        const restorePause = paused && !embed.hasPlayed;\n\n        // Set seeking state and trigger event\n        media.seeking = true;\n        triggerEvent.call(player, media, 'seeking');\n\n        // If paused, mute until seek is complete\n        Promise.resolve(restorePause && embed.setVolume(0))\n          // Seek\n          .then(() => embed.setCurrentTime(time))\n          // Restore paused\n          .then(() => restorePause && embed.pause())\n          // Restore volume\n          .then(() => restorePause && embed.setVolume(volume))\n          .catch(() => {\n            // Do nothing\n          });\n      },\n    });\n\n    // Playback speed\n    let speed = player.config.speed.selected;\n    Object.defineProperty(player.media, 'playbackRate', {\n      get() {\n        return speed;\n      },\n      set(input) {\n        player.embed\n          .setPlaybackRate(input)\n          .then(() => {\n            speed = input;\n            triggerEvent.call(player, player.media, 'ratechange');\n          })\n          .catch(() => {\n            // Cannot set Playback Rate, Video is probably not on Pro account\n            player.options.speed = [1];\n          });\n      },\n    });\n\n    // Volume\n    let { volume } = player.config;\n    Object.defineProperty(player.media, 'volume', {\n      get() {\n        return volume;\n      },\n      set(input) {\n        player.embed.setVolume(input).then(() => {\n          volume = input;\n          triggerEvent.call(player, player.media, 'volumechange');\n        });\n      },\n    });\n\n    // Muted\n    let { muted } = player.config;\n    Object.defineProperty(player.media, 'muted', {\n      get() {\n        return muted;\n      },\n      set(input) {\n        const toggle = is.boolean(input) ? input : false;\n\n        player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\n          muted = toggle;\n          triggerEvent.call(player, player.media, 'volumechange');\n        });\n      },\n    });\n\n    // Loop\n    let { loop } = player.config;\n    Object.defineProperty(player.media, 'loop', {\n      get() {\n        return loop;\n      },\n      set(input) {\n        const toggle = is.boolean(input) ? input : player.config.loop.active;\n\n        player.embed.setLoop(toggle).then(() => {\n          loop = toggle;\n        });\n      },\n    });\n\n    // Source\n    let currentSrc;\n    player.embed\n      .getVideoUrl()\n      .then((value) => {\n        currentSrc = value;\n        controls.setDownloadUrl.call(player);\n      })\n      .catch((error) => {\n        this.debug.warn(error);\n      });\n\n    Object.defineProperty(player.media, 'currentSrc', {\n      get() {\n        return currentSrc;\n      },\n    });\n\n    // Ended\n    Object.defineProperty(player.media, 'ended', {\n      get() {\n        return player.currentTime === player.duration;\n      },\n    });\n\n    // Set aspect ratio based on video size\n    Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then((dimensions) => {\n      const [width, height] = dimensions;\n      player.embed.ratio = roundAspectRatio(width, height);\n      setAspectRatio.call(this);\n    });\n\n    // Set autopause\n    player.embed.setAutopause(player.config.autopause).then((state) => {\n      player.config.autopause = state;\n    });\n\n    // Get title\n    player.embed.getVideoTitle().then((title) => {\n      player.config.title = title;\n      ui.setTitle.call(this);\n    });\n\n    // Get current time\n    player.embed.getCurrentTime().then((value) => {\n      currentTime = value;\n      triggerEvent.call(player, player.media, 'timeupdate');\n    });\n\n    // Get duration\n    player.embed.getDuration().then((value) => {\n      player.media.duration = value;\n      triggerEvent.call(player, player.media, 'durationchange');\n    });\n\n    // Get captions\n    player.embed.getTextTracks().then((tracks) => {\n      player.media.textTracks = tracks;\n      captions.setup.call(player);\n    });\n\n    player.embed.on('cuechange', ({ cues = [] }) => {\n      const strippedCues = cues.map((cue) => stripHTML(cue.text));\n      captions.updateCues.call(player, strippedCues);\n    });\n\n    player.embed.on('loaded', () => {\n      // Assure state and events are updated on autoplay\n      player.embed.getPaused().then((paused) => {\n        assurePlaybackState.call(player, !paused);\n        if (!paused) {\n          triggerEvent.call(player, player.media, 'playing');\n        }\n      });\n\n      if (is.element(player.embed.element) && player.supported.ui) {\n        const frame = player.embed.element;\n\n        // Fix keyboard focus issues\n        // https://github.com/sampotts/plyr/issues/317\n        frame.setAttribute('tabindex', -1);\n      }\n    });\n\n    player.embed.on('bufferstart', () => {\n      triggerEvent.call(player, player.media, 'waiting');\n    });\n\n    player.embed.on('bufferend', () => {\n      triggerEvent.call(player, player.media, 'playing');\n    });\n\n    player.embed.on('play', () => {\n      assurePlaybackState.call(player, true);\n      triggerEvent.call(player, player.media, 'playing');\n    });\n\n    player.embed.on('pause', () => {\n      assurePlaybackState.call(player, false);\n    });\n\n    player.embed.on('timeupdate', (data) => {\n      player.media.seeking = false;\n      currentTime = data.seconds;\n      triggerEvent.call(player, player.media, 'timeupdate');\n    });\n\n    player.embed.on('progress', (data) => {\n      player.media.buffered = data.percent;\n      triggerEvent.call(player, player.media, 'progress');\n\n      // Check all loaded\n      if (parseInt(data.percent, 10) === 1) {\n        triggerEvent.call(player, player.media, 'canplaythrough');\n      }\n\n      // Get duration as if we do it before load, it gives an incorrect value\n      // https://github.com/sampotts/plyr/issues/891\n      player.embed.getDuration().then((value) => {\n        if (value !== player.media.duration) {\n          player.media.duration = value;\n          triggerEvent.call(player, player.media, 'durationchange');\n        }\n      });\n    });\n\n    player.embed.on('seeked', () => {\n      player.media.seeking = false;\n      triggerEvent.call(player, player.media, 'seeked');\n    });\n\n    player.embed.on('ended', () => {\n      player.media.paused = true;\n      triggerEvent.call(player, player.media, 'ended');\n    });\n\n    player.embed.on('error', (detail) => {\n      player.media.error = detail;\n      triggerEvent.call(player, player.media, 'error');\n    });\n\n    // Rebuild UI\n    if (config.customControls) {\n      setTimeout(() => ui.build.call(player), 0);\n    }\n  },\n};\n\nexport default vimeo;\n","// ==========================================================================\n// YouTube plugin\n// ==========================================================================\n\nimport ui from '../ui';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadImage from '../utils/load-image';\nimport loadScript from '../utils/load-script';\nimport { extend } from '../utils/objects';\nimport { format, generateId } from '../utils/strings';\nimport { roundAspectRatio, setAspectRatio } from '../utils/style';\n\n// Parse YouTube ID from URL\nfunction parseId(url) {\n  if (is.empty(url)) {\n    return null;\n  }\n\n  const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n  return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n  if (play && !this.embed.hasPlayed) {\n    this.embed.hasPlayed = true;\n  }\n  if (this.media.paused === play) {\n    this.media.paused = !play;\n    triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n  }\n}\n\nfunction getHost(config) {\n  if (config.noCookie) {\n    return 'https://www.youtube-nocookie.com';\n  }\n\n  if (window.location.protocol === 'http:') {\n    return 'http://www.youtube.com';\n  }\n\n  // Use YouTube's default\n  return undefined;\n}\n\nconst youtube = {\n  setup() {\n    // Add embed class for responsive\n    toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n    // Setup API\n    if (is.object(window.YT) && is.function(window.YT.Player)) {\n      youtube.ready.call(this);\n    } else {\n      // Reference current global callback\n      const callback = window.onYouTubeIframeAPIReady;\n\n      // Set callback to process queue\n      window.onYouTubeIframeAPIReady = () => {\n        // Call global callback if set\n        if (is.function(callback)) {\n          callback();\n        }\n\n        youtube.ready.call(this);\n      };\n\n      // Load the SDK\n      loadScript(this.config.urls.youtube.sdk).catch((error) => {\n        this.debug.warn('YouTube API failed to load', error);\n      });\n    }\n  },\n\n  // Get the media title\n  getTitle(videoId) {\n    const url = format(this.config.urls.youtube.api, videoId);\n\n    fetch(url)\n      .then((data) => {\n        if (is.object(data)) {\n          const { title, height, width } = data;\n\n          // Set title\n          this.config.title = title;\n          ui.setTitle.call(this);\n\n          // Set aspect ratio\n          this.embed.ratio = roundAspectRatio(width, height);\n        }\n\n        setAspectRatio.call(this);\n      })\n      .catch(() => {\n        // Set aspect ratio\n        setAspectRatio.call(this);\n      });\n  },\n\n  // API ready\n  ready() {\n    const player = this;\n    const config = player.config.youtube;\n    // Ignore already setup (race condition)\n    const currentId = player.media && player.media.getAttribute('id');\n    if (!is.empty(currentId) && currentId.startsWith('youtube-')) {\n      return;\n    }\n\n    // Get the source URL or ID\n    let source = player.media.getAttribute('src');\n\n    // Get from <div> if needed\n    if (is.empty(source)) {\n      source = player.media.getAttribute(this.config.attributes.embed.id);\n    }\n\n    // Replace the <iframe> with a <div> due to YouTube API issues\n    const videoId = parseId(source);\n    const id = generateId(player.provider);\n    // Replace media element\n    const container = createElement('div', { id, 'data-poster': config.customControls ? player.poster : undefined });\n    player.media = replaceElement(container, player.media);\n\n    // Only load the poster when using custom controls\n    if (config.customControls) {\n      const posterSrc = (s) => `https://i.ytimg.com/vi/${videoId}/${s}default.jpg`;\n\n      // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\n      loadImage(posterSrc('maxres'), 121) // Higest quality and unpadded\n        .catch(() => loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\n        .catch(() => loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\n        .then((image) => ui.setPoster.call(player, image.src))\n        .then((src) => {\n          // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\n          if (!src.includes('maxres')) {\n            player.elements.poster.style.backgroundSize = 'cover';\n          }\n        })\n        .catch(() => {});\n    }\n\n    // Setup instance\n    // https://developers.google.com/youtube/iframe_api_reference\n    player.embed = new window.YT.Player(player.media, {\n      videoId,\n      host: getHost(config),\n      playerVars: extend(\n        {},\n        {\n          // Autoplay\n          autoplay: player.config.autoplay ? 1 : 0,\n          // iframe interface language\n          hl: player.config.hl,\n          // Only show controls if not fully supported or opted out\n          controls: player.supported.ui && config.customControls ? 0 : 1,\n          // Disable keyboard as we handle it\n          disablekb: 1,\n          // Allow iOS inline playback\n          playsinline: !player.config.fullscreen.iosNative ? 1 : 0,\n          // Captions are flaky on YouTube\n          cc_load_policy: player.captions.active ? 1 : 0,\n          cc_lang_pref: player.config.captions.language,\n          // Tracking for stats\n          widget_referrer: window ? window.location.href : null,\n        },\n        config,\n      ),\n      events: {\n        onError(event) {\n          // YouTube may fire onError twice, so only handle it once\n          if (!player.media.error) {\n            const code = event.data;\n            // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n            const message =\n              {\n                2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\n                5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\n                100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\n                101: 'The owner of the requested video does not allow it to be played in embedded players.',\n                150: 'The owner of the requested video does not allow it to be played in embedded players.',\n              }[code] || 'An unknown error occured';\n\n            player.media.error = { code, message };\n\n            triggerEvent.call(player, player.media, 'error');\n          }\n        },\n        onPlaybackRateChange(event) {\n          // Get the instance\n          const instance = event.target;\n\n          // Get current speed\n          player.media.playbackRate = instance.getPlaybackRate();\n\n          triggerEvent.call(player, player.media, 'ratechange');\n        },\n        onReady(event) {\n          // Bail if onReady has already been called. See issue #1108\n          if (is.function(player.media.play)) {\n            return;\n          }\n          // Get the instance\n          const instance = event.target;\n\n          // Get the title\n          youtube.getTitle.call(player, videoId);\n\n          // Create a faux HTML5 API using the YouTube API\n          player.media.play = () => {\n            assurePlaybackState.call(player, true);\n            instance.playVideo();\n          };\n\n          player.media.pause = () => {\n            assurePlaybackState.call(player, false);\n            instance.pauseVideo();\n          };\n\n          player.media.stop = () => {\n            instance.stopVideo();\n          };\n\n          player.media.duration = instance.getDuration();\n          player.media.paused = true;\n\n          // Seeking\n          player.media.currentTime = 0;\n          Object.defineProperty(player.media, 'currentTime', {\n            get() {\n              return Number(instance.getCurrentTime());\n            },\n            set(time) {\n              // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\n              if (player.paused && !player.embed.hasPlayed) {\n                player.embed.mute();\n              }\n\n              // Set seeking state and trigger event\n              player.media.seeking = true;\n              triggerEvent.call(player, player.media, 'seeking');\n\n              // Seek after events sent\n              instance.seekTo(time);\n            },\n          });\n\n          // Playback speed\n          Object.defineProperty(player.media, 'playbackRate', {\n            get() {\n              return instance.getPlaybackRate();\n            },\n            set(input) {\n              instance.setPlaybackRate(input);\n            },\n          });\n\n          // Volume\n          let { volume } = player.config;\n          Object.defineProperty(player.media, 'volume', {\n            get() {\n              return volume;\n            },\n            set(input) {\n              volume = input;\n              instance.setVolume(volume * 100);\n              triggerEvent.call(player, player.media, 'volumechange');\n            },\n          });\n\n          // Muted\n          let { muted } = player.config;\n          Object.defineProperty(player.media, 'muted', {\n            get() {\n              return muted;\n            },\n            set(input) {\n              const toggle = is.boolean(input) ? input : muted;\n              muted = toggle;\n              instance[toggle ? 'mute' : 'unMute']();\n              instance.setVolume(volume * 100);\n              triggerEvent.call(player, player.media, 'volumechange');\n            },\n          });\n\n          // Source\n          Object.defineProperty(player.media, 'currentSrc', {\n            get() {\n              return instance.getVideoUrl();\n            },\n          });\n\n          // Ended\n          Object.defineProperty(player.media, 'ended', {\n            get() {\n              return player.currentTime === player.duration;\n            },\n          });\n\n          // Get available speeds\n          const speeds = instance.getAvailablePlaybackRates();\n          // Filter based on config\n          player.options.speed = speeds.filter((s) => player.config.speed.options.includes(s));\n\n          // Set the tabindex to avoid focus entering iframe\n          if (player.supported.ui && config.customControls) {\n            player.media.setAttribute('tabindex', -1);\n          }\n\n          triggerEvent.call(player, player.media, 'timeupdate');\n          triggerEvent.call(player, player.media, 'durationchange');\n\n          // Reset timer\n          clearInterval(player.timers.buffering);\n\n          // Setup buffering\n          player.timers.buffering = setInterval(() => {\n            // Get loaded % from YouTube\n            player.media.buffered = instance.getVideoLoadedFraction();\n\n            // Trigger progress only when we actually buffer something\n            if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n              triggerEvent.call(player, player.media, 'progress');\n            }\n\n            // Set last buffer point\n            player.media.lastBuffered = player.media.buffered;\n\n            // Bail if we're at 100%\n            if (player.media.buffered === 1) {\n              clearInterval(player.timers.buffering);\n\n              // Trigger event\n              triggerEvent.call(player, player.media, 'canplaythrough');\n            }\n          }, 200);\n\n          // Rebuild UI\n          if (config.customControls) {\n            setTimeout(() => ui.build.call(player), 50);\n          }\n        },\n        onStateChange(event) {\n          // Get the instance\n          const instance = event.target;\n\n          // Reset timer\n          clearInterval(player.timers.playing);\n\n          const seeked = player.media.seeking && [1, 2].includes(event.data);\n\n          if (seeked) {\n            // Unset seeking and fire seeked event\n            player.media.seeking = false;\n            triggerEvent.call(player, player.media, 'seeked');\n          }\n\n          // Handle events\n          // -1   Unstarted\n          // 0    Ended\n          // 1    Playing\n          // 2    Paused\n          // 3    Buffering\n          // 5    Video cued\n          switch (event.data) {\n            case -1:\n              // Update scrubber\n              triggerEvent.call(player, player.media, 'timeupdate');\n\n              // Get loaded % from YouTube\n              player.media.buffered = instance.getVideoLoadedFraction();\n              triggerEvent.call(player, player.media, 'progress');\n\n              break;\n\n            case 0:\n              assurePlaybackState.call(player, false);\n\n              // YouTube doesn't support loop for a single video, so mimick it.\n              if (player.media.loop) {\n                // YouTube needs a call to `stopVideo` before playing again\n                instance.stopVideo();\n                instance.playVideo();\n              } else {\n                triggerEvent.call(player, player.media, 'ended');\n              }\n\n              break;\n\n            case 1:\n              // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\n              if (config.customControls && !player.config.autoplay && player.media.paused && !player.embed.hasPlayed) {\n                player.media.pause();\n              } else {\n                assurePlaybackState.call(player, true);\n\n                triggerEvent.call(player, player.media, 'playing');\n\n                // Poll to get playback progress\n                player.timers.playing = setInterval(() => {\n                  triggerEvent.call(player, player.media, 'timeupdate');\n                }, 50);\n\n                // Check duration again due to YouTube bug\n                // https://github.com/sampotts/plyr/issues/374\n                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                if (player.media.duration !== instance.getDuration()) {\n                  player.media.duration = instance.getDuration();\n                  triggerEvent.call(player, player.media, 'durationchange');\n                }\n              }\n\n              break;\n\n            case 2:\n              // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\n              if (!player.muted) {\n                player.embed.unMute();\n              }\n              assurePlaybackState.call(player, false);\n\n              break;\n\n            case 3:\n              // Trigger waiting event to add loading classes to container as the video buffers.\n              triggerEvent.call(player, player.media, 'waiting');\n\n              break;\n\n            default:\n              break;\n          }\n\n          triggerEvent.call(player, player.elements.container, 'statechange', false, {\n            code: event.data,\n          });\n        },\n      },\n    });\n  },\n};\n\nexport default youtube;\n","// ==========================================================================\n// Plyr Media\n// ==========================================================================\n\nimport html5 from './html5';\nimport vimeo from './plugins/vimeo';\nimport youtube from './plugins/youtube';\nimport { createElement, toggleClass, wrap } from './utils/elements';\n\nconst media = {\n  // Setup media\n  setup() {\n    // If there's no media, bail\n    if (!this.media) {\n      this.debug.warn('No media element found!');\n      return;\n    }\n\n    // Add type class\n    toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n    // Add provider class\n    toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n    // Add video class for embeds\n    // This will require changes if audio embeds are added\n    if (this.isEmbed) {\n      toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n    }\n\n    // Inject the player wrapper\n    if (this.isVideo) {\n      // Create the wrapper div\n      this.elements.wrapper = createElement('div', {\n        class: this.config.classNames.video,\n      });\n\n      // Wrap the video in a container\n      wrap(this.media, this.elements.wrapper);\n\n      // Poster image container\n      this.elements.poster = createElement('div', {\n        class: this.config.classNames.poster,\n      });\n\n      this.elements.wrapper.appendChild(this.elements.poster);\n    }\n\n    if (this.isHTML5) {\n      html5.setup.call(this);\n    } else if (this.isYouTube) {\n      youtube.setup.call(this);\n    } else if (this.isVimeo) {\n      vimeo.setup.call(this);\n    }\n  },\n};\n\nexport default media;\n","// ==========================================================================\n// Advertisement plugin using Google IMA HTML5 SDK\n// Create an account with our ad partner, vi here:\n// https://www.vi.ai/publisher-video-monetization/\n// ==========================================================================\n\n/* global google */\n\nimport { createElement } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport i18n from '../utils/i18n';\nimport is from '../utils/is';\nimport loadScript from '../utils/load-script';\nimport { silencePromise } from '../utils/promise';\nimport { formatTime } from '../utils/time';\nimport { buildUrlParams } from '../utils/urls';\n\nconst destroy = (instance) => {\n  // Destroy our adsManager\n  if (instance.manager) {\n    instance.manager.destroy();\n  }\n\n  // Destroy our adsManager\n  if (instance.elements.displayContainer) {\n    instance.elements.displayContainer.destroy();\n  }\n\n  instance.elements.container.remove();\n};\n\nclass Ads {\n  /**\n   * Ads constructor.\n   * @param {Object} player\n   * @return {Ads}\n   */\n  constructor(player) {\n    this.player = player;\n    this.config = player.config.ads;\n    this.playing = false;\n    this.initialized = false;\n    this.elements = {\n      container: null,\n      displayContainer: null,\n    };\n    this.manager = null;\n    this.loader = null;\n    this.cuePoints = null;\n    this.events = {};\n    this.safetyTimer = null;\n    this.countdownTimer = null;\n\n    // Setup a promise to resolve when the IMA manager is ready\n    this.managerPromise = new Promise((resolve, reject) => {\n      // The ad is loaded and ready\n      this.on('loaded', resolve);\n\n      // Ads failed\n      this.on('error', reject);\n    });\n\n    this.load();\n  }\n\n  get enabled() {\n    const { config } = this;\n\n    return (\n      this.player.isHTML5 &&\n      this.player.isVideo &&\n      config.enabled &&\n      (!is.empty(config.publisherId) || is.url(config.tagUrl))\n    );\n  }\n\n  /**\n   * Load the IMA SDK\n   */\n  load = () => {\n    if (!this.enabled) {\n      return;\n    }\n\n    // Check if the Google IMA3 SDK is loaded or load it ourselves\n    if (!is.object(window.google) || !is.object(window.google.ima)) {\n      loadScript(this.player.config.urls.googleIMA.sdk)\n        .then(() => {\n          this.ready();\n        })\n        .catch(() => {\n          // Script failed to load or is blocked\n          this.trigger('error', new Error('Google IMA SDK failed to load'));\n        });\n    } else {\n      this.ready();\n    }\n  };\n\n  /**\n   * Get the ads instance ready\n   */\n  ready = () => {\n    // Double check we're enabled\n    if (!this.enabled) {\n      destroy(this);\n    }\n\n    // Start ticking our safety timer. If the whole advertisement\n    // thing doesn't resolve within our set time; we bail\n    this.startSafetyTimer(12000, 'ready()');\n\n    // Clear the safety timer\n    this.managerPromise.then(() => {\n      this.clearSafetyTimer('onAdsManagerLoaded()');\n    });\n\n    // Set listeners on the Plyr instance\n    this.listeners();\n\n    // Setup the IMA SDK\n    this.setupIMA();\n  };\n\n  // Build the tag URL\n  get tagUrl() {\n    const { config } = this;\n\n    if (is.url(config.tagUrl)) {\n      return config.tagUrl;\n    }\n\n    const params = {\n      AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n      AV_CHANNELID: '5a0458dc28a06145e4519d21',\n      AV_URL: window.location.hostname,\n      cb: Date.now(),\n      AV_WIDTH: 640,\n      AV_HEIGHT: 480,\n      AV_CDIM2: config.publisherId,\n    };\n\n    const base = 'https://go.aniview.com/api/adserver6/vast/';\n\n    return `${base}?${buildUrlParams(params)}`;\n  }\n\n  /**\n   * In order for the SDK to display ads for our video, we need to tell it where to put them,\n   * so here we define our ad container. This div is set up to render on top of the video player.\n   * Using the code below, we tell the SDK to render ads within that div. We also provide a\n   * handle to the content video player - the SDK will poll the current time of our player to\n   * properly place mid-rolls. After we create the ad display container, we initialize it. On\n   * mobile devices, this initialization is done as the result of a user action.\n   */\n  setupIMA = () => {\n    // Create the container for our advertisements\n    this.elements.container = createElement('div', {\n      class: this.player.config.classNames.ads,\n    });\n\n    this.player.elements.container.appendChild(this.elements.container);\n\n    // So we can run VPAID2\n    google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n    // Set language\n    google.ima.settings.setLocale(this.player.config.ads.language);\n\n    // Set playback for iOS10+\n    google.ima.settings.setDisableCustomPlaybackForIOS10Plus(this.player.config.playsinline);\n\n    // We assume the adContainer is the video container of the plyr element that will house the ads\n    this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container, this.player.media);\n\n    // Create ads loader\n    this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n    // Listen and respond to ads loaded and error events\n    this.loader.addEventListener(\n      google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n      (event) => this.onAdsManagerLoaded(event),\n      false,\n    );\n    this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, (error) => this.onAdError(error), false);\n\n    // Request video ads to be pre-loaded\n    this.requestAds();\n  };\n\n  /**\n   * Request advertisements\n   */\n  requestAds = () => {\n    const { container } = this.player.elements;\n\n    try {\n      // Request video ads\n      const request = new google.ima.AdsRequest();\n      request.adTagUrl = this.tagUrl;\n\n      // Specify the linear and nonlinear slot sizes. This helps the SDK\n      // to select the correct creative if multiple are returned\n      request.linearAdSlotWidth = container.offsetWidth;\n      request.linearAdSlotHeight = container.offsetHeight;\n      request.nonLinearAdSlotWidth = container.offsetWidth;\n      request.nonLinearAdSlotHeight = container.offsetHeight;\n\n      // We only overlay ads as we only support video.\n      request.forceNonLinearFullSlot = false;\n\n      // Mute based on current state\n      request.setAdWillPlayMuted(!this.player.muted);\n\n      this.loader.requestAds(request);\n    } catch (error) {\n      this.onAdError(error);\n    }\n  };\n\n  /**\n   * Update the ad countdown\n   * @param {Boolean} start\n   */\n  pollCountdown = (start = false) => {\n    if (!start) {\n      clearInterval(this.countdownTimer);\n      this.elements.container.removeAttribute('data-badge-text');\n      return;\n    }\n\n    const update = () => {\n      const time = formatTime(Math.max(this.manager.getRemainingTime(), 0));\n      const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n      this.elements.container.setAttribute('data-badge-text', label);\n    };\n\n    this.countdownTimer = setInterval(update, 100);\n  };\n\n  /**\n   * This method is called whenever the ads are ready inside the AdDisplayContainer\n   * @param {Event} event - adsManagerLoadedEvent\n   */\n  onAdsManagerLoaded = (event) => {\n    // Load could occur after a source change (race condition)\n    if (!this.enabled) {\n      return;\n    }\n\n    // Get the ads manager\n    const settings = new google.ima.AdsRenderingSettings();\n\n    // Tell the SDK to save and restore content video state on our behalf\n    settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n    settings.enablePreloading = true;\n\n    // The SDK is polling currentTime on the contentPlayback. And needs a duration\n    // so it can determine when to start the mid- and post-roll\n    this.manager = event.getAdsManager(this.player, settings);\n\n    // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n    this.cuePoints = this.manager.getCuePoints();\n\n    // Add listeners to the required events\n    // Advertisement error events\n    this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, (error) => this.onAdError(error));\n\n    // Advertisement regular events\n    Object.keys(google.ima.AdEvent.Type).forEach((type) => {\n      this.manager.addEventListener(google.ima.AdEvent.Type[type], (e) => this.onAdEvent(e));\n    });\n\n    // Resolve our adsManager\n    this.trigger('loaded');\n  };\n\n  addCuePoints = () => {\n    // Add advertisement cue's within the time line if available\n    if (!is.empty(this.cuePoints)) {\n      this.cuePoints.forEach((cuePoint) => {\n        if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n          const seekElement = this.player.elements.progress;\n\n          if (is.element(seekElement)) {\n            const cuePercentage = (100 / this.player.duration) * cuePoint;\n            const cue = createElement('span', {\n              class: this.player.config.classNames.cues,\n            });\n\n            cue.style.left = `${cuePercentage.toString()}%`;\n            seekElement.appendChild(cue);\n          }\n        }\n      });\n    }\n  };\n\n  /**\n   * This is where all the event handling takes place. Retrieve the ad from the event. Some\n   * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\n   * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n   * @param {Event} event\n   */\n  onAdEvent = (event) => {\n    const { container } = this.player.elements;\n    // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n    // don't have ad object associated\n    const ad = event.getAd();\n    const adData = event.getAdData();\n\n    // Proxy event\n    const dispatchEvent = (type) => {\n      triggerEvent.call(this.player, this.player.media, `ads${type.replace(/_/g, '').toLowerCase()}`);\n    };\n\n    // Bubble the event\n    dispatchEvent(event.type);\n\n    switch (event.type) {\n      case google.ima.AdEvent.Type.LOADED:\n        // This is the first event sent for an ad - it is possible to determine whether the\n        // ad is a video ad or an overlay\n        this.trigger('loaded');\n\n        // Start countdown\n        this.pollCountdown(true);\n\n        if (!ad.isLinear()) {\n          // Position AdDisplayContainer correctly for overlay\n          ad.width = container.offsetWidth;\n          ad.height = container.offsetHeight;\n        }\n\n        // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n        // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n\n        break;\n\n      case google.ima.AdEvent.Type.STARTED:\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        break;\n\n      case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n        // All ads for the current videos are done. We can now request new advertisements\n        // in case the video is re-played\n\n        // TODO: Example for what happens when a next video in a playlist would be loaded.\n        // So here we load a new video when all ads are done.\n        // Then we load new ads within a new adsManager. When the video\n        // Is started - after - the ads are loaded, then we get ads.\n        // You can also easily test cancelling and reloading by running\n        // player.ads.cancel() and player.ads.play from the console I guess.\n        // this.player.source = {\n        //     type: 'video',\n        //     title: 'View From A Blue Moon',\n        //     sources: [{\n        //         src:\n        // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n        // 'video/mp4', }], poster:\n        // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n        // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n        // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n        // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n        // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n        // };\n\n        // TODO: So there is still this thing where a video should only be allowed to start\n        // playing when the IMA SDK is ready or has failed\n\n        if (this.player.ended) {\n          this.loadAds();\n        } else {\n          // The SDK won't allow new ads to be called without receiving a contentComplete()\n          this.loader.contentComplete();\n        }\n\n        break;\n\n      case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n        // This event indicates the ad has started - the video player can adjust the UI,\n        // for example display a pause button and remaining time. Fired when content should\n        // be paused. This usually happens right before an ad is about to cover the content\n\n        this.pauseContent();\n\n        break;\n\n      case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n        // This event indicates the ad has finished - the video player can perform\n        // appropriate UI actions, such as removing the timer for remaining time detection.\n        // Fired when content should be resumed. This usually happens when an ad finishes\n        // or collapses\n\n        this.pollCountdown();\n\n        this.resumeContent();\n\n        break;\n\n      case google.ima.AdEvent.Type.LOG:\n        if (adData.adError) {\n          this.player.debug.warn(`Non-fatal ad error: ${adData.adError.getMessage()}`);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  /**\n   * Any ad error handling comes through here\n   * @param {Event} event\n   */\n  onAdError = (event) => {\n    this.cancel();\n    this.player.debug.warn('Ads error', event);\n  };\n\n  /**\n   * Setup hooks for Plyr and window events. This ensures\n   * the mid- and post-roll launch at the correct time. And\n   * resize the advertisement when the player resizes\n   */\n  listeners = () => {\n    const { container } = this.player.elements;\n    let time;\n\n    this.player.on('canplay', () => {\n      this.addCuePoints();\n    });\n\n    this.player.on('ended', () => {\n      this.loader.contentComplete();\n    });\n\n    this.player.on('timeupdate', () => {\n      time = this.player.currentTime;\n    });\n\n    this.player.on('seeked', () => {\n      const seekedTime = this.player.currentTime;\n\n      if (is.empty(this.cuePoints)) {\n        return;\n      }\n\n      this.cuePoints.forEach((cuePoint, index) => {\n        if (time < cuePoint && cuePoint < seekedTime) {\n          this.manager.discardAdBreak();\n          this.cuePoints.splice(index, 1);\n        }\n      });\n    });\n\n    // Listen to the resizing of the window. And resize ad accordingly\n    // TODO: eventually implement ResizeObserver\n    window.addEventListener('resize', () => {\n      if (this.manager) {\n        this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n      }\n    });\n  };\n\n  /**\n   * Initialize the adsManager and start playing advertisements\n   */\n  play = () => {\n    const { container } = this.player.elements;\n\n    if (!this.managerPromise) {\n      this.resumeContent();\n    }\n\n    // Play the requested advertisement whenever the adsManager is ready\n    this.managerPromise\n      .then(() => {\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        // Initialize the container. Must be done via a user action on mobile devices\n        this.elements.displayContainer.initialize();\n\n        try {\n          if (!this.initialized) {\n            // Initialize the ads manager. Ad rules playlist will start at this time\n            this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n            // Call play to start showing the ad. Single video and overlay ads will\n            // start at this time; the call will be ignored for ad rules\n            this.manager.start();\n          }\n\n          this.initialized = true;\n        } catch (adError) {\n          // An error may be thrown if there was a problem with the\n          // VAST response\n          this.onAdError(adError);\n        }\n      })\n      .catch(() => {});\n  };\n\n  /**\n   * Resume our video\n   */\n  resumeContent = () => {\n    // Hide the advertisement container\n    this.elements.container.style.zIndex = '';\n\n    // Ad is stopped\n    this.playing = false;\n\n    // Play video\n    silencePromise(this.player.media.play());\n  };\n\n  /**\n   * Pause our video\n   */\n  pauseContent = () => {\n    // Show the advertisement container\n    this.elements.container.style.zIndex = 3;\n\n    // Ad is playing\n    this.playing = true;\n\n    // Pause our video.\n    this.player.media.pause();\n  };\n\n  /**\n   * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\n   * allowed to call new ads based on google policies, as they interpret this as an accidental\n   * video requests. https://developers.google.com/interactive-\n   * media-ads/docs/sdks/android/faq#8\n   */\n  cancel = () => {\n    // Pause our video\n    if (this.initialized) {\n      this.resumeContent();\n    }\n\n    // Tell our instance that we're done for now\n    this.trigger('error');\n\n    // Re-create our adsManager\n    this.loadAds();\n  };\n\n  /**\n   * Re-create our adsManager\n   */\n  loadAds = () => {\n    // Tell our adsManager to go bye bye\n    this.managerPromise\n      .then(() => {\n        // Destroy our adsManager\n        if (this.manager) {\n          this.manager.destroy();\n        }\n\n        // Re-set our adsManager promises\n        this.managerPromise = new Promise((resolve) => {\n          this.on('loaded', resolve);\n          this.player.debug.log(this.manager);\n        });\n        // Now that the manager has been destroyed set it to also be un-initialized\n        this.initialized = false;\n\n        // Now request some new advertisements\n        this.requestAds();\n      })\n      .catch(() => {});\n  };\n\n  /**\n   * Handles callbacks after an ad event was invoked\n   * @param {String} event - Event type\n   * @param args\n   */\n  trigger = (event, ...args) => {\n    const handlers = this.events[event];\n\n    if (is.array(handlers)) {\n      handlers.forEach((handler) => {\n        if (is.function(handler)) {\n          handler.apply(this, args);\n        }\n      });\n    }\n  };\n\n  /**\n   * Add event listeners\n   * @param {String} event - Event type\n   * @param {Function} callback - Callback for when event occurs\n   * @return {Ads}\n   */\n  on = (event, callback) => {\n    if (!is.array(this.events[event])) {\n      this.events[event] = [];\n    }\n\n    this.events[event].push(callback);\n\n    return this;\n  };\n\n  /**\n   * Setup a safety timer for when the ad network doesn't respond for whatever reason.\n   * The advertisement has 12 seconds to get its things together. We stop this timer when the\n   * advertisement is playing, or when a user action is required to start, then we clear the\n   * timer on ad ready\n   * @param {Number} time\n   * @param {String} from\n   */\n  startSafetyTimer = (time, from) => {\n    this.player.debug.log(`Safety timer invoked from: ${from}`);\n\n    this.safetyTimer = setTimeout(() => {\n      this.cancel();\n      this.clearSafetyTimer('startSafetyTimer()');\n    }, time);\n  };\n\n  /**\n   * Clear our safety timer(s)\n   * @param {String} from\n   */\n  clearSafetyTimer = (from) => {\n    if (!is.nullOrUndefined(this.safetyTimer)) {\n      this.player.debug.log(`Safety timer cleared from: ${from}`);\n\n      clearTimeout(this.safetyTimer);\n      this.safetyTimer = null;\n    }\n  };\n}\n\nexport default Ads;\n","/**\n * Returns a number whose value is limited to the given range.\n *\n * Example: limit the output of this computation to between 0 and 255\n * (x * 255).clamp(0, 255)\n *\n * @param {Number} input\n * @param {Number} min The lower boundary of the output range\n * @param {Number} max The upper boundary of the output range\n * @returns A number within the bounds of min and max\n * @type Number\n */\nexport function clamp(input = 0, min = 0, max = 255) {\n  return Math.min(Math.max(input, min), max);\n}\n\nexport default { clamp };\n","import { createElement } from '../utils/elements';\nimport { once } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport { clamp } from '../utils/numbers';\nimport { formatTime } from '../utils/time';\n\n// Arg: vttDataString example: \"WEBVTT\\n\\n1\\n00:00:05.000 --> 00:00:10.000\\n1080p-00001.jpg\"\nconst parseVtt = (vttDataString) => {\n  const processedList = [];\n  const frames = vttDataString.split(/\\r\\n\\r\\n|\\n\\n|\\r\\r/);\n\n  frames.forEach((frame) => {\n    const result = {};\n    const lines = frame.split(/\\r\\n|\\n|\\r/);\n\n    lines.forEach((line) => {\n      if (!is.number(result.startTime)) {\n        // The line with start and end times on it is the first line of interest\n        const matchTimes = line.match(\n          /([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})( ?--> ?)([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})/,\n        ); // Note that this currently ignores caption formatting directives that are optionally on the end of this line - fine for non-captions VTT\n\n        if (matchTimes) {\n          result.startTime =\n            Number(matchTimes[1] || 0) * 60 * 60 +\n            Number(matchTimes[2]) * 60 +\n            Number(matchTimes[3]) +\n            Number(`0.${matchTimes[4]}`);\n          result.endTime =\n            Number(matchTimes[6] || 0) * 60 * 60 +\n            Number(matchTimes[7]) * 60 +\n            Number(matchTimes[8]) +\n            Number(`0.${matchTimes[9]}`);\n        }\n      } else if (!is.empty(line.trim()) && is.empty(result.text)) {\n        // If we already have the startTime, then we're definitely up to the text line(s)\n        const lineSplit = line.trim().split('#xywh=');\n        [result.text] = lineSplit;\n\n        // If there's content in lineSplit[1], then we have sprites. If not, then it's just one frame per image\n        if (lineSplit[1]) {\n          [result.x, result.y, result.w, result.h] = lineSplit[1].split(',');\n        }\n      }\n    });\n\n    if (result.text) {\n      processedList.push(result);\n    }\n  });\n\n  return processedList;\n};\n\n/**\n * Preview thumbnails for seek hover and scrubbing\n * Seeking: Hover over the seek bar (desktop only): shows a small preview container above the seek bar\n * Scrubbing: Click and drag the seek bar (desktop and mobile): shows the preview image over the entire video, as if the video is scrubbing at very high speed\n *\n * Notes:\n * - Thumbs are set via JS settings on Plyr init, not HTML5 'track' property. Using the track property would be a bit gross, because it doesn't support custom 'kinds'. kind=metadata might be used for something else, and we want to allow multiple thumbnails tracks. Tracks must have a unique combination of 'kind' and 'label'. We would have to do something like kind=metadata,label=thumbnails1 / kind=metadata,label=thumbnails2. Square peg, round hole\n * - VTT info: the image URL is relative to the VTT, not the current document. But if the url starts with a slash, it will naturally be relative to the current domain. https://support.jwplayer.com/articles/how-to-add-preview-thumbnails\n * - This implementation uses multiple separate img elements. Other implementations use background-image on one element. This would be nice and simple, but Firefox and Safari have flickering issues with replacing backgrounds of larger images. It seems that YouTube perhaps only avoids this because they don't have the option for high-res previews (even the fullscreen ones, when mousedown/seeking). Images appear over the top of each other, and previous ones are discarded once the new ones have been rendered\n */\n\nconst fitRatio = (ratio, outer) => {\n  const targetRatio = outer.width / outer.height;\n  const result = {};\n  if (ratio > targetRatio) {\n    result.width = outer.width;\n    result.height = (1 / ratio) * outer.width;\n  } else {\n    result.height = outer.height;\n    result.width = ratio * outer.height;\n  }\n\n  return result;\n};\n\nclass PreviewThumbnails {\n  /**\n   * PreviewThumbnails constructor.\n   * @param {Plyr} player\n   * @return {PreviewThumbnails}\n   */\n  constructor(player) {\n    this.player = player;\n    this.thumbnails = [];\n    this.loaded = false;\n    this.lastMouseMoveTime = Date.now();\n    this.mouseDown = false;\n    this.loadedImages = [];\n\n    this.elements = {\n      thumb: {},\n      scrubbing: {},\n    };\n\n    this.load();\n  }\n\n  get enabled() {\n    return this.player.isHTML5 && this.player.isVideo && this.player.config.previewThumbnails.enabled;\n  }\n\n  load = () => {\n    // Toggle the regular seek tooltip\n    if (this.player.elements.display.seekTooltip) {\n      this.player.elements.display.seekTooltip.hidden = this.enabled;\n    }\n\n    if (!this.enabled) return;\n\n    this.getThumbnails().then(() => {\n      if (!this.enabled) {\n        return;\n      }\n\n      // Render DOM elements\n      this.render();\n\n      // Check to see if thumb container size was specified manually in CSS\n      this.determineContainerAutoSizing();\n\n      this.loaded = true;\n    });\n  };\n\n  // Download VTT files and parse them\n  getThumbnails = () => {\n    return new Promise((resolve) => {\n      const { src } = this.player.config.previewThumbnails;\n\n      if (is.empty(src)) {\n        throw new Error('Missing previewThumbnails.src config attribute');\n      }\n\n      // Resolve promise\n      const sortAndResolve = () => {\n        // Sort smallest to biggest (e.g., [120p, 480p, 1080p])\n        this.thumbnails.sort((x, y) => x.height - y.height);\n\n        this.player.debug.log('Preview thumbnails', this.thumbnails);\n\n        resolve();\n      };\n\n      // Via callback()\n      if (is.function(src)) {\n        src((thumbnails) => {\n          this.thumbnails = thumbnails;\n          sortAndResolve();\n        });\n      }\n      // VTT urls\n      else {\n        // If string, convert into single-element list\n        const urls = is.string(src) ? [src] : src;\n        // Loop through each src URL. Download and process the VTT file, storing the resulting data in this.thumbnails\n        const promises = urls.map((u) => this.getThumbnail(u));\n        // Resolve\n        Promise.all(promises).then(sortAndResolve);\n      }\n    });\n  };\n\n  // Process individual VTT file\n  getThumbnail = (url) => {\n    return new Promise((resolve) => {\n      fetch(url).then((response) => {\n        const thumbnail = {\n          frames: parseVtt(response),\n          height: null,\n          urlPrefix: '',\n        };\n\n        // If the URLs don't start with '/', then we need to set their relative path to be the location of the VTT file\n        // If the URLs do start with '/', then they obviously don't need a prefix, so it will remain blank\n        // If the thumbnail URLs start with with none of '/', 'http://' or 'https://', then we need to set their relative path to be the location of the VTT file\n        if (\n          !thumbnail.frames[0].text.startsWith('/') &&\n          !thumbnail.frames[0].text.startsWith('http://') &&\n          !thumbnail.frames[0].text.startsWith('https://')\n        ) {\n          thumbnail.urlPrefix = url.substring(0, url.lastIndexOf('/') + 1);\n        }\n\n        // Download the first frame, so that we can determine/set the height of this thumbnailsDef\n        const tempImage = new Image();\n\n        tempImage.onload = () => {\n          thumbnail.height = tempImage.naturalHeight;\n          thumbnail.width = tempImage.naturalWidth;\n\n          this.thumbnails.push(thumbnail);\n\n          resolve();\n        };\n\n        tempImage.src = thumbnail.urlPrefix + thumbnail.frames[0].text;\n      });\n    });\n  };\n\n  startMove = (event) => {\n    if (!this.loaded) return;\n\n    if (!is.event(event) || !['touchmove', 'mousemove'].includes(event.type)) return;\n\n    // Wait until media has a duration\n    if (!this.player.media.duration) return;\n\n    if (event.type === 'touchmove') {\n      // Calculate seek hover position as approx video seconds\n      this.seekTime = this.player.media.duration * (this.player.elements.inputs.seek.value / 100);\n    } else {\n      // Calculate seek hover position as approx video seconds\n      const clientRect = this.player.elements.progress.getBoundingClientRect();\n      const percentage = (100 / clientRect.width) * (event.pageX - clientRect.left);\n      this.seekTime = this.player.media.duration * (percentage / 100);\n\n      if (this.seekTime < 0) {\n        // The mousemove fires for 10+px out to the left\n        this.seekTime = 0;\n      }\n\n      if (this.seekTime > this.player.media.duration - 1) {\n        // Took 1 second off the duration for safety, because different players can disagree on the real duration of a video\n        this.seekTime = this.player.media.duration - 1;\n      }\n\n      this.mousePosX = event.pageX;\n\n      // Set time text inside image container\n      this.elements.thumb.time.innerText = formatTime(this.seekTime);\n\n      // Get marker point for time\n      const point = this.player.config.markers?.points?.find(({ time: t }) => t === Math.round(this.seekTime));\n\n      // Append the point label to the tooltip\n      if (point) {\n        // this.elements.thumb.time.innerText.concat('\\n');\n        this.elements.thumb.time.insertAdjacentHTML('afterbegin', `${point.label}<br>`);\n      }\n    }\n\n    // Download and show image\n    this.showImageAtCurrentTime();\n  };\n\n  endMove = () => {\n    this.toggleThumbContainer(false, true);\n  };\n\n  startScrubbing = (event) => {\n    // Only act on left mouse button (0), or touch device (event.button does not exist or is false)\n    if (is.nullOrUndefined(event.button) || event.button === false || event.button === 0) {\n      this.mouseDown = true;\n\n      // Wait until media has a duration\n      if (this.player.media.duration) {\n        this.toggleScrubbingContainer(true);\n        this.toggleThumbContainer(false, true);\n\n        // Download and show image\n        this.showImageAtCurrentTime();\n      }\n    }\n  };\n\n  endScrubbing = () => {\n    this.mouseDown = false;\n\n    // Hide scrubbing preview. But wait until the video has successfully seeked before hiding the scrubbing preview\n    if (Math.ceil(this.lastTime) === Math.ceil(this.player.media.currentTime)) {\n      // The video was already seeked/loaded at the chosen time - hide immediately\n      this.toggleScrubbingContainer(false);\n    } else {\n      // The video hasn't seeked yet. Wait for that\n      once.call(this.player, this.player.media, 'timeupdate', () => {\n        // Re-check mousedown - we might have already started scrubbing again\n        if (!this.mouseDown) {\n          this.toggleScrubbingContainer(false);\n        }\n      });\n    }\n  };\n\n  /**\n   * Setup hooks for Plyr and window events\n   */\n  listeners = () => {\n    // Hide thumbnail preview - on mouse click, mouse leave (in listeners.js for now), and video play/seek. All four are required, e.g., for buffering\n    this.player.on('play', () => {\n      this.toggleThumbContainer(false, true);\n    });\n\n    this.player.on('seeked', () => {\n      this.toggleThumbContainer(false);\n    });\n\n    this.player.on('timeupdate', () => {\n      this.lastTime = this.player.media.currentTime;\n    });\n  };\n\n  /**\n   * Create HTML elements for image containers\n   */\n  render = () => {\n    // Create HTML element: plyr__preview-thumbnail-container\n    this.elements.thumb.container = createElement('div', {\n      class: this.player.config.classNames.previewThumbnails.thumbContainer,\n    });\n\n    // Wrapper for the image for styling\n    this.elements.thumb.imageContainer = createElement('div', {\n      class: this.player.config.classNames.previewThumbnails.imageContainer,\n    });\n    this.elements.thumb.container.appendChild(this.elements.thumb.imageContainer);\n\n    // Create HTML element, parent+span: time text (e.g., 01:32:00)\n    const timeContainer = createElement('div', {\n      class: this.player.config.classNames.previewThumbnails.timeContainer,\n    });\n\n    this.elements.thumb.time = createElement('span', {}, '00:00');\n    timeContainer.appendChild(this.elements.thumb.time);\n\n    this.elements.thumb.imageContainer.appendChild(timeContainer);\n\n    // Inject the whole thumb\n    if (is.element(this.player.elements.progress)) {\n      this.player.elements.progress.appendChild(this.elements.thumb.container);\n    }\n\n    // Create HTML element: plyr__preview-scrubbing-container\n    this.elements.scrubbing.container = createElement('div', {\n      class: this.player.config.classNames.previewThumbnails.scrubbingContainer,\n    });\n\n    this.player.elements.wrapper.appendChild(this.elements.scrubbing.container);\n  };\n\n  destroy = () => {\n    if (this.elements.thumb.container) {\n      this.elements.thumb.container.remove();\n    }\n    if (this.elements.scrubbing.container) {\n      this.elements.scrubbing.container.remove();\n    }\n  };\n\n  showImageAtCurrentTime = () => {\n    if (this.mouseDown) {\n      this.setScrubbingContainerSize();\n    } else {\n      this.setThumbContainerSizeAndPos();\n    }\n\n    // Find the desired thumbnail index\n    // TODO: Handle a video longer than the thumbs where thumbNum is null\n    const thumbNum = this.thumbnails[0].frames.findIndex(\n      (frame) => this.seekTime >= frame.startTime && this.seekTime <= frame.endTime,\n    );\n    const hasThumb = thumbNum >= 0;\n    let qualityIndex = 0;\n\n    // Show the thumb container if we're not scrubbing\n    if (!this.mouseDown) {\n      this.toggleThumbContainer(hasThumb);\n    }\n\n    // No matching thumb found\n    if (!hasThumb) {\n      return;\n    }\n\n    // Check to see if we've already downloaded higher quality versions of this image\n    this.thumbnails.forEach((thumbnail, index) => {\n      if (this.loadedImages.includes(thumbnail.frames[thumbNum].text)) {\n        qualityIndex = index;\n      }\n    });\n\n    // Only proceed if either thumb num or thumbfilename has changed\n    if (thumbNum !== this.showingThumb) {\n      this.showingThumb = thumbNum;\n      this.loadImage(qualityIndex);\n    }\n  };\n\n  // Show the image that's currently specified in this.showingThumb\n  loadImage = (qualityIndex = 0) => {\n    const thumbNum = this.showingThumb;\n    const thumbnail = this.thumbnails[qualityIndex];\n    const { urlPrefix } = thumbnail;\n    const frame = thumbnail.frames[thumbNum];\n    const thumbFilename = thumbnail.frames[thumbNum].text;\n    const thumbUrl = urlPrefix + thumbFilename;\n\n    if (!this.currentImageElement || this.currentImageElement.dataset.filename !== thumbFilename) {\n      // If we're already loading a previous image, remove its onload handler - we don't want it to load after this one\n      // Only do this if not using sprites. Without sprites we really want to show as many images as possible, as a best-effort\n      if (this.loadingImage && this.usingSprites) {\n        this.loadingImage.onload = null;\n      }\n\n      // We're building and adding a new image. In other implementations of similar functionality (YouTube), background image\n      // is instead used. But this causes issues with larger images in Firefox and Safari - switching between background\n      // images causes a flicker. Putting a new image over the top does not\n      const previewImage = new Image();\n      previewImage.src = thumbUrl;\n      previewImage.dataset.index = thumbNum;\n      previewImage.dataset.filename = thumbFilename;\n      this.showingThumbFilename = thumbFilename;\n\n      this.player.debug.log(`Loading image: ${thumbUrl}`);\n\n      // For some reason, passing the named function directly causes it to execute immediately. So I've wrapped it in an anonymous function...\n      previewImage.onload = () => this.showImage(previewImage, frame, qualityIndex, thumbNum, thumbFilename, true);\n      this.loadingImage = previewImage;\n      this.removeOldImages(previewImage);\n    } else {\n      // Update the existing image\n      this.showImage(this.currentImageElement, frame, qualityIndex, thumbNum, thumbFilename, false);\n      this.currentImageElement.dataset.index = thumbNum;\n      this.removeOldImages(this.currentImageElement);\n    }\n  };\n\n  showImage = (previewImage, frame, qualityIndex, thumbNum, thumbFilename, newImage = true) => {\n    this.player.debug.log(\n      `Showing thumb: ${thumbFilename}. num: ${thumbNum}. qual: ${qualityIndex}. newimg: ${newImage}`,\n    );\n    this.setImageSizeAndOffset(previewImage, frame);\n\n    if (newImage) {\n      this.currentImageContainer.appendChild(previewImage);\n      this.currentImageElement = previewImage;\n\n      if (!this.loadedImages.includes(thumbFilename)) {\n        this.loadedImages.push(thumbFilename);\n      }\n    }\n\n    // Preload images before and after the current one\n    // Show higher quality of the same frame\n    // Each step here has a short time delay, and only continues if still hovering/seeking the same spot. This is to protect slow connections from overloading\n    this.preloadNearby(thumbNum, true)\n      .then(this.preloadNearby(thumbNum, false))\n      .then(this.getHigherQuality(qualityIndex, previewImage, frame, thumbFilename));\n  };\n\n  // Remove all preview images that aren't the designated current image\n  removeOldImages = (currentImage) => {\n    // Get a list of all images, convert it from a DOM list to an array\n    Array.from(this.currentImageContainer.children).forEach((image) => {\n      if (image.tagName.toLowerCase() !== 'img') {\n        return;\n      }\n\n      const removeDelay = this.usingSprites ? 500 : 1000;\n\n      if (image.dataset.index !== currentImage.dataset.index && !image.dataset.deleting) {\n        // Wait 200ms, as the new image can take some time to show on certain browsers (even though it was downloaded before showing). This will prevent flicker, and show some generosity towards slower clients\n        // First set attribute 'deleting' to prevent multi-handling of this on repeat firing of this function\n        // eslint-disable-next-line no-param-reassign\n        image.dataset.deleting = true;\n\n        // This has to be set before the timeout - to prevent issues switching between hover and scrub\n        const { currentImageContainer } = this;\n\n        setTimeout(() => {\n          currentImageContainer.removeChild(image);\n          this.player.debug.log(`Removing thumb: ${image.dataset.filename}`);\n        }, removeDelay);\n      }\n    });\n  };\n\n  // Preload images before and after the current one. Only if the user is still hovering/seeking the same frame\n  // This will only preload the lowest quality\n  preloadNearby = (thumbNum, forward = true) => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const oldThumbFilename = this.thumbnails[0].frames[thumbNum].text;\n\n        if (this.showingThumbFilename === oldThumbFilename) {\n          // Find the nearest thumbs with different filenames. Sometimes it'll be the next index, but in the case of sprites, it might be 100+ away\n          let thumbnailsClone;\n          if (forward) {\n            thumbnailsClone = this.thumbnails[0].frames.slice(thumbNum);\n          } else {\n            thumbnailsClone = this.thumbnails[0].frames.slice(0, thumbNum).reverse();\n          }\n\n          let foundOne = false;\n\n          thumbnailsClone.forEach((frame) => {\n            const newThumbFilename = frame.text;\n\n            if (newThumbFilename !== oldThumbFilename) {\n              // Found one with a different filename. Make sure it hasn't already been loaded on this page visit\n              if (!this.loadedImages.includes(newThumbFilename)) {\n                foundOne = true;\n                this.player.debug.log(`Preloading thumb filename: ${newThumbFilename}`);\n\n                const { urlPrefix } = this.thumbnails[0];\n                const thumbURL = urlPrefix + newThumbFilename;\n                const previewImage = new Image();\n                previewImage.src = thumbURL;\n                previewImage.onload = () => {\n                  this.player.debug.log(`Preloaded thumb filename: ${newThumbFilename}`);\n                  if (!this.loadedImages.includes(newThumbFilename)) this.loadedImages.push(newThumbFilename);\n\n                  // We don't resolve until the thumb is loaded\n                  resolve();\n                };\n              }\n            }\n          });\n\n          // If there are none to preload then we want to resolve immediately\n          if (!foundOne) {\n            resolve();\n          }\n        }\n      }, 300);\n    });\n  };\n\n  // If user has been hovering current image for half a second, look for a higher quality one\n  getHigherQuality = (currentQualityIndex, previewImage, frame, thumbFilename) => {\n    if (currentQualityIndex < this.thumbnails.length - 1) {\n      // Only use the higher quality version if it's going to look any better - if the current thumb is of a lower pixel density than the thumbnail container\n      let previewImageHeight = previewImage.naturalHeight;\n\n      if (this.usingSprites) {\n        previewImageHeight = frame.h;\n      }\n\n      if (previewImageHeight < this.thumbContainerHeight) {\n        // Recurse back to the loadImage function - show a higher quality one, but only if the viewer is on this frame for a while\n        setTimeout(() => {\n          // Make sure the mouse hasn't already moved on and started hovering at another image\n          if (this.showingThumbFilename === thumbFilename) {\n            this.player.debug.log(`Showing higher quality thumb for: ${thumbFilename}`);\n            this.loadImage(currentQualityIndex + 1);\n          }\n        }, 300);\n      }\n    }\n  };\n\n  get currentImageContainer() {\n    return this.mouseDown ? this.elements.scrubbing.container : this.elements.thumb.imageContainer;\n  }\n\n  get usingSprites() {\n    return Object.keys(this.thumbnails[0].frames[0]).includes('w');\n  }\n\n  get thumbAspectRatio() {\n    if (this.usingSprites) {\n      return this.thumbnails[0].frames[0].w / this.thumbnails[0].frames[0].h;\n    }\n\n    return this.thumbnails[0].width / this.thumbnails[0].height;\n  }\n\n  get thumbContainerHeight() {\n    if (this.mouseDown) {\n      const { height } = fitRatio(this.thumbAspectRatio, {\n        width: this.player.media.clientWidth,\n        height: this.player.media.clientHeight,\n      });\n      return height;\n    }\n\n    // If css is used this needs to return the css height for sprites to work (see setImageSizeAndOffset)\n    if (this.sizeSpecifiedInCSS) {\n      return this.elements.thumb.imageContainer.clientHeight;\n    }\n\n    return Math.floor(this.player.media.clientWidth / this.thumbAspectRatio / 4);\n  }\n\n  get currentImageElement() {\n    return this.mouseDown ? this.currentScrubbingImageElement : this.currentThumbnailImageElement;\n  }\n\n  set currentImageElement(element) {\n    if (this.mouseDown) {\n      this.currentScrubbingImageElement = element;\n    } else {\n      this.currentThumbnailImageElement = element;\n    }\n  }\n\n  toggleThumbContainer = (toggle = false, clearShowing = false) => {\n    const className = this.player.config.classNames.previewThumbnails.thumbContainerShown;\n    this.elements.thumb.container.classList.toggle(className, toggle);\n\n    if (!toggle && clearShowing) {\n      this.showingThumb = null;\n      this.showingThumbFilename = null;\n    }\n  };\n\n  toggleScrubbingContainer = (toggle = false) => {\n    const className = this.player.config.classNames.previewThumbnails.scrubbingContainerShown;\n    this.elements.scrubbing.container.classList.toggle(className, toggle);\n\n    if (!toggle) {\n      this.showingThumb = null;\n      this.showingThumbFilename = null;\n    }\n  };\n\n  determineContainerAutoSizing = () => {\n    if (this.elements.thumb.imageContainer.clientHeight > 20 || this.elements.thumb.imageContainer.clientWidth > 20) {\n      // This will prevent auto sizing in this.setThumbContainerSizeAndPos()\n      this.sizeSpecifiedInCSS = true;\n    }\n  };\n\n  // Set the size to be about a quarter of the size of video. Unless option dynamicSize === false, in which case it needs to be set in CSS\n  setThumbContainerSizeAndPos = () => {\n    const { imageContainer } = this.elements.thumb;\n\n    if (!this.sizeSpecifiedInCSS) {\n      const thumbWidth = Math.floor(this.thumbContainerHeight * this.thumbAspectRatio);\n      imageContainer.style.height = `${this.thumbContainerHeight}px`;\n      imageContainer.style.width = `${thumbWidth}px`;\n    } else if (imageContainer.clientHeight > 20 && imageContainer.clientWidth < 20) {\n      const thumbWidth = Math.floor(imageContainer.clientHeight * this.thumbAspectRatio);\n      imageContainer.style.width = `${thumbWidth}px`;\n    } else if (imageContainer.clientHeight < 20 && imageContainer.clientWidth > 20) {\n      const thumbHeight = Math.floor(imageContainer.clientWidth / this.thumbAspectRatio);\n      imageContainer.style.height = `${thumbHeight}px`;\n    }\n\n    this.setThumbContainerPos();\n  };\n\n  setThumbContainerPos = () => {\n    const scrubberRect = this.player.elements.progress.getBoundingClientRect();\n    const containerRect = this.player.elements.container.getBoundingClientRect();\n    const { container } = this.elements.thumb;\n    // Find the lowest and highest desired left-position, so we don't slide out the side of the video container\n    const min = containerRect.left - scrubberRect.left + 10;\n    const max = containerRect.right - scrubberRect.left - container.clientWidth - 10;\n    // Set preview container position to: mousepos, minus seekbar.left, minus half of previewContainer.clientWidth\n    const position = this.mousePosX - scrubberRect.left - container.clientWidth / 2;\n    const clamped = clamp(position, min, max);\n\n    // Move the popover position\n    container.style.left = `${clamped}px`;\n\n    // The arrow can follow the cursor\n    container.style.setProperty('--preview-arrow-offset', `${position - clamped}px`);\n  };\n\n  // Can't use 100% width, in case the video is a different aspect ratio to the video container\n  setScrubbingContainerSize = () => {\n    const { width, height } = fitRatio(this.thumbAspectRatio, {\n      width: this.player.media.clientWidth,\n      height: this.player.media.clientHeight,\n    });\n    this.elements.scrubbing.container.style.width = `${width}px`;\n    this.elements.scrubbing.container.style.height = `${height}px`;\n  };\n\n  // Sprites need to be offset to the correct location\n  setImageSizeAndOffset = (previewImage, frame) => {\n    if (!this.usingSprites) return;\n\n    // Find difference between height and preview container height\n    const multiplier = this.thumbContainerHeight / frame.h;\n\n    // eslint-disable-next-line no-param-reassign\n    previewImage.style.height = `${previewImage.naturalHeight * multiplier}px`;\n    // eslint-disable-next-line no-param-reassign\n    previewImage.style.width = `${previewImage.naturalWidth * multiplier}px`;\n    // eslint-disable-next-line no-param-reassign\n    previewImage.style.left = `-${frame.x * multiplier}px`;\n    // eslint-disable-next-line no-param-reassign\n    previewImage.style.top = `-${frame.y * multiplier}px`;\n  };\n}\n\nexport default PreviewThumbnails;\n","// ==========================================================================\n// Plyr source update\n// ==========================================================================\n\nimport { providers } from './config/types';\nimport html5 from './html5';\nimport media from './media';\nimport PreviewThumbnails from './plugins/preview-thumbnails';\nimport support from './support';\nimport ui from './ui';\nimport { createElement, insertElement, removeElement } from './utils/elements';\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\n\nconst source = {\n  // Add elements to HTML5 media (source, tracks, etc)\n  insertElements(type, attributes) {\n    if (is.string(attributes)) {\n      insertElement(type, this.media, {\n        src: attributes,\n      });\n    } else if (is.array(attributes)) {\n      attributes.forEach((attribute) => {\n        insertElement(type, this.media, attribute);\n      });\n    }\n  },\n\n  // Update source\n  // Sources are not checked for support so be careful\n  change(input) {\n    if (!getDeep(input, 'sources.length')) {\n      this.debug.warn('Invalid source format');\n      return;\n    }\n\n    // Cancel current network requests\n    html5.cancelRequests.call(this);\n\n    // Destroy instance and re-setup\n    this.destroy.call(\n      this,\n      () => {\n        // Reset quality options\n        this.options.quality = [];\n\n        // Remove elements\n        removeElement(this.media);\n        this.media = null;\n\n        // Reset class name\n        if (is.element(this.elements.container)) {\n          this.elements.container.removeAttribute('class');\n        }\n\n        // Set the type and provider\n        const { sources, type } = input;\n        const [{ provider = providers.html5, src }] = sources;\n        const tagName = provider === 'html5' ? type : 'div';\n        const attributes = provider === 'html5' ? {} : { src };\n\n        Object.assign(this, {\n          provider,\n          type,\n          // Check for support\n          supported: support.check(type, provider, this.config.playsinline),\n          // Create new element\n          media: createElement(tagName, attributes),\n        });\n\n        // Inject the new element\n        this.elements.container.appendChild(this.media);\n\n        // Autoplay the new source?\n        if (is.boolean(input.autoplay)) {\n          this.config.autoplay = input.autoplay;\n        }\n\n        // Set attributes for audio and video\n        if (this.isHTML5) {\n          if (this.config.crossorigin) {\n            this.media.setAttribute('crossorigin', '');\n          }\n          if (this.config.autoplay) {\n            this.media.setAttribute('autoplay', '');\n          }\n          if (!is.empty(input.poster)) {\n            this.poster = input.poster;\n          }\n          if (this.config.loop.active) {\n            this.media.setAttribute('loop', '');\n          }\n          if (this.config.muted) {\n            this.media.setAttribute('muted', '');\n          }\n          if (this.config.playsinline) {\n            this.media.setAttribute('playsinline', '');\n          }\n        }\n\n        // Restore class hook\n        ui.addStyleHook.call(this);\n\n        // Set new sources for html5\n        if (this.isHTML5) {\n          source.insertElements.call(this, 'source', sources);\n        }\n\n        // Set video title\n        this.config.title = input.title;\n\n        // Set up from scratch\n        media.setup.call(this);\n\n        // HTML5 stuff\n        if (this.isHTML5) {\n          // Setup captions\n          if (Object.keys(input).includes('tracks')) {\n            source.insertElements.call(this, 'track', input.tracks);\n          }\n        }\n\n        // If HTML5 or embed but not fully supported, setupInterface and call ready now\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n          // Setup interface\n          ui.build.call(this);\n        }\n\n        // Load HTML5 sources\n        if (this.isHTML5) {\n          this.media.load();\n        }\n\n        // Update previewThumbnails config & reload plugin\n        if (!is.empty(input.previewThumbnails)) {\n          Object.assign(this.config.previewThumbnails, input.previewThumbnails);\n\n          // Cleanup previewThumbnails plugin if it was loaded\n          if (this.previewThumbnails && this.previewThumbnails.loaded) {\n            this.previewThumbnails.destroy();\n            this.previewThumbnails = null;\n          }\n\n          // Create new instance if it is still enabled\n          if (this.config.previewThumbnails.enabled) {\n            this.previewThumbnails = new PreviewThumbnails(this);\n          }\n        }\n\n        // Update the fullscreen support\n        this.fullscreen.update();\n      },\n      true,\n    );\n  },\n};\n\nexport default source;\n","// ==========================================================================\n// Plyr\n// plyr.js v3.7.3\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n\nimport captions from './captions';\nimport defaults from './config/defaults';\nimport { pip } from './config/states';\nimport { getProviderByUrl, providers, types } from './config/types';\nimport Console from './console';\nimport controls from './controls';\nimport Fullscreen from './fullscreen';\nimport html5 from './html5';\nimport Listeners from './listeners';\nimport media from './media';\nimport Ads from './plugins/ads';\nimport PreviewThumbnails from './plugins/preview-thumbnails';\nimport source from './source';\nimport Storage from './storage';\nimport support from './support';\nimport ui from './ui';\nimport { closest } from './utils/arrays';\nimport { createElement, hasClass, removeElement, replaceElement, toggleClass, wrap } from './utils/elements';\nimport { off, on, once, triggerEvent, unbindListeners } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/load-sprite';\nimport { clamp } from './utils/numbers';\nimport { cloneDeep, extend } from './utils/objects';\nimport { silencePromise } from './utils/promise';\nimport { getAspectRatio, reduceAspectRatio, setAspectRatio, validateAspectRatio } from './utils/style';\nimport { parseUrl } from './utils/urls';\n\n// Private properties\n// TODO: Use a WeakMap for private globals\n// const globals = new WeakMap();\n\n// Plyr instance\nclass Plyr {\n  constructor(target, options) {\n    this.timers = {};\n\n    // State\n    this.ready = false;\n    this.loading = false;\n    this.failed = false;\n\n    // Touch device\n    this.touch = support.touch;\n\n    // Set the media element\n    this.media = target;\n\n    // String selector passed\n    if (is.string(this.media)) {\n      this.media = document.querySelectorAll(this.media);\n    }\n\n    // jQuery, NodeList or Array passed, use first element\n    if ((window.jQuery && this.media instanceof jQuery) || is.nodeList(this.media) || is.array(this.media)) {\n      // eslint-disable-next-line\n      this.media = this.media[0];\n    }\n\n    // Set config\n    this.config = extend(\n      {},\n      defaults,\n      Plyr.defaults,\n      options || {},\n      (() => {\n        try {\n          return JSON.parse(this.media.getAttribute('data-plyr-config'));\n        } catch (_) {\n          return {};\n        }\n      })(),\n    );\n\n    // Elements cache\n    this.elements = {\n      container: null,\n      fullscreen: null,\n      captions: null,\n      buttons: {},\n      display: {},\n      progress: {},\n      inputs: {},\n      settings: {\n        popup: null,\n        menu: null,\n        panels: {},\n        buttons: {},\n      },\n    };\n\n    // Captions\n    this.captions = {\n      active: null,\n      currentTrack: -1,\n      meta: new WeakMap(),\n    };\n\n    // Fullscreen\n    this.fullscreen = {\n      active: false,\n    };\n\n    // Options\n    this.options = {\n      speed: [],\n      quality: [],\n    };\n\n    // Debugging\n    // TODO: move to globals\n    this.debug = new Console(this.config.debug);\n\n    // Log config options and support\n    this.debug.log('Config', this.config);\n    this.debug.log('Support', support);\n\n    // We need an element to setup\n    if (is.nullOrUndefined(this.media) || !is.element(this.media)) {\n      this.debug.error('Setup failed: no suitable element passed');\n      return;\n    }\n\n    // Bail if the element is initialized\n    if (this.media.plyr) {\n      this.debug.warn('Target already setup');\n      return;\n    }\n\n    // Bail if not enabled\n    if (!this.config.enabled) {\n      this.debug.error('Setup failed: disabled by config');\n      return;\n    }\n\n    // Bail if disabled or no basic support\n    // You may want to disable certain UAs etc\n    if (!support.check().api) {\n      this.debug.error('Setup failed: no support');\n      return;\n    }\n\n    // Cache original element state for .destroy()\n    const clone = this.media.cloneNode(true);\n    clone.autoplay = false;\n    this.elements.original = clone;\n\n    // Set media type based on tag or data attribute\n    // Supported: video, audio, vimeo, youtube\n    const type = this.media.tagName.toLowerCase();\n    // Embed properties\n    let iframe = null;\n    let url = null;\n\n    // Different setup based on type\n    switch (type) {\n      case 'div':\n        // Find the frame\n        iframe = this.media.querySelector('iframe');\n\n        // <iframe> type\n        if (is.element(iframe)) {\n          // Detect provider\n          url = parseUrl(iframe.getAttribute('src'));\n          this.provider = getProviderByUrl(url.toString());\n\n          // Rework elements\n          this.elements.container = this.media;\n          this.media = iframe;\n\n          // Reset classname\n          this.elements.container.className = '';\n\n          // Get attributes from URL and set config\n          if (url.search.length) {\n            const truthy = ['1', 'true'];\n\n            if (truthy.includes(url.searchParams.get('autoplay'))) {\n              this.config.autoplay = true;\n            }\n            if (truthy.includes(url.searchParams.get('loop'))) {\n              this.config.loop.active = true;\n            }\n\n            // TODO: replace fullscreen.iosNative with this playsinline config option\n            // YouTube requires the playsinline in the URL\n            if (this.isYouTube) {\n              this.config.playsinline = truthy.includes(url.searchParams.get('playsinline'));\n              this.config.youtube.hl = url.searchParams.get('hl'); // TODO: Should this be setting language?\n            } else {\n              this.config.playsinline = true;\n            }\n          }\n        } else {\n          // <div> with attributes\n          this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\n\n          // Remove attribute\n          this.media.removeAttribute(this.config.attributes.embed.provider);\n        }\n\n        // Unsupported or missing provider\n        if (is.empty(this.provider) || !Object.values(providers).includes(this.provider)) {\n          this.debug.error('Setup failed: Invalid provider');\n          return;\n        }\n\n        // Audio will come later for external providers\n        this.type = types.video;\n\n        break;\n\n      case 'video':\n      case 'audio':\n        this.type = type;\n        this.provider = providers.html5;\n\n        // Get config from attributes\n        if (this.media.hasAttribute('crossorigin')) {\n          this.config.crossorigin = true;\n        }\n        if (this.media.hasAttribute('autoplay')) {\n          this.config.autoplay = true;\n        }\n        if (this.media.hasAttribute('playsinline') || this.media.hasAttribute('webkit-playsinline')) {\n          this.config.playsinline = true;\n        }\n        if (this.media.hasAttribute('muted')) {\n          this.config.muted = true;\n        }\n        if (this.media.hasAttribute('loop')) {\n          this.config.loop.active = true;\n        }\n\n        break;\n\n      default:\n        this.debug.error('Setup failed: unsupported type');\n        return;\n    }\n\n    // Check for support again but with type\n    this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n    // If no support for even API, bail\n    if (!this.supported.api) {\n      this.debug.error('Setup failed: no support');\n      return;\n    }\n\n    this.eventListeners = [];\n\n    // Create listeners\n    this.listeners = new Listeners(this);\n\n    // Setup local storage for user settings\n    this.storage = new Storage(this);\n\n    // Store reference\n    this.media.plyr = this;\n\n    // Wrap media\n    if (!is.element(this.elements.container)) {\n      this.elements.container = createElement('div', { tabindex: 0 });\n      wrap(this.media, this.elements.container);\n    }\n\n    // Migrate custom properties from media to container (so they work 😉)\n    ui.migrateStyles.call(this);\n\n    // Add style hook\n    ui.addStyleHook.call(this);\n\n    // Setup media\n    media.setup.call(this);\n\n    // Listen for events if debugging\n    if (this.config.debug) {\n      on.call(this, this.elements.container, this.config.events.join(' '), (event) => {\n        this.debug.log(`event: ${event.type}`);\n      });\n    }\n\n    // Setup fullscreen\n    this.fullscreen = new Fullscreen(this);\n\n    // Setup interface\n    // If embed but not fully supported, build interface now to avoid flash of controls\n    if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n      ui.build.call(this);\n    }\n\n    // Container listeners\n    this.listeners.container();\n\n    // Global listeners\n    this.listeners.global();\n\n    // Setup ads if provided\n    if (this.config.ads.enabled) {\n      this.ads = new Ads(this);\n    }\n\n    // Autoplay if required\n    if (this.isHTML5 && this.config.autoplay) {\n      this.once('canplay', () => silencePromise(this.play()));\n    }\n\n    // Seek time will be recorded (in listeners.js) so we can prevent hiding controls for a few seconds after seek\n    this.lastSeekTime = 0;\n\n    // Setup preview thumbnails if enabled\n    if (this.config.previewThumbnails.enabled) {\n      this.previewThumbnails = new PreviewThumbnails(this);\n    }\n  }\n\n  // ---------------------------------------\n  // API\n  // ---------------------------------------\n\n  /**\n   * Types and provider helpers\n   */\n  get isHTML5() {\n    return this.provider === providers.html5;\n  }\n\n  get isEmbed() {\n    return this.isYouTube || this.isVimeo;\n  }\n\n  get isYouTube() {\n    return this.provider === providers.youtube;\n  }\n\n  get isVimeo() {\n    return this.provider === providers.vimeo;\n  }\n\n  get isVideo() {\n    return this.type === types.video;\n  }\n\n  get isAudio() {\n    return this.type === types.audio;\n  }\n\n  /**\n   * Play the media, or play the advertisement (if they are not blocked)\n   */\n  play = () => {\n    if (!is.function(this.media.play)) {\n      return null;\n    }\n\n    // Intecept play with ads\n    if (this.ads && this.ads.enabled) {\n      this.ads.managerPromise.then(() => this.ads.play()).catch(() => silencePromise(this.media.play()));\n    }\n\n    // Return the promise (for HTML5)\n    return this.media.play();\n  };\n\n  /**\n   * Pause the media\n   */\n  pause = () => {\n    if (!this.playing || !is.function(this.media.pause)) {\n      return null;\n    }\n\n    return this.media.pause();\n  };\n\n  /**\n   * Get playing state\n   */\n  get playing() {\n    return Boolean(this.ready && !this.paused && !this.ended);\n  }\n\n  /**\n   * Get paused state\n   */\n  get paused() {\n    return Boolean(this.media.paused);\n  }\n\n  /**\n   * Get stopped state\n   */\n  get stopped() {\n    return Boolean(this.paused && this.currentTime === 0);\n  }\n\n  /**\n   * Get ended state\n   */\n  get ended() {\n    return Boolean(this.media.ended);\n  }\n\n  /**\n   * Toggle playback based on current status\n   * @param {Boolean} input\n   */\n  togglePlay = (input) => {\n    // Toggle based on current state if nothing passed\n    const toggle = is.boolean(input) ? input : !this.playing;\n\n    if (toggle) {\n      return this.play();\n    }\n\n    return this.pause();\n  };\n\n  /**\n   * Stop playback\n   */\n  stop = () => {\n    if (this.isHTML5) {\n      this.pause();\n      this.restart();\n    } else if (is.function(this.media.stop)) {\n      this.media.stop();\n    }\n  };\n\n  /**\n   * Restart playback\n   */\n  restart = () => {\n    this.currentTime = 0;\n  };\n\n  /**\n   * Rewind\n   * @param {Number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\n   */\n  rewind = (seekTime) => {\n    this.currentTime -= is.number(seekTime) ? seekTime : this.config.seekTime;\n  };\n\n  /**\n   * Fast forward\n   * @param {Number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\n   */\n  forward = (seekTime) => {\n    this.currentTime += is.number(seekTime) ? seekTime : this.config.seekTime;\n  };\n\n  /**\n   * Seek to a time\n   * @param {Number} input - where to seek to in seconds. Defaults to 0 (the start)\n   */\n  set currentTime(input) {\n    // Bail if media duration isn't available yet\n    if (!this.duration) {\n      return;\n    }\n\n    // Validate input\n    const inputIsValid = is.number(input) && input > 0;\n\n    // Set\n    this.media.currentTime = inputIsValid ? Math.min(input, this.duration) : 0;\n\n    // Logging\n    this.debug.log(`Seeking to ${this.currentTime} seconds`);\n  }\n\n  /**\n   * Get current time\n   */\n  get currentTime() {\n    return Number(this.media.currentTime);\n  }\n\n  /**\n   * Get buffered\n   */\n  get buffered() {\n    const { buffered } = this.media;\n\n    // YouTube / Vimeo return a float between 0-1\n    if (is.number(buffered)) {\n      return buffered;\n    }\n\n    // HTML5\n    // TODO: Handle buffered chunks of the media\n    // (i.e. seek to another section buffers only that section)\n    if (buffered && buffered.length && this.duration > 0) {\n      return buffered.end(0) / this.duration;\n    }\n\n    return 0;\n  }\n\n  /**\n   * Get seeking status\n   */\n  get seeking() {\n    return Boolean(this.media.seeking);\n  }\n\n  /**\n   * Get the duration of the current media\n   */\n  get duration() {\n    // Faux duration set via config\n    const fauxDuration = parseFloat(this.config.duration);\n    // Media duration can be NaN or Infinity before the media has loaded\n    const realDuration = (this.media || {}).duration;\n    const duration = !is.number(realDuration) || realDuration === Infinity ? 0 : realDuration;\n\n    // If config duration is funky, use regular duration\n    return fauxDuration || duration;\n  }\n\n  /**\n   * Set the player volume\n   * @param {Number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n   */\n  set volume(value) {\n    let volume = value;\n    const max = 1;\n    const min = 0;\n\n    if (is.string(volume)) {\n      volume = Number(volume);\n    }\n\n    // Load volume from storage if no value specified\n    if (!is.number(volume)) {\n      volume = this.storage.get('volume');\n    }\n\n    // Use config if all else fails\n    if (!is.number(volume)) {\n      ({ volume } = this.config);\n    }\n\n    // Maximum is volumeMax\n    if (volume > max) {\n      volume = max;\n    }\n    // Minimum is volumeMin\n    if (volume < min) {\n      volume = min;\n    }\n\n    // Update config\n    this.config.volume = volume;\n\n    // Set the player volume\n    this.media.volume = volume;\n\n    // If muted, and we're increasing volume manually, reset muted state\n    if (!is.empty(value) && this.muted && volume > 0) {\n      this.muted = false;\n    }\n  }\n\n  /**\n   * Get the current player volume\n   */\n  get volume() {\n    return Number(this.media.volume);\n  }\n\n  /**\n   * Increase volume\n   * @param {Boolean} step - How much to decrease by (between 0 and 1)\n   */\n  increaseVolume = (step) => {\n    const volume = this.media.muted ? 0 : this.volume;\n    this.volume = volume + (is.number(step) ? step : 0);\n  };\n\n  /**\n   * Decrease volume\n   * @param {Boolean} step - How much to decrease by (between 0 and 1)\n   */\n  decreaseVolume = (step) => {\n    this.increaseVolume(-step);\n  };\n\n  /**\n   * Set muted state\n   * @param {Boolean} mute\n   */\n  set muted(mute) {\n    let toggle = mute;\n\n    // Load muted state from storage\n    if (!is.boolean(toggle)) {\n      toggle = this.storage.get('muted');\n    }\n\n    // Use config if all else fails\n    if (!is.boolean(toggle)) {\n      toggle = this.config.muted;\n    }\n\n    // Update config\n    this.config.muted = toggle;\n\n    // Set mute on the player\n    this.media.muted = toggle;\n  }\n\n  /**\n   * Get current muted state\n   */\n  get muted() {\n    return Boolean(this.media.muted);\n  }\n\n  /**\n   * Check if the media has audio\n   */\n  get hasAudio() {\n    // Assume yes for all non HTML5 (as we can't tell...)\n    if (!this.isHTML5) {\n      return true;\n    }\n\n    if (this.isAudio) {\n      return true;\n    }\n\n    // Get audio tracks\n    return (\n      Boolean(this.media.mozHasAudio) ||\n      Boolean(this.media.webkitAudioDecodedByteCount) ||\n      Boolean(this.media.audioTracks && this.media.audioTracks.length)\n    );\n  }\n\n  /**\n   * Set playback speed\n   * @param {Number} input - the speed of playback (0.5-2.0)\n   */\n  set speed(input) {\n    let speed = null;\n\n    if (is.number(input)) {\n      speed = input;\n    }\n\n    if (!is.number(speed)) {\n      speed = this.storage.get('speed');\n    }\n\n    if (!is.number(speed)) {\n      speed = this.config.speed.selected;\n    }\n\n    // Clamp to min/max\n    const { minimumSpeed: min, maximumSpeed: max } = this;\n    speed = clamp(speed, min, max);\n\n    // Update config\n    this.config.speed.selected = speed;\n\n    // Set media speed\n    setTimeout(() => {\n      if (this.media) {\n        this.media.playbackRate = speed;\n      }\n    }, 0);\n  }\n\n  /**\n   * Get current playback speed\n   */\n  get speed() {\n    return Number(this.media.playbackRate);\n  }\n\n  /**\n   * Get the minimum allowed speed\n   */\n  get minimumSpeed() {\n    if (this.isYouTube) {\n      // https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate\n      return Math.min(...this.options.speed);\n    }\n\n    if (this.isVimeo) {\n      // https://github.com/vimeo/player.js/#setplaybackrateplaybackrate-number-promisenumber-rangeerrorerror\n      return 0.5;\n    }\n\n    // https://stackoverflow.com/a/32320020/1191319\n    return 0.0625;\n  }\n\n  /**\n   * Get the maximum allowed speed\n   */\n  get maximumSpeed() {\n    if (this.isYouTube) {\n      // https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate\n      return Math.max(...this.options.speed);\n    }\n\n    if (this.isVimeo) {\n      // https://github.com/vimeo/player.js/#setplaybackrateplaybackrate-number-promisenumber-rangeerrorerror\n      return 2;\n    }\n\n    // https://stackoverflow.com/a/32320020/1191319\n    return 16;\n  }\n\n  /**\n   * Set playback quality\n   * Currently HTML5 & YouTube only\n   * @param {Number} input - Quality level\n   */\n  set quality(input) {\n    const config = this.config.quality;\n    const options = this.options.quality;\n\n    if (!options.length) {\n      return;\n    }\n\n    let quality = [\n      !is.empty(input) && Number(input),\n      this.storage.get('quality'),\n      config.selected,\n      config.default,\n    ].find(is.number);\n\n    let updateStorage = true;\n\n    if (!options.includes(quality)) {\n      const value = closest(options, quality);\n      this.debug.warn(`Unsupported quality option: ${quality}, using ${value} instead`);\n      quality = value;\n\n      // Don't update storage if quality is not supported\n      updateStorage = false;\n    }\n\n    // Update config\n    config.selected = quality;\n\n    // Set quality\n    this.media.quality = quality;\n\n    // Save to storage\n    if (updateStorage) {\n      this.storage.set({ quality });\n    }\n  }\n\n  /**\n   * Get current quality level\n   */\n  get quality() {\n    return this.media.quality;\n  }\n\n  /**\n   * Toggle loop\n   * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n   * @param {Boolean} input - Whether to loop or not\n   */\n  set loop(input) {\n    const toggle = is.boolean(input) ? input : this.config.loop.active;\n    this.config.loop.active = toggle;\n    this.media.loop = toggle;\n\n    // Set default to be a true toggle\n    /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n\n        switch (type) {\n            case 'start':\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                    this.config.loop.end = null;\n                }\n                this.config.loop.start = this.currentTime;\n                // this.config.loop.indicator.start = this.elements.display.played.value;\n                break;\n\n            case 'end':\n                if (this.config.loop.start >= this.currentTime) {\n                    return this;\n                }\n                this.config.loop.end = this.currentTime;\n                // this.config.loop.indicator.end = this.elements.display.played.value;\n                break;\n\n            case 'all':\n                this.config.loop.start = 0;\n                this.config.loop.end = this.duration - 2;\n                this.config.loop.indicator.start = 0;\n                this.config.loop.indicator.end = 100;\n                break;\n\n            case 'toggle':\n                if (this.config.loop.active) {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = null;\n                } else {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = this.duration - 2;\n                }\n                break;\n\n            default:\n                this.config.loop.start = 0;\n                this.config.loop.end = null;\n                break;\n        } */\n  }\n\n  /**\n   * Get current loop state\n   */\n  get loop() {\n    return Boolean(this.media.loop);\n  }\n\n  /**\n   * Set new media source\n   * @param {Object} input - The new source object (see docs)\n   */\n  set source(input) {\n    source.change.call(this, input);\n  }\n\n  /**\n   * Get current source\n   */\n  get source() {\n    return this.media.currentSrc;\n  }\n\n  /**\n   * Get a download URL (either source or custom)\n   */\n  get download() {\n    const { download } = this.config.urls;\n\n    return is.url(download) ? download : this.source;\n  }\n\n  /**\n   * Set the download URL\n   */\n  set download(input) {\n    if (!is.url(input)) {\n      return;\n    }\n\n    this.config.urls.download = input;\n\n    controls.setDownloadUrl.call(this);\n  }\n\n  /**\n   * Set the poster image for a video\n   * @param {String} input - the URL for the new poster image\n   */\n  set poster(input) {\n    if (!this.isVideo) {\n      this.debug.warn('Poster can only be set for video');\n      return;\n    }\n\n    ui.setPoster.call(this, input, false).catch(() => {});\n  }\n\n  /**\n   * Get the current poster image\n   */\n  get poster() {\n    if (!this.isVideo) {\n      return null;\n    }\n\n    return (\n      this.media.getAttribute('poster') ||\n      this.media.getAttribute('data-poster') ||\n      this.media.getAttribute('data-poster-lazyload')\n    );\n  }\n\n  /**\n   * Get the current aspect ratio in use\n   */\n  get ratio() {\n    if (!this.isVideo) {\n      return null;\n    }\n\n    const ratio = reduceAspectRatio(getAspectRatio.call(this));\n\n    return is.array(ratio) ? ratio.join(':') : ratio;\n  }\n\n  /**\n   * Set video aspect ratio\n   */\n  set ratio(input) {\n    if (!this.isVideo) {\n      this.debug.warn('Aspect ratio can only be set for video');\n      return;\n    }\n\n    if (!is.string(input) || !validateAspectRatio(input)) {\n      this.debug.error(`Invalid aspect ratio specified (${input})`);\n      return;\n    }\n\n    this.config.ratio = reduceAspectRatio(input);\n\n    setAspectRatio.call(this);\n  }\n\n  /**\n   * Set the autoplay state\n   * @param {Boolean} input - Whether to autoplay or not\n   */\n  set autoplay(input) {\n    this.config.autoplay = is.boolean(input) ? input : this.config.autoplay;\n  }\n\n  /**\n   * Get the current autoplay state\n   */\n  get autoplay() {\n    return Boolean(this.config.autoplay);\n  }\n\n  /**\n   * Toggle captions\n   * @param {Boolean} input - Whether to enable captions\n   */\n  toggleCaptions(input) {\n    captions.toggle.call(this, input, false);\n  }\n\n  /**\n   * Set the caption track by index\n   * @param {Number} input - Caption index\n   */\n  set currentTrack(input) {\n    captions.set.call(this, input, false);\n    captions.setup.call(this);\n  }\n\n  /**\n   * Get the current caption track index (-1 if disabled)\n   */\n  get currentTrack() {\n    const { toggled, currentTrack } = this.captions;\n    return toggled ? currentTrack : -1;\n  }\n\n  /**\n   * Set the wanted language for captions\n   * Since tracks can be added later it won't update the actual caption track until there is a matching track\n   * @param {String} input - Two character ISO language code (e.g. EN, FR, PT, etc)\n   */\n  set language(input) {\n    captions.setLanguage.call(this, input, false);\n  }\n\n  /**\n   * Get the current track's language\n   */\n  get language() {\n    return (captions.getCurrentTrack.call(this) || {}).language;\n  }\n\n  /**\n   * Toggle picture-in-picture playback on WebKit/MacOS\n   * TODO: update player with state, support, enabled\n   * TODO: detect outside changes\n   */\n  set pip(input) {\n    // Bail if no support\n    if (!support.pip) {\n      return;\n    }\n\n    // Toggle based on current state if not passed\n    const toggle = is.boolean(input) ? input : !this.pip;\n\n    // Toggle based on current state\n    // Safari\n    if (is.function(this.media.webkitSetPresentationMode)) {\n      this.media.webkitSetPresentationMode(toggle ? pip.active : pip.inactive);\n    }\n\n    // Chrome\n    if (is.function(this.media.requestPictureInPicture)) {\n      if (!this.pip && toggle) {\n        this.media.requestPictureInPicture();\n      } else if (this.pip && !toggle) {\n        document.exitPictureInPicture();\n      }\n    }\n  }\n\n  /**\n   * Get the current picture-in-picture state\n   */\n  get pip() {\n    if (!support.pip) {\n      return null;\n    }\n\n    // Safari\n    if (!is.empty(this.media.webkitPresentationMode)) {\n      return this.media.webkitPresentationMode === pip.active;\n    }\n\n    // Chrome\n    return this.media === document.pictureInPictureElement;\n  }\n\n  /**\n   * Sets the preview thubmnails for the current source\n   */\n  setPreviewThumbnails(thumbnailSource) {\n    if (this.previewThumbnails && this.previewThumbnails.loaded) {\n      this.previewThumbnails.destroy();\n      this.previewThumbnails = null;\n    }\n\n    Object.assign(this.config.previewThumbnails, thumbnailSource);\n\n    // Create new instance if it is still enabled\n    if (this.config.previewThumbnails.enabled) {\n      this.previewThumbnails = new PreviewThumbnails(this);\n    }\n  }\n\n  /**\n   * Trigger the airplay dialog\n   * TODO: update player with state, support, enabled\n   */\n  airplay = () => {\n    // Show dialog if supported\n    if (support.airplay) {\n      this.media.webkitShowPlaybackTargetPicker();\n    }\n  };\n\n  /**\n   * Toggle the player controls\n   * @param {Boolean} [toggle] - Whether to show the controls\n   */\n  toggleControls = (toggle) => {\n    // Don't toggle if missing UI support or if it's audio\n    if (this.supported.ui && !this.isAudio) {\n      // Get state before change\n      const isHidden = hasClass(this.elements.container, this.config.classNames.hideControls);\n      // Negate the argument if not undefined since adding the class to hides the controls\n      const force = typeof toggle === 'undefined' ? undefined : !toggle;\n      // Apply and get updated state\n      const hiding = toggleClass(this.elements.container, this.config.classNames.hideControls, force);\n\n      // Close menu\n      if (\n        hiding &&\n        is.array(this.config.controls) &&\n        this.config.controls.includes('settings') &&\n        !is.empty(this.config.settings)\n      ) {\n        controls.toggleMenu.call(this, false);\n      }\n\n      // Trigger event on change\n      if (hiding !== isHidden) {\n        const eventName = hiding ? 'controlshidden' : 'controlsshown';\n        triggerEvent.call(this, this.media, eventName);\n      }\n\n      return !hiding;\n    }\n\n    return false;\n  };\n\n  /**\n   * Add event listeners\n   * @param {String} event - Event type\n   * @param {Function} callback - Callback for when event occurs\n   */\n  on = (event, callback) => {\n    on.call(this, this.elements.container, event, callback);\n  };\n\n  /**\n   * Add event listeners once\n   * @param {String} event - Event type\n   * @param {Function} callback - Callback for when event occurs\n   */\n  once = (event, callback) => {\n    once.call(this, this.elements.container, event, callback);\n  };\n\n  /**\n   * Remove event listeners\n   * @param {String} event - Event type\n   * @param {Function} callback - Callback for when event occurs\n   */\n  off = (event, callback) => {\n    off(this.elements.container, event, callback);\n  };\n\n  /**\n   * Destroy an instance\n   * Event listeners are removed when elements are removed\n   * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n   * @param {Function} callback - Callback for when destroy is complete\n   * @param {Boolean} soft - Whether it's a soft destroy (for source changes etc)\n   */\n  destroy = (callback, soft = false) => {\n    if (!this.ready) {\n      return;\n    }\n\n    const done = () => {\n      // Reset overflow (incase destroyed while in fullscreen)\n      document.body.style.overflow = '';\n\n      // GC for embed\n      this.embed = null;\n\n      // If it's a soft destroy, make minimal changes\n      if (soft) {\n        if (Object.keys(this.elements).length) {\n          // Remove elements\n          removeElement(this.elements.buttons.play);\n          removeElement(this.elements.captions);\n          removeElement(this.elements.controls);\n          removeElement(this.elements.wrapper);\n\n          // Clear for GC\n          this.elements.buttons.play = null;\n          this.elements.captions = null;\n          this.elements.controls = null;\n          this.elements.wrapper = null;\n        }\n\n        // Callback\n        if (is.function(callback)) {\n          callback();\n        }\n      } else {\n        // Unbind listeners\n        unbindListeners.call(this);\n\n        // Cancel current network requests\n        html5.cancelRequests.call(this);\n\n        // Replace the container with the original element provided\n        replaceElement(this.elements.original, this.elements.container);\n\n        // Event\n        triggerEvent.call(this, this.elements.original, 'destroyed', true);\n\n        // Callback\n        if (is.function(callback)) {\n          callback.call(this.elements.original);\n        }\n\n        // Reset state\n        this.ready = false;\n\n        // Clear for garbage collection\n        setTimeout(() => {\n          this.elements = null;\n          this.media = null;\n        }, 200);\n      }\n    };\n\n    // Stop playback\n    this.stop();\n\n    // Clear timeouts\n    clearTimeout(this.timers.loading);\n    clearTimeout(this.timers.controls);\n    clearTimeout(this.timers.resized);\n\n    // Provider specific stuff\n    if (this.isHTML5) {\n      // Restore native video controls\n      ui.toggleNativeControls.call(this, true);\n\n      // Clean up\n      done();\n    } else if (this.isYouTube) {\n      // Clear timers\n      clearInterval(this.timers.buffering);\n      clearInterval(this.timers.playing);\n\n      // Destroy YouTube API\n      if (this.embed !== null && is.function(this.embed.destroy)) {\n        this.embed.destroy();\n      }\n\n      // Clean up\n      done();\n    } else if (this.isVimeo) {\n      // Destroy Vimeo API\n      // then clean up (wait, to prevent postmessage errors)\n      if (this.embed !== null) {\n        this.embed.unload().then(done);\n      }\n\n      // Vimeo does not always return\n      setTimeout(done, 200);\n    }\n  };\n\n  /**\n   * Check for support for a mime type (HTML5 only)\n   * @param {String} type - Mime type\n   */\n  supports = (type) => support.mime.call(this, type);\n\n  /**\n   * Check for support\n   * @param {String} type - Player type (audio/video)\n   * @param {String} provider - Provider (html5/youtube/vimeo)\n   * @param {Boolean} inline - Where player has `playsinline` sttribute\n   */\n  static supported(type, provider, inline) {\n    return support.check(type, provider, inline);\n  }\n\n  /**\n   * Load an SVG sprite into the page\n   * @param {String} url - URL for the SVG sprite\n   * @param {String} [id] - Unique ID\n   */\n  static loadSprite(url, id) {\n    return loadSprite(url, id);\n  }\n\n  /**\n   * Setup multiple instances\n   * @param {*} selector\n   * @param {Object} options\n   */\n  static setup(selector, options = {}) {\n    let targets = null;\n\n    if (is.string(selector)) {\n      targets = Array.from(document.querySelectorAll(selector));\n    } else if (is.nodeList(selector)) {\n      targets = Array.from(selector);\n    } else if (is.array(selector)) {\n      targets = selector.filter(is.element);\n    }\n\n    if (is.empty(targets)) {\n      return null;\n    }\n\n    return targets.map((t) => new Plyr(t, options));\n  }\n}\n\nPlyr.defaults = cloneDeep(defaults);\n\nexport default Plyr;\n","const sources = {\n  video: {\n    type: 'video',\n    title: 'View From A Blue Moon',\n    sources: [\n      {\n        src: 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-576p.mp4',\n        type: 'video/mp4',\n        size: 576,\n      },\n      {\n        src: 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-720p.mp4',\n        type: 'video/mp4',\n        size: 720,\n      },\n      {\n        src: 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-1080p.mp4',\n        type: 'video/mp4',\n        size: 1080,\n      },\n      {\n        src: 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-1440p.mp4',\n        type: 'video/mp4',\n        size: 1440,\n      },\n    ],\n    poster: 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg',\n    tracks: [\n      {\n        kind: 'captions',\n        label: 'English',\n        srclang: 'en',\n        src: 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n        default: true,\n      },\n      {\n        kind: 'captions',\n        label: 'French',\n        srclang: 'fr',\n        src: 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt',\n      },\n    ],\n    previewThumbnails: {\n      src: ['https://cdn.plyr.io/static/demo/thumbs/100p.vtt', 'https://cdn.plyr.io/static/demo/thumbs/240p.vtt'],\n    },\n  },\n  audio: {\n    type: 'audio',\n    title: 'Kishi Bashi &ndash; &ldquo;It All Began With A Burst&rdquo;',\n    sources: [\n      {\n        src: 'https://cdn.plyr.io/static/demo/Kishi_Bashi_-_It_All_Began_With_a_Burst.mp3',\n        type: 'audio/mp3',\n      },\n      {\n        src: 'https://cdn.plyr.io/static/demo/Kishi_Bashi_-_It_All_Began_With_a_Burst.ogg',\n        type: 'audio/ogg',\n      },\n    ],\n  },\n  youtube: {\n    type: 'video',\n    sources: [\n      {\n        src: 'https://youtube.com/watch?v=bTqVqk7FSmY',\n        provider: 'youtube',\n      },\n    ],\n  },\n  vimeo: {\n    type: 'video',\n    sources: [\n      {\n        src: 'https://vimeo.com/40648169',\n        provider: 'vimeo',\n      },\n    ],\n  },\n};\n\nexport default sources;\n","// Toggle class on an element\nconst toggleClass = (element, className = '', toggle = false) =>\n  element && element.classList[toggle ? 'add' : 'remove'](className);\n\nexport default toggleClass;\n","// ==========================================================================\n// Plyr.io demo\n// This code is purely for the https://plyr.io website\n// Please see README.md in the root or github.com/sampotts/plyr\n// ==========================================================================\n\nimport './tab-focus';\nimport 'custom-event-polyfill';\nimport 'url-polyfill';\n\nimport * as Sentry from '@sentry/browser';\nimport Shr from 'shr-buttons';\n\nimport Plyr from '../../../src/js/plyr';\nimport sources from './sources';\nimport toggleClass from './toggle-class';\n\n(() => {\n  const production = 'plyr.io';\n  const isProduction = window.location.host.includes(production);\n\n  // Sentry for demo site (https://plyr.io) only\n  if (isProduction) {\n    Sentry.init({\n      dsn: 'https://d4ad9866ad834437a4754e23937071e4@sentry.io/305555',\n      whitelistUrls: [production].map((d) => new RegExp(`https://(([a-z0-9])+(.))*${d}`)),\n    });\n  }\n\n  document.addEventListener('DOMContentLoaded', () => {\n    const selector = '#player';\n\n    // Setup share buttons\n    Shr.setup('.js-shr', {\n      count: {\n        className: 'button__count',\n      },\n      wrapper: {\n        className: 'button--with-count',\n      },\n    });\n\n    // Setup the player\n    const player = new Plyr(selector, {\n      debug: true,\n      title: 'View From A Blue Moon',\n      iconUrl: 'dist/demo.svg',\n      keyboard: {\n        global: true,\n      },\n      tooltips: {\n        controls: true,\n      },\n      captions: {\n        active: true,\n      },\n      /* ads: {\n        enabled: isProduction,\n        publisherId: '918848828995742',\n      }, */\n      previewThumbnails: {\n        enabled: true,\n        src: ['https://cdn.plyr.io/static/demo/thumbs/100p.vtt', 'https://cdn.plyr.io/static/demo/thumbs/240p.vtt'],\n      },\n      vimeo: {\n        // Prevent Vimeo blocking plyr.io demo site\n        referrerPolicy: 'no-referrer',\n      },\n      mediaMetadata: {\n        title: 'View From A Blue Moon',\n        album: 'Sports',\n        artist: 'Brainfarm',\n        artwork: [\n          {\n            src: 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg',\n            type: 'image/jpeg',\n          },\n        ],\n      },\n      markers: {\n        enabled: true,\n        points: [\n          {\n            time: 10,\n            label: 'first marker',\n          },\n          {\n            time: 40,\n            label: 'second marker',\n          },\n          {\n            time: 120,\n            label: '<strong>third</strong> marker',\n          },\n        ],\n      },\n    });\n\n    // Expose for tinkering in the console\n    window.player = player;\n\n    // Setup type toggle\n    const buttons = document.querySelectorAll('[data-source]');\n    const types = Object.keys(sources);\n    const historySupport = Boolean(window.history && window.history.pushState);\n    let currentType = window.location.hash.substring(1);\n    const hasInitialType = currentType.length;\n\n    function render(type) {\n      // Remove active classes\n      Array.from(buttons).forEach((button) => toggleClass(button.parentElement, 'active', false));\n\n      // Set active on parent\n      toggleClass(document.querySelector(`[data-source=\"${type}\"]`), 'active', true);\n\n      // Show cite\n      Array.from(document.querySelectorAll('.plyr__cite')).forEach((cite) => {\n        // eslint-disable-next-line no-param-reassign\n        cite.hidden = true;\n      });\n\n      document.querySelector(`.plyr__cite--${type}`).hidden = false;\n    }\n\n    // Set a new source\n    function setSource(type, init) {\n      // Bail if new type isn't known, it's the current type, or current type is empty (video is default) and new type is video\n      if (!types.includes(type) || (!init && type === currentType) || (!currentType.length && type === 'video')) {\n        return;\n      }\n\n      // Set the new source\n      player.source = sources[type];\n\n      // Set the current type for next time\n      currentType = type;\n\n      render(type);\n    }\n\n    // Bind to each button\n    Array.from(buttons).forEach((button) => {\n      button.addEventListener('click', () => {\n        const type = button.getAttribute('data-source');\n\n        setSource(type);\n\n        if (historySupport) {\n          window.history.pushState({ type }, '', `#${type}`);\n        }\n      });\n    });\n\n    // List for backwards/forwards\n    window.addEventListener('popstate', (event) => {\n      if (event.state && Object.keys(event.state).includes('type')) {\n        setSource(event.state.type);\n      }\n    });\n\n    // If there's no current type set, assume video\n    if (!hasInitialType) {\n      currentType = 'video';\n    }\n\n    // Replace current history state\n    if (historySupport && types.includes(currentType)) {\n      window.history.replaceState({ type: currentType }, '', hasInitialType ? `#${currentType}` : '');\n    }\n\n    // If it's not video, load the source\n    if (currentType !== 'video') {\n      setSource(currentType, true);\n    }\n\n    render(currentType);\n  });\n})();\n"]}